
dune.ko:     format de fichier elf64-x86-64


Déassemblage de la section .text :

0000000000000000 <dune_apic_id>:
dune_apic_id():
       0:	e8 00 00 00 00       	callq  5 <dune_apic_id+0x5>
			1: R_X86_64_PC32	__fentry__-0x4
       5:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # c <dune_apic_id+0xc>
			8: R_X86_64_PC32	apic-0x4
       c:	55                   	push   %rbp
       d:	bf 20 00 00 00       	mov    $0x20,%edi
      12:	48 89 e5             	mov    %rsp,%rbp
      15:	48 8b 40 18          	mov    0x18(%rax),%rax
      19:	e8 00 00 00 00       	callq  1e <dune_apic_id+0x1e>
			1a: R_X86_64_PC32	__x86_indirect_thunk_rax-0x4
      1e:	89 c7                	mov    %eax,%edi
      20:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 27 <dune_apic_id+0x27>
			23: R_X86_64_PC32	apic-0x4
      27:	48 8b 80 e8 00 00 00 	mov    0xe8(%rax),%rax
      2e:	e8 00 00 00 00       	callq  33 <dune_apic_id+0x33>
			2f: R_X86_64_PC32	__x86_indirect_thunk_rax-0x4
      33:	5d                   	pop    %rbp
      34:	c3                   	retq   
      35:	90                   	nop
      36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
      3d:	00 00 00 

0000000000000040 <dune_apic_init>:
dune_apic_init():
      40:	e8 00 00 00 00       	callq  45 <dune_apic_init+0x5>
			41: R_X86_64_PC32	__fentry__-0x4
      45:	55                   	push   %rbp
      46:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
      4b:	48 89 e5             	mov    %rsp,%rbp
      4e:	41 54                	push   %r12
      50:	53                   	push   %rbx
      51:	49 c7 c4 00 00 00 00 	mov    $0x0,%r12
			54: R_X86_64_32S	x86_cpu_to_apicid
      58:	89 c3                	mov    %eax,%ebx
      5a:	eb 17                	jmp    73 <dune_apic_init+0x33>
      5c:	48 63 c8             	movslq %eax,%rcx
      5f:	4c 89 e2             	mov    %r12,%rdx
      62:	48 8b 0c cd 00 00 00 	mov    0x0(,%rcx,8),%rcx
      69:	00 
			66: R_X86_64_32S	__per_cpu_offset
      6a:	0f b7 14 11          	movzwl (%rcx,%rdx,1),%edx
      6e:	39 d3                	cmp    %edx,%ebx
      70:	0f 4c da             	cmovl  %edx,%ebx
      73:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			76: R_X86_64_32S	__cpu_possible_mask
      7a:	89 c7                	mov    %eax,%edi
      7c:	e8 00 00 00 00       	callq  81 <dune_apic_init+0x41>
			7d: R_X86_64_PC32	cpumask_next-0x4
      81:	3b 05 00 00 00 00    	cmp    0x0(%rip),%eax        # 87 <dune_apic_init+0x47>
			83: R_X86_64_PC32	nr_cpu_ids-0x4
      87:	72 d3                	jb     5c <dune_apic_init+0x1c>
      89:	83 fb ff             	cmp    $0xffffffff,%ebx
      8c:	74 4c                	je     da <dune_apic_init+0x9a>
      8e:	83 c3 01             	add    $0x1,%ebx
      91:	be c0 0c 00 00       	mov    $0xcc0,%esi
      96:	48 8d 3c 9d 00 00 00 	lea    0x0(,%rbx,4),%rdi
      9d:	00 
      9e:	89 1d 00 00 00 00    	mov    %ebx,0x0(%rip)        # a4 <dune_apic_init+0x64>
			a0: R_X86_64_PC32	.bss-0x4
      a4:	e8 00 00 00 00       	callq  a9 <dune_apic_init+0x69>
			a5: R_X86_64_PC32	__kmalloc-0x4
      a9:	48 85 c0             	test   %rax,%rax
      ac:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # b3 <dune_apic_init+0x73>
			af: R_X86_64_PC32	.bss+0x4
      b3:	74 25                	je     da <dune_apic_init+0x9a>
      b5:	48 63 15 00 00 00 00 	movslq 0x0(%rip),%rdx        # bc <dune_apic_init+0x7c>
			b8: R_X86_64_PC32	.bss-0x4
      bc:	be ff ff ff ff       	mov    $0xffffffff,%esi
      c1:	48 89 c7             	mov    %rax,%rdi
      c4:	48 c1 e2 02          	shl    $0x2,%rdx
      c8:	e8 00 00 00 00       	callq  cd <dune_apic_init+0x8d>
			c9: R_X86_64_PC32	memset-0x4
      cd:	0f ae f0             	mfence 
      d0:	b8 01 00 00 00       	mov    $0x1,%eax
      d5:	5b                   	pop    %rbx
      d6:	41 5c                	pop    %r12
      d8:	5d                   	pop    %rbp
      d9:	c3                   	retq   
      da:	5b                   	pop    %rbx
      db:	31 c0                	xor    %eax,%eax
      dd:	41 5c                	pop    %r12
      df:	5d                   	pop    %rbp
      e0:	c3                   	retq   
      e1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
      e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
      ed:	00 00 00 

00000000000000f0 <dune_apic_free>:
dune_apic_free():
      f0:	e8 00 00 00 00       	callq  f5 <dune_apic_free+0x5>
			f1: R_X86_64_PC32	__fentry__-0x4
      f5:	55                   	push   %rbp
      f6:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # fd <dune_apic_free+0xd>
			f9: R_X86_64_PC32	.bss+0x4
      fd:	48 89 e5             	mov    %rsp,%rbp
     100:	e8 00 00 00 00       	callq  105 <dune_apic_free+0x15>
			101: R_X86_64_PC32	kfree-0x4
     105:	5d                   	pop    %rbp
     106:	c3                   	retq   
     107:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     10e:	00 00 

0000000000000110 <dune_apic_init_rt_entry>:
dune_apic_init_rt_entry():
     110:	e8 00 00 00 00       	callq  115 <dune_apic_init_rt_entry+0x5>
			111: R_X86_64_PC32	__fentry__-0x4
     115:	55                   	push   %rbp
     116:	48 89 e5             	mov    %rsp,%rbp
     119:	41 54                	push   %r12
     11b:	53                   	push   %rbx
     11c:	65 44 8b 25 00 00 00 	mov    %gs:0x0(%rip),%r12d        # 124 <dune_apic_init_rt_entry+0x14>
     123:	00 
			120: R_X86_64_PC32	cpu_number-0x4
     124:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 12b <dune_apic_init_rt_entry+0x1b>
			127: R_X86_64_PC32	apic-0x4
     12b:	48 8b 1d 00 00 00 00 	mov    0x0(%rip),%rbx        # 132 <dune_apic_init_rt_entry+0x22>
			12e: R_X86_64_PC32	.bss+0x4
     132:	bf 20 00 00 00       	mov    $0x20,%edi
     137:	48 8b 40 18          	mov    0x18(%rax),%rax
     13b:	e8 00 00 00 00       	callq  140 <dune_apic_init_rt_entry+0x30>
			13c: R_X86_64_PC32	__x86_indirect_thunk_rax-0x4
     140:	89 c7                	mov    %eax,%edi
     142:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 149 <dune_apic_init_rt_entry+0x39>
			145: R_X86_64_PC32	apic-0x4
     149:	48 8b 80 e8 00 00 00 	mov    0xe8(%rax),%rax
     150:	e8 00 00 00 00       	callq  155 <dune_apic_init_rt_entry+0x45>
			151: R_X86_64_PC32	__x86_indirect_thunk_rax-0x4
     155:	89 c0                	mov    %eax,%eax
     157:	44 89 24 83          	mov    %r12d,(%rbx,%rax,4)
     15b:	0f ae f0             	mfence 
     15e:	5b                   	pop    %rbx
     15f:	41 5c                	pop    %r12
     161:	5d                   	pop    %rbp
     162:	c3                   	retq   
     163:	0f 1f 00             	nopl   (%rax)
     166:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     16d:	00 00 00 

0000000000000170 <dune_apic_get_cpu_id_for_apic>:
dune_apic_get_cpu_id_for_apic():
     170:	e8 00 00 00 00       	callq  175 <dune_apic_get_cpu_id_for_apic+0x5>
			171: R_X86_64_PC32	__fentry__-0x4
     175:	39 3d 00 00 00 00    	cmp    %edi,0x0(%rip)        # 17b <dune_apic_get_cpu_id_for_apic+0xb>
			177: R_X86_64_PC32	.bss-0x4
     17b:	55                   	push   %rbp
     17c:	48 89 e5             	mov    %rsp,%rbp
     17f:	77 0c                	ja     18d <dune_apic_get_cpu_id_for_apic+0x1d>
     181:	31 c0                	xor    %eax,%eax
     183:	48 85 f6             	test   %rsi,%rsi
     186:	74 03                	je     18b <dune_apic_get_cpu_id_for_apic+0x1b>
     188:	c6 06 01             	movb   $0x1,(%rsi)
     18b:	5d                   	pop    %rbp
     18c:	c3                   	retq   
     18d:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 194 <dune_apic_get_cpu_id_for_apic+0x24>
			190: R_X86_64_PC32	.bss+0x4
     194:	89 ff                	mov    %edi,%edi
     196:	5d                   	pop    %rbp
     197:	8b 04 b8             	mov    (%rax,%rdi,4),%eax
     19a:	c3                   	retq   
     19b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000001a0 <__default_send_IPI_dest_field>:
__default_send_IPI_dest_field():
     1a0:	e8 00 00 00 00       	callq  1a5 <__default_send_IPI_dest_field+0x5>
			1a1: R_X86_64_PC32	__fentry__-0x4
     1a5:	55                   	push   %rbp
     1a6:	48 89 e5             	mov    %rsp,%rbp
     1a9:	48 83 ec 10          	sub    $0x10,%rsp
     1ad:	83 fe 02             	cmp    $0x2,%esi
     1b0:	75 04                	jne    1b6 <__default_send_IPI_dest_field+0x16>
     1b2:	eb 2e                	jmp    1e2 <__default_send_IPI_dest_field+0x42>
     1b4:	f3 90                	pause  
     1b6:	8b 04 25 00 d3 5f ff 	mov    0xffffffffff5fd300,%eax
     1bd:	f6 c4 10             	test   $0x10,%ah
     1c0:	75 f2                	jne    1b4 <__default_send_IPI_dest_field+0x14>
     1c2:	c1 e7 18             	shl    $0x18,%edi
     1c5:	89 3c 25 10 d3 5f ff 	mov    %edi,0xffffffffff5fd310
     1cc:	89 f0                	mov    %esi,%eax
     1ce:	09 d0                	or     %edx,%eax
     1d0:	80 ce 04             	or     $0x4,%dh
     1d3:	83 fe 02             	cmp    $0x2,%esi
     1d6:	0f 45 d0             	cmovne %eax,%edx
     1d9:	89 14 25 00 d3 5f ff 	mov    %edx,0xffffffffff5fd300
     1e0:	c9                   	leaveq 
     1e1:	c3                   	retq   
     1e2:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 1e9 <__default_send_IPI_dest_field+0x49>
			1e5: R_X86_64_PC32	apic-0x4
     1e9:	89 55 f4             	mov    %edx,-0xc(%rbp)
     1ec:	89 75 f8             	mov    %esi,-0x8(%rbp)
     1ef:	89 7d fc             	mov    %edi,-0x4(%rbp)
     1f2:	48 8b 40 28          	mov    0x28(%rax),%rax
     1f6:	e8 00 00 00 00       	callq  1fb <__default_send_IPI_dest_field+0x5b>
			1f7: R_X86_64_PC32	__x86_indirect_thunk_rax-0x4
     1fb:	8b 7d fc             	mov    -0x4(%rbp),%edi
     1fe:	8b 75 f8             	mov    -0x8(%rbp),%esi
     201:	8b 55 f4             	mov    -0xc(%rbp),%edx
     204:	eb bc                	jmp    1c2 <__default_send_IPI_dest_field+0x22>
     206:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     20d:	00 00 00 

0000000000000210 <dune_apic_send_ipi>:
dune_apic_send_ipi():
     210:	e8 00 00 00 00       	callq  215 <dune_apic_send_ipi+0x5>
			211: R_X86_64_PC32	__fentry__-0x4
     215:	55                   	push   %rbp
     216:	48 89 e5             	mov    %rsp,%rbp
     219:	41 55                	push   %r13
     21b:	41 54                	push   %r12
     21d:	53                   	push   %rbx
     21e:	41 89 fc             	mov    %edi,%r12d
     221:	89 f3                	mov    %esi,%ebx
     223:	48 83 ec 10          	sub    $0x10,%rsp
     227:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
     22e:	00 00 
     230:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
     234:	31 c0                	xor    %eax,%eax
     236:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 23d <dune_apic_send_ipi+0x2d>
			239: R_X86_64_PC32	boot_cpu_data+0x20
     23d:	a9 00 00 20 00       	test   $0x200000,%eax
     242:	74 4e                	je     292 <dune_apic_send_ipi+0x82>
     244:	48 8d 75 dc          	lea    -0x24(%rbp),%rsi
     248:	bf 1b 00 00 00       	mov    $0x1b,%edi
     24d:	ff 14 25 00 00 00 00 	callq  *0x0
			250: R_X86_64_32S	pv_ops+0xd8
     254:	8b 55 dc             	mov    -0x24(%rbp),%edx
     257:	85 d2                	test   %edx,%edx
     259:	75 37                	jne    292 <dune_apic_send_ipi+0x82>
     25b:	f6 c4 04             	test   $0x4,%ah
     25e:	74 32                	je     292 <dune_apic_send_ipi+0x82>
     260:	41 0f b6 d4          	movzbl %r12b,%edx
     264:	41 80 fc 02          	cmp    $0x2,%r12b
     268:	bf 00 04 00 00       	mov    $0x400,%edi
     26d:	48 0f 45 fa          	cmovne %rdx,%rdi
     271:	0f ae f0             	mfence 
     274:	48 89 da             	mov    %rbx,%rdx
     277:	48 c1 e2 20          	shl    $0x20,%rdx
     27b:	48 09 fa             	or     %rdi,%rdx
     27e:	bf 30 08 00 00       	mov    $0x830,%edi
     283:	89 d6                	mov    %edx,%esi
     285:	48 c1 ea 20          	shr    $0x20,%rdx
     289:	ff 14 25 00 00 00 00 	callq  *0x0
			28c: R_X86_64_32S	pv_ops+0xd0
     290:	eb 0e                	jmp    2a0 <dune_apic_send_ipi+0x90>
     292:	41 0f b6 f4          	movzbl %r12b,%esi
     296:	0f b6 fb             	movzbl %bl,%edi
     299:	31 d2                	xor    %edx,%edx
     29b:	e8 00 00 00 00       	callq  2a0 <dune_apic_send_ipi+0x90>
			29c: R_X86_64_PC32	__default_send_IPI_dest_field-0x4
     2a0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
     2a4:	65 48 33 04 25 28 00 	xor    %gs:0x28,%rax
     2ab:	00 00 
     2ad:	75 0b                	jne    2ba <dune_apic_send_ipi+0xaa>
     2af:	48 83 c4 10          	add    $0x10,%rsp
     2b3:	5b                   	pop    %rbx
     2b4:	41 5c                	pop    %r12
     2b6:	41 5d                	pop    %r13
     2b8:	5d                   	pop    %rbp
     2b9:	c3                   	retq   
     2ba:	e8 00 00 00 00       	callq  2bf <dune_apic_send_ipi+0xaf>
			2bb: R_X86_64_PC32	__stack_chk_fail-0x4
     2bf:	90                   	nop

00000000000002c0 <dune_apic_write_eoi>:
dune_apic_write_eoi():
     2c0:	e8 00 00 00 00       	callq  2c5 <dune_apic_write_eoi+0x5>
			2c1: R_X86_64_PC32	__fentry__-0x4
     2c5:	55                   	push   %rbp
     2c6:	48 89 e5             	mov    %rsp,%rbp
     2c9:	48 83 ec 10          	sub    $0x10,%rsp
     2cd:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
     2d4:	00 00 
     2d6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
     2da:	31 c0                	xor    %eax,%eax
     2dc:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 2e3 <dune_apic_write_eoi+0x23>
			2df: R_X86_64_PC32	boot_cpu_data+0x20
     2e3:	a9 00 00 20 00       	test   $0x200000,%eax
     2e8:	75 1a                	jne    304 <dune_apic_write_eoi+0x44>
     2ea:	31 c0                	xor    %eax,%eax
     2ec:	89 04 25 b0 d0 5f ff 	mov    %eax,0xffffffffff5fd0b0
     2f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     2f7:	65 48 33 04 25 28 00 	xor    %gs:0x28,%rax
     2fe:	00 00 
     300:	75 31                	jne    333 <dune_apic_write_eoi+0x73>
     302:	c9                   	leaveq 
     303:	c3                   	retq   
     304:	48 8d 75 f4          	lea    -0xc(%rbp),%rsi
     308:	bf 1b 00 00 00       	mov    $0x1b,%edi
     30d:	ff 14 25 00 00 00 00 	callq  *0x0
			310: R_X86_64_32S	pv_ops+0xd8
     314:	8b 55 f4             	mov    -0xc(%rbp),%edx
     317:	85 d2                	test   %edx,%edx
     319:	75 cf                	jne    2ea <dune_apic_write_eoi+0x2a>
     31b:	f6 c4 04             	test   $0x4,%ah
     31e:	74 ca                	je     2ea <dune_apic_write_eoi+0x2a>
     320:	31 d2                	xor    %edx,%edx
     322:	bf 0b 08 00 00       	mov    $0x80b,%edi
     327:	48 89 d6             	mov    %rdx,%rsi
     32a:	ff 14 25 00 00 00 00 	callq  *0x0
			32d: R_X86_64_32S	pv_ops+0xd0
     331:	eb c0                	jmp    2f3 <dune_apic_write_eoi+0x33>
     333:	e8 00 00 00 00       	callq  338 <dune_apic_write_eoi+0x78>
			334: R_X86_64_PC32	__stack_chk_fail-0x4
     338:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
     33f:	00 

0000000000000340 <dune_is_in_guest>:
dune_is_in_guest():
     340:	e8 00 00 00 00       	callq  345 <dune_is_in_guest+0x5>
			341: R_X86_64_PC32	__fentry__-0x4
     345:	55                   	push   %rbp
     346:	65 48 8b 05 00 00 00 	mov    %gs:0x0(%rip),%rax        # 34e <dune_is_in_guest+0xe>
     34d:	00 
			34a: R_X86_64_PC32	local_vcpu-0x4
     34e:	48 85 c0             	test   %rax,%rax
     351:	48 89 e5             	mov    %rsp,%rbp
     354:	0f 95 c0             	setne  %al
     357:	0f b6 c0             	movzbl %al,%eax
     35a:	5d                   	pop    %rbp
     35b:	c3                   	retq   
     35c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000360 <dune_is_user_mode>:
dune_is_user_mode():
     360:	e8 00 00 00 00       	callq  365 <dune_is_user_mode+0x5>
			361: R_X86_64_PC32	__fentry__-0x4
     365:	55                   	push   %rbp
     366:	31 c0                	xor    %eax,%eax
     368:	48 89 e5             	mov    %rsp,%rbp
     36b:	5d                   	pop    %rbp
     36c:	c3                   	retq   
     36d:	0f 1f 00             	nopl   (%rax)

0000000000000370 <dune_get_guest_ip>:
dune_get_guest_ip():
     370:	e8 00 00 00 00       	callq  375 <dune_get_guest_ip+0x5>
			371: R_X86_64_PC32	__fentry__-0x4
     375:	55                   	push   %rbp
     376:	31 c0                	xor    %eax,%eax
     378:	65 48 8b 15 00 00 00 	mov    %gs:0x0(%rip),%rdx        # 380 <dune_get_guest_ip+0x10>
     37f:	00 
			37c: R_X86_64_PC32	local_vcpu-0x4
     380:	48 85 d2             	test   %rdx,%rdx
     383:	48 89 e5             	mov    %rsp,%rbp
     386:	74 08                	je     390 <dune_get_guest_ip+0x20>
     388:	ba 1e 68 00 00       	mov    $0x681e,%edx
     38d:	0f 78 d0             	vmread %rdx,%rax
     390:	5d                   	pop    %rbp
     391:	c3                   	retq   
     392:	0f 1f 40 00          	nopl   0x0(%rax)
     396:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     39d:	00 00 00 

00000000000003a0 <dune_dev_release>:
dune_dev_release():
     3a0:	e8 00 00 00 00       	callq  3a5 <dune_dev_release+0x5>
			3a1: R_X86_64_PC32	__fentry__-0x4
     3a5:	55                   	push   %rbp
     3a6:	48 89 e5             	mov    %rsp,%rbp
     3a9:	e8 00 00 00 00       	callq  3ae <dune_dev_release+0xe>
			3aa: R_X86_64_PC32	vmx_cleanup-0x4
     3ae:	31 c0                	xor    %eax,%eax
     3b0:	5d                   	pop    %rbp
     3b1:	c3                   	retq   
     3b2:	0f 1f 40 00          	nopl   0x0(%rax)
     3b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     3bd:	00 00 00 

00000000000003c0 <dune_dev_ioctl>:
dune_dev_ioctl():
     3c0:	e8 00 00 00 00       	callq  3c5 <dune_dev_ioctl+0x5>
			3c1: R_X86_64_PC32	__fentry__-0x4
     3c5:	55                   	push   %rbp
     3c6:	48 89 e5             	mov    %rsp,%rbp
     3c9:	41 54                	push   %r12
     3cb:	53                   	push   %rbx
     3cc:	49 89 d4             	mov    %rdx,%r12
     3cf:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
     3d6:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
     3dd:	00 00 
     3df:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
     3e3:	31 c0                	xor    %eax,%eax
     3e5:	81 fe 03 e9 18 40    	cmp    $0x4018e903,%esi
     3eb:	0f 84 9d 00 00 00    	je     48e <dune_dev_ioctl+0xce>
     3f1:	76 56                	jbe    449 <dune_dev_ioctl+0x89>
     3f3:	81 fe 04 e9 29 80    	cmp    $0x8029e904,%esi
     3f9:	0f 84 2c 01 00 00    	je     52b <dune_dev_ioctl+0x16b>
     3ff:	81 fe 01 e9 b0 80    	cmp    $0x80b0e901,%esi
     405:	0f 85 14 01 00 00    	jne    51f <dune_dev_ioctl+0x15f>
     40b:	48 8d bd 38 ff ff ff 	lea    -0xc8(%rbp),%rdi
     412:	ba b0 00 00 00       	mov    $0xb0,%edx
     417:	4c 89 e6             	mov    %r12,%rsi
     41a:	e8 00 00 00 00       	callq  41f <dune_dev_ioctl+0x5f>
			41b: R_X86_64_PC32	_copy_from_user-0x4
     41f:	48 85 c0             	test   %rax,%rax
     422:	0f 85 13 01 00 00    	jne    53b <dune_dev_ioctl+0x17b>
     428:	48 8d b5 38 ff ff ff 	lea    -0xc8(%rbp),%rsi
     42f:	48 89 f7             	mov    %rsi,%rdi
     432:	e8 00 00 00 00       	callq  437 <dune_dev_ioctl+0x77>
			433: R_X86_64_PC32	vmx_launch-0x4
     437:	48 63 d8             	movslq %eax,%rbx
     43a:	ba b0 00 00 00       	mov    $0xb0,%edx
     43f:	48 85 db             	test   %rbx,%rbx
     442:	75 28                	jne    46c <dune_dev_ioctl+0xac>
     444:	e9 bb 00 00 00       	jmpq   504 <dune_dev_ioctl+0x144>
     449:	81 fe 02 e9 00 00    	cmp    $0xe902,%esi
     44f:	0f 84 f2 00 00 00    	je     547 <dune_dev_ioctl+0x187>
     455:	81 fe 05 e9 00 00    	cmp    $0xe905,%esi
     45b:	0f 85 be 00 00 00    	jne    51f <dune_dev_ioctl+0x15f>
     461:	48 89 d7             	mov    %rdx,%rdi
     464:	e8 00 00 00 00       	callq  469 <dune_dev_ioctl+0xa9>
			465: R_X86_64_PC32	dune_trap_disable-0x4
     469:	48 89 c3             	mov    %rax,%rbx
     46c:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
     470:	65 48 33 0c 25 28 00 	xor    %gs:0x28,%rcx
     477:	00 00 
     479:	48 89 d8             	mov    %rbx,%rax
     47c:	0f 85 e8 00 00 00    	jne    56a <dune_dev_ioctl+0x1aa>
     482:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp
     489:	5b                   	pop    %rbx
     48a:	41 5c                	pop    %r12
     48c:	5d                   	pop    %rbp
     48d:	c3                   	retq   
     48e:	0f b6 0d 00 00 00 00 	movzbl 0x0(%rip),%ecx        # 495 <dune_dev_ioctl+0xd5>
			491: R_X86_64_PC32	boot_cpu_data+0x5
     495:	b8 01 00 00 00       	mov    $0x1,%eax
     49a:	65 48 8b 14 25 00 00 	mov    %gs:0x0,%rdx
     4a1:	00 00 
			49f: R_X86_64_32S	current_task
     4a3:	48 d3 e0             	shl    %cl,%rax
     4a6:	48 b9 00 00 00 40 f0 	movabs $0xfffffff040000000,%rcx
     4ad:	ff ff ff 
     4b0:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
     4b7:	48 8b 82 18 08 00 00 	mov    0x818(%rdx),%rax
     4be:	48 8b 40 20          	mov    0x20(%rax),%rax
     4c2:	48 05 ff ff ff 3f    	add    $0x3fffffff,%rax
     4c8:	48 25 00 00 00 c0    	and    $0xffffffffc0000000,%rax
     4ce:	48 01 c8             	add    %rcx,%rax
     4d1:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
     4d8:	48 8b 82 18 08 00 00 	mov    0x818(%rdx),%rax
     4df:	ba 18 00 00 00       	mov    $0x18,%edx
     4e4:	48 8b 80 30 01 00 00 	mov    0x130(%rax),%rax
     4eb:	48 05 ff ff ff 3f    	add    $0x3fffffff,%rax
     4f1:	48 25 00 00 00 c0    	and    $0xffffffffc0000000,%rax
     4f7:	48 2d 00 00 00 40    	sub    $0x40000000,%rax
     4fd:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
     504:	48 8d b5 38 ff ff ff 	lea    -0xc8(%rbp),%rsi
     50b:	4c 89 e7             	mov    %r12,%rdi
     50e:	e8 00 00 00 00       	callq  513 <dune_dev_ioctl+0x153>
			50f: R_X86_64_PC32	_copy_to_user-0x4
     513:	48 85 c0             	test   %rax,%rax
     516:	75 23                	jne    53b <dune_dev_ioctl+0x17b>
     518:	31 db                	xor    %ebx,%ebx
     51a:	e9 4d ff ff ff       	jmpq   46c <dune_dev_ioctl+0xac>
     51f:	48 c7 c3 e7 ff ff ff 	mov    $0xffffffffffffffe7,%rbx
     526:	e9 41 ff ff ff       	jmpq   46c <dune_dev_ioctl+0xac>
     52b:	48 89 d7             	mov    %rdx,%rdi
     52e:	e8 00 00 00 00       	callq  533 <dune_dev_ioctl+0x173>
			52f: R_X86_64_PC32	dune_trap_enable-0x4
     533:	48 89 c3             	mov    %rax,%rbx
     536:	e9 31 ff ff ff       	jmpq   46c <dune_dev_ioctl+0xac>
     53b:	48 c7 c3 fb ff ff ff 	mov    $0xfffffffffffffffb,%rbx
     542:	e9 25 ff ff ff       	jmpq   46c <dune_dev_ioctl+0xac>
     547:	bf 82 00 00 c0       	mov    $0xc0000082,%edi
     54c:	ff 14 25 00 00 00 00 	callq  *0x0
			54f: R_X86_64_32S	pv_ops+0xc8
     553:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			556: R_X86_64_32S	.rodata.str1.1
     55a:	48 89 c6             	mov    %rax,%rsi
     55d:	48 89 c3             	mov    %rax,%rbx
     560:	e8 00 00 00 00       	callq  565 <dune_dev_ioctl+0x1a5>
			561: R_X86_64_PC32	printk-0x4
     565:	e9 02 ff ff ff       	jmpq   46c <dune_dev_ioctl+0xac>
     56a:	e8 00 00 00 00       	callq  56f <dune_dev_ioctl+0x1af>
			56b: R_X86_64_PC32	__stack_chk_fail-0x4
     56f:	90                   	nop

0000000000000570 <arch_local_irq_enable>:
arch_local_irq_enable():
     570:	55                   	push   %rbp
     571:	48 89 e5             	mov    %rsp,%rbp
     574:	ff 14 25 00 00 00 00 	callq  *0x0
			577: R_X86_64_32S	pv_ops+0x130
     57b:	5d                   	pop    %rbp
     57c:	c3                   	retq   
     57d:	0f 1f 00             	nopl   (%rax)

0000000000000580 <segment_base>:
segment_base():
     580:	e8 00 00 00 00       	callq  585 <segment_base+0x5>
			581: R_X86_64_PC32	__fentry__-0x4
     585:	55                   	push   %rbp
     586:	48 c7 c2 00 00 00 00 	mov    $0x0,%rdx
			589: R_X86_64_32S	.data..percpu+0x8
     58d:	48 89 e5             	mov    %rsp,%rbp
     590:	53                   	push   %rbx
     591:	65 48 03 15 00 00 00 	add    %gs:0x0(%rip),%rdx        # 599 <segment_base+0x19>
     598:	00 
			595: R_X86_64_PC32	this_cpu_off-0x4
     599:	0f b7 df             	movzwl %di,%ebx
     59c:	31 c0                	xor    %eax,%eax
     59e:	f7 c3 fc ff 00 00    	test   $0xfffc,%ebx
     5a4:	74 28                	je     5ce <segment_base+0x4e>
     5a6:	83 e7 04             	and    $0x4,%edi
     5a9:	75 26                	jne    5d1 <segment_base+0x51>
     5ab:	48 8b 42 02          	mov    0x2(%rdx),%rax
     5af:	81 e3 f8 ff 00 00    	and    $0xfff8,%ebx
     5b5:	48 01 c3             	add    %rax,%rbx
     5b8:	0f b6 43 04          	movzbl 0x4(%rbx),%eax
     5bc:	0f b6 53 07          	movzbl 0x7(%rbx),%edx
     5c0:	c1 e0 10             	shl    $0x10,%eax
     5c3:	c1 e2 18             	shl    $0x18,%edx
     5c6:	09 d0                	or     %edx,%eax
     5c8:	0f b7 53 02          	movzwl 0x2(%rbx),%edx
     5cc:	09 d0                	or     %edx,%eax
     5ce:	5b                   	pop    %rbx
     5cf:	5d                   	pop    %rbp
     5d0:	c3                   	retq   
     5d1:	66 0f 00 c7          	sldt   %di
     5d5:	0f b7 ff             	movzwl %di,%edi
     5d8:	f7 c7 fc ff 00 00    	test   $0xfffc,%edi
     5de:	74 ee                	je     5ce <segment_base+0x4e>
     5e0:	e8 9b ff ff ff       	callq  580 <segment_base>
     5e5:	eb c8                	jmp    5af <segment_base+0x2f>
     5e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     5ee:	00 00 

00000000000005f0 <dune_exit>:
dune_exit():
     5f0:	e8 00 00 00 00       	callq  5f5 <dune_exit+0x5>
			5f1: R_X86_64_PC32	__fentry__-0x4
     5f5:	48 ba 01 00 00 00 01 	movabs $0x100000001,%rdx
     5fc:	00 00 00 
     5ff:	55                   	push   %rbp
     600:	48 63 ff             	movslq %edi,%rdi
     603:	4c 89 d8             	mov    %r11,%rax
     606:	48 89 90 18 01 00 00 	mov    %rdx,0x118(%rax)
     60d:	48 8b 80 40 02 00 00 	mov    0x240(%rax),%rax
     614:	48 89 e5             	mov    %rsp,%rbp
     617:	48 89 b8 a0 00 00 00 	mov    %rdi,0xa0(%rax)
     61e:	31 c0                	xor    %eax,%eax
     620:	5d                   	pop    %rbp
     621:	c3                   	retq   
     622:	0f 1f 40 00          	nopl   0x0(%rax)
     626:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     62d:	00 00 00 

0000000000000630 <dune_exit_group>:
dune_exit_group():
     630:	e8 00 00 00 00       	callq  635 <dune_exit_group+0x5>
			631: R_X86_64_PC32	__fentry__-0x4
     635:	55                   	push   %rbp
     636:	48 89 e5             	mov    %rsp,%rbp
     639:	e8 b2 ff ff ff       	callq  5f0 <dune_exit>
     63e:	5d                   	pop    %rbp
     63f:	c3                   	retq   

0000000000000640 <vmcs_clear>:
vmcs_clear():
     640:	e8 00 00 00 00       	callq  645 <vmcs_clear+0x5>
			641: R_X86_64_PC32	__fentry__-0x4
     645:	55                   	push   %rbp
     646:	48 89 e5             	mov    %rsp,%rbp
     649:	48 83 ec 10          	sub    $0x10,%rsp
     64d:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
     654:	00 00 
     656:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
     65a:	31 c0                	xor    %eax,%eax
     65c:	b8 00 00 00 80       	mov    $0x80000000,%eax
     661:	48 01 f8             	add    %rdi,%rax
     664:	72 35                	jb     69b <vmcs_clear+0x5b>
     666:	48 c7 c2 00 00 00 80 	mov    $0xffffffff80000000,%rdx
     66d:	48 2b 15 00 00 00 00 	sub    0x0(%rip),%rdx        # 674 <vmcs_clear+0x34>
			670: R_X86_64_PC32	page_offset_base-0x4
     674:	48 01 d0             	add    %rdx,%rax
     677:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
     67b:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
     67f:	66 0f c7 30          	vmclear (%rax)
     683:	0f 96 c0             	setbe  %al
     686:	84 c0                	test   %al,%al
     688:	75 1f                	jne    6a9 <vmcs_clear+0x69>
     68a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     68e:	65 48 33 04 25 28 00 	xor    %gs:0x28,%rax
     695:	00 00 
     697:	75 0b                	jne    6a4 <vmcs_clear+0x64>
     699:	c9                   	leaveq 
     69a:	c3                   	retq   
     69b:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 6a2 <vmcs_clear+0x62>
			69e: R_X86_64_PC32	phys_base-0x4
     6a2:	eb d0                	jmp    674 <vmcs_clear+0x34>
     6a4:	e8 00 00 00 00       	callq  6a9 <vmcs_clear+0x69>
			6a5: R_X86_64_PC32	__stack_chk_fail-0x4
     6a9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
     6ad:	48 89 fe             	mov    %rdi,%rsi
     6b0:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			6b3: R_X86_64_32S	.rodata.str1.1+0x24
     6b7:	e8 00 00 00 00       	callq  6bc <vmcs_clear+0x7c>
			6b8: R_X86_64_PC32	printk-0x4
     6bc:	eb cc                	jmp    68a <vmcs_clear+0x4a>
     6be:	66 90                	xchg   %ax,%ax

00000000000006c0 <vmcs_load>:
vmcs_load():
     6c0:	e8 00 00 00 00       	callq  6c5 <vmcs_load+0x5>
			6c1: R_X86_64_PC32	__fentry__-0x4
     6c5:	55                   	push   %rbp
     6c6:	48 89 e5             	mov    %rsp,%rbp
     6c9:	48 83 ec 10          	sub    $0x10,%rsp
     6cd:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
     6d4:	00 00 
     6d6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
     6da:	31 c0                	xor    %eax,%eax
     6dc:	b8 00 00 00 80       	mov    $0x80000000,%eax
     6e1:	48 01 f8             	add    %rdi,%rax
     6e4:	72 34                	jb     71a <vmcs_load+0x5a>
     6e6:	48 c7 c2 00 00 00 80 	mov    $0xffffffff80000000,%rdx
     6ed:	48 2b 15 00 00 00 00 	sub    0x0(%rip),%rdx        # 6f4 <vmcs_load+0x34>
			6f0: R_X86_64_PC32	page_offset_base-0x4
     6f4:	48 01 d0             	add    %rdx,%rax
     6f7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
     6fb:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
     6ff:	0f c7 30             	vmptrld (%rax)
     702:	0f 96 c0             	setbe  %al
     705:	84 c0                	test   %al,%al
     707:	75 1f                	jne    728 <vmcs_load+0x68>
     709:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     70d:	65 48 33 04 25 28 00 	xor    %gs:0x28,%rax
     714:	00 00 
     716:	75 0b                	jne    723 <vmcs_load+0x63>
     718:	c9                   	leaveq 
     719:	c3                   	retq   
     71a:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 721 <vmcs_load+0x61>
			71d: R_X86_64_PC32	phys_base-0x4
     721:	eb d1                	jmp    6f4 <vmcs_load+0x34>
     723:	e8 00 00 00 00       	callq  728 <vmcs_load+0x68>
			724: R_X86_64_PC32	__stack_chk_fail-0x4
     728:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
     72c:	48 89 fe             	mov    %rdi,%rsi
     72f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			732: R_X86_64_32S	.rodata.str1.8+0x50
     736:	e8 00 00 00 00       	callq  73b <vmcs_load+0x7b>
			737: R_X86_64_PC32	printk-0x4
     73b:	eb cc                	jmp    709 <vmcs_load+0x49>
     73d:	0f 1f 00             	nopl   (%rax)

0000000000000740 <vmwrite_error>:
vmwrite_error():
     740:	e8 00 00 00 00       	callq  745 <vmwrite_error+0x5>
			741: R_X86_64_PC32	__fentry__-0x4
     745:	55                   	push   %rbp
     746:	ba 00 44 00 00       	mov    $0x4400,%edx
     74b:	48 89 e5             	mov    %rsp,%rbp
     74e:	0f 78 d0             	vmread %rdx,%rax
     751:	48 89 f2             	mov    %rsi,%rdx
     754:	89 c1                	mov    %eax,%ecx
     756:	48 89 fe             	mov    %rdi,%rsi
     759:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			75c: R_X86_64_32S	.rodata.str1.8+0x70
     760:	e8 00 00 00 00       	callq  765 <vmwrite_error+0x25>
			761: R_X86_64_PC32	printk-0x4
     765:	e8 00 00 00 00       	callq  76a <vmwrite_error+0x2a>
			766: R_X86_64_PC32	dump_stack-0x4
     76a:	5d                   	pop    %rbp
     76b:	c3                   	retq   
     76c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000770 <vmx_setup_registers>:
vmx_setup_registers():
     770:	e8 00 00 00 00       	callq  775 <vmx_setup_registers+0x5>
			771: R_X86_64_PC32	__fentry__-0x4
     775:	55                   	push   %rbp
     776:	ba 1e 68 00 00       	mov    $0x681e,%edx
     77b:	48 89 e5             	mov    %rsp,%rbp
     77e:	53                   	push   %rbx
     77f:	48 8b 46 08          	mov    0x8(%rsi),%rax
     783:	48 89 f3             	mov    %rsi,%rbx
     786:	48 89 87 88 00 00 00 	mov    %rax,0x88(%rdi)
     78d:	48 8b 46 10          	mov    0x10(%rsi),%rax
     791:	48 89 87 a0 00 00 00 	mov    %rax,0xa0(%rdi)
     798:	48 8b 46 18          	mov    0x18(%rsi),%rax
     79c:	48 89 87 90 00 00 00 	mov    %rax,0x90(%rdi)
     7a3:	48 8b 46 20          	mov    0x20(%rsi),%rax
     7a7:	48 89 87 98 00 00 00 	mov    %rax,0x98(%rdi)
     7ae:	48 8b 46 28          	mov    0x28(%rsi),%rax
     7b2:	48 89 87 b8 00 00 00 	mov    %rax,0xb8(%rdi)
     7b9:	48 8b 46 30          	mov    0x30(%rsi),%rax
     7bd:	48 89 87 c0 00 00 00 	mov    %rax,0xc0(%rdi)
     7c4:	48 8b 46 40          	mov    0x40(%rsi),%rax
     7c8:	48 89 87 b0 00 00 00 	mov    %rax,0xb0(%rdi)
     7cf:	48 8b 46 48          	mov    0x48(%rsi),%rax
     7d3:	48 89 87 c8 00 00 00 	mov    %rax,0xc8(%rdi)
     7da:	48 8b 46 50          	mov    0x50(%rsi),%rax
     7de:	48 89 87 d0 00 00 00 	mov    %rax,0xd0(%rdi)
     7e5:	48 8b 46 58          	mov    0x58(%rsi),%rax
     7e9:	48 89 87 d8 00 00 00 	mov    %rax,0xd8(%rdi)
     7f0:	48 8b 46 60          	mov    0x60(%rsi),%rax
     7f4:	48 89 87 e0 00 00 00 	mov    %rax,0xe0(%rdi)
     7fb:	48 8b 46 68          	mov    0x68(%rsi),%rax
     7ff:	48 89 87 e8 00 00 00 	mov    %rax,0xe8(%rdi)
     806:	48 8b 46 70          	mov    0x70(%rsi),%rax
     80a:	48 89 87 f0 00 00 00 	mov    %rax,0xf0(%rdi)
     811:	48 8b 46 78          	mov    0x78(%rsi),%rax
     815:	48 89 87 f8 00 00 00 	mov    %rax,0xf8(%rdi)
     81c:	48 8b 86 80 00 00 00 	mov    0x80(%rsi),%rax
     823:	48 89 87 00 01 00 00 	mov    %rax,0x100(%rdi)
     82a:	48 8b 86 88 00 00 00 	mov    0x88(%rsi),%rax
     831:	0f 79 d0             	vmwrite %rax,%rdx
     834:	0f 96 c2             	setbe  %dl
     837:	84 d2                	test   %dl,%dl
     839:	75 2c                	jne    867 <vmx_setup_registers+0xf7>
     83b:	48 8b 43 38          	mov    0x38(%rbx),%rax
     83f:	ba 1c 68 00 00       	mov    $0x681c,%edx
     844:	0f 79 d0             	vmwrite %rax,%rdx
     847:	0f 96 c2             	setbe  %dl
     84a:	84 d2                	test   %dl,%dl
     84c:	75 28                	jne    876 <vmx_setup_registers+0x106>
     84e:	48 8b 83 90 00 00 00 	mov    0x90(%rbx),%rax
     855:	ba 20 68 00 00       	mov    $0x6820,%edx
     85a:	0f 79 d0             	vmwrite %rax,%rdx
     85d:	0f 96 c2             	setbe  %dl
     860:	84 d2                	test   %dl,%dl
     862:	75 21                	jne    885 <vmx_setup_registers+0x115>
     864:	5b                   	pop    %rbx
     865:	5d                   	pop    %rbp
     866:	c3                   	retq   
     867:	48 89 c6             	mov    %rax,%rsi
     86a:	bf 1e 68 00 00       	mov    $0x681e,%edi
     86f:	e8 cc fe ff ff       	callq  740 <vmwrite_error>
     874:	eb c5                	jmp    83b <vmx_setup_registers+0xcb>
     876:	48 89 c6             	mov    %rax,%rsi
     879:	bf 1c 68 00 00       	mov    $0x681c,%edi
     87e:	e8 bd fe ff ff       	callq  740 <vmwrite_error>
     883:	eb c9                	jmp    84e <vmx_setup_registers+0xde>
     885:	48 89 c6             	mov    %rax,%rsi
     888:	bf 20 68 00 00       	mov    $0x6820,%edi
     88d:	e8 ae fe ff ff       	callq  740 <vmwrite_error>
     892:	5b                   	pop    %rbx
     893:	5d                   	pop    %rbp
     894:	c3                   	retq   
     895:	90                   	nop
     896:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     89d:	00 00 00 

00000000000008a0 <__vmx_alloc_vmcs>:
__vmx_alloc_vmcs():
     8a0:	e8 00 00 00 00       	callq  8a5 <__vmx_alloc_vmcs+0x5>
			8a1: R_X86_64_PC32	__fentry__-0x4
     8a5:	48 63 ff             	movslq %edi,%rdi
     8a8:	55                   	push   %rbp
     8a9:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
			8ac: R_X86_64_32S	numa_node
     8b0:	48 8b 14 fd 00 00 00 	mov    0x0(,%rdi,8),%rdx
     8b7:	00 
			8b4: R_X86_64_32S	__per_cpu_offset
     8b8:	8b 35 00 00 00 00    	mov    0x0(%rip),%esi        # 8be <__vmx_alloc_vmcs+0x1e>
			8ba: R_X86_64_PC32	.bss+0x40
     8be:	48 89 e5             	mov    %rsp,%rbp
     8c1:	8b 14 02             	mov    (%rdx,%rax,1),%edx
     8c4:	83 fa ff             	cmp    $0xffffffff,%edx
     8c7:	75 07                	jne    8d0 <__vmx_alloc_vmcs+0x30>
     8c9:	65 8b 15 00 00 00 00 	mov    %gs:0x0(%rip),%edx        # 8d0 <__vmx_alloc_vmcs+0x30>
			8cc: R_X86_64_PC32	numa_node-0x4
     8d0:	31 c9                	xor    %ecx,%ecx
     8d2:	bf c0 0c 00 00       	mov    $0xcc0,%edi
     8d7:	e8 00 00 00 00       	callq  8dc <__vmx_alloc_vmcs+0x3c>
			8d8: R_X86_64_PC32	__alloc_pages_nodemask-0x4
     8dc:	48 85 c0             	test   %rax,%rax
     8df:	74 3a                	je     91b <__vmx_alloc_vmcs+0x7b>
     8e1:	48 2b 05 00 00 00 00 	sub    0x0(%rip),%rax        # 8e8 <__vmx_alloc_vmcs+0x48>
			8e4: R_X86_64_PC32	vmemmap_base-0x4
     8e8:	48 63 15 00 00 00 00 	movslq 0x0(%rip),%rdx        # 8ef <__vmx_alloc_vmcs+0x4f>
			8eb: R_X86_64_PC32	.bss+0x3c
     8ef:	31 f6                	xor    %esi,%esi
     8f1:	48 89 c1             	mov    %rax,%rcx
     8f4:	48 c1 f9 06          	sar    $0x6,%rcx
     8f8:	48 c1 e1 0c          	shl    $0xc,%rcx
     8fc:	48 03 0d 00 00 00 00 	add    0x0(%rip),%rcx        # 903 <__vmx_alloc_vmcs+0x63>
			8ff: R_X86_64_PC32	page_offset_base-0x4
     903:	48 89 cf             	mov    %rcx,%rdi
     906:	e8 00 00 00 00       	callq  90b <__vmx_alloc_vmcs+0x6b>
			907: R_X86_64_PC32	memset-0x4
     90b:	48 89 c1             	mov    %rax,%rcx
     90e:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 914 <__vmx_alloc_vmcs+0x74>
			910: R_X86_64_PC32	.bss+0x44
     914:	89 01                	mov    %eax,(%rcx)
     916:	48 89 c8             	mov    %rcx,%rax
     919:	5d                   	pop    %rbp
     91a:	c3                   	retq   
     91b:	31 c9                	xor    %ecx,%ecx
     91d:	eb f7                	jmp    916 <__vmx_alloc_vmcs+0x76>
     91f:	90                   	nop

0000000000000920 <free_virtual_apic_pages>:
free_virtual_apic_pages():
     920:	e8 00 00 00 00       	callq  925 <free_virtual_apic_pages+0x5>
			921: R_X86_64_PC32	__fentry__-0x4
     925:	55                   	push   %rbp
     926:	48 89 e5             	mov    %rsp,%rbp
     929:	41 55                	push   %r13
     92b:	49 c7 c5 00 00 00 00 	mov    $0x0,%r13
			92e: R_X86_64_32S	__cpu_possible_mask
     932:	41 54                	push   %r12
     934:	53                   	push   %rbx
     935:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
     93a:	89 df                	mov    %ebx,%edi
     93c:	4c 89 ee             	mov    %r13,%rsi
     93f:	e8 00 00 00 00       	callq  944 <free_virtual_apic_pages+0x24>
			940: R_X86_64_PC32	cpumask_next-0x4
     944:	3b 05 00 00 00 00    	cmp    0x0(%rip),%eax        # 94a <free_virtual_apic_pages+0x2a>
			946: R_X86_64_PC32	nr_cpu_ids-0x4
     94a:	89 c3                	mov    %eax,%ebx
     94c:	73 2d                	jae    97b <free_virtual_apic_pages+0x5b>
     94e:	4c 63 e3             	movslq %ebx,%r12
     951:	4a 8b 3c e5 00 00 00 	mov    0x0(,%r12,8),%rdi
     958:	00 
			955: R_X86_64_32S	.bss+0x10060
     959:	48 85 ff             	test   %rdi,%rdi
     95c:	74 07                	je     965 <free_virtual_apic_pages+0x45>
     95e:	31 f6                	xor    %esi,%esi
     960:	e8 00 00 00 00       	callq  965 <free_virtual_apic_pages+0x45>
			961: R_X86_64_PC32	free_pages-0x4
     965:	4a 8b 3c e5 00 00 00 	mov    0x0(,%r12,8),%rdi
     96c:	00 
			969: R_X86_64_32S	.bss+0x60
     96d:	48 85 ff             	test   %rdi,%rdi
     970:	74 c8                	je     93a <free_virtual_apic_pages+0x1a>
     972:	31 f6                	xor    %esi,%esi
     974:	e8 00 00 00 00       	callq  979 <free_virtual_apic_pages+0x59>
			975: R_X86_64_PC32	free_pages-0x4
     979:	eb bf                	jmp    93a <free_virtual_apic_pages+0x1a>
     97b:	5b                   	pop    %rbx
     97c:	41 5c                	pop    %r12
     97e:	41 5d                	pop    %r13
     980:	5d                   	pop    %rbp
     981:	c3                   	retq   
     982:	0f 1f 40 00          	nopl   0x0(%rax)
     986:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     98d:	00 00 00 

0000000000000990 <vmx_free_vmxon_areas>:
vmx_free_vmxon_areas():
     990:	e8 00 00 00 00       	callq  995 <vmx_free_vmxon_areas+0x5>
			991: R_X86_64_PC32	__fentry__-0x4
     995:	55                   	push   %rbp
     996:	48 89 e5             	mov    %rsp,%rbp
     999:	41 56                	push   %r14
     99b:	41 55                	push   %r13
     99d:	41 54                	push   %r12
     99f:	53                   	push   %rbx
     9a0:	41 bc ff ff ff ff    	mov    $0xffffffff,%r12d
     9a6:	49 c7 c6 00 00 00 00 	mov    $0x0,%r14
			9a9: R_X86_64_32S	.data..percpu+0x18
     9ad:	44 89 e7             	mov    %r12d,%edi
     9b0:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			9b3: R_X86_64_32S	__cpu_possible_mask
     9b7:	e8 00 00 00 00       	callq  9bc <vmx_free_vmxon_areas+0x2c>
			9b8: R_X86_64_PC32	cpumask_next-0x4
     9bc:	3b 05 00 00 00 00    	cmp    0x0(%rip),%eax        # 9c2 <vmx_free_vmxon_areas+0x32>
			9be: R_X86_64_PC32	nr_cpu_ids-0x4
     9c2:	41 89 c4             	mov    %eax,%r12d
     9c5:	73 36                	jae    9fd <vmx_free_vmxon_areas+0x6d>
     9c7:	4d 63 ec             	movslq %r12d,%r13
     9ca:	4c 89 f3             	mov    %r14,%rbx
     9cd:	4a 8b 04 ed 00 00 00 	mov    0x0(,%r13,8),%rax
     9d4:	00 
			9d1: R_X86_64_32S	__per_cpu_offset
     9d5:	48 83 3c 18 00       	cmpq   $0x0,(%rax,%rbx,1)
     9da:	74 d1                	je     9ad <vmx_free_vmxon_areas+0x1d>
     9dc:	48 8b 3c 18          	mov    (%rax,%rbx,1),%rdi
     9e0:	8b 35 00 00 00 00    	mov    0x0(%rip),%esi        # 9e6 <vmx_free_vmxon_areas+0x56>
			9e2: R_X86_64_PC32	.bss+0x40
     9e6:	e8 00 00 00 00       	callq  9eb <vmx_free_vmxon_areas+0x5b>
			9e7: R_X86_64_PC32	free_pages-0x4
     9eb:	4a 8b 04 ed 00 00 00 	mov    0x0(,%r13,8),%rax
     9f2:	00 
			9ef: R_X86_64_32S	__per_cpu_offset
     9f3:	48 c7 04 18 00 00 00 	movq   $0x0,(%rax,%rbx,1)
     9fa:	00 
     9fb:	eb b0                	jmp    9ad <vmx_free_vmxon_areas+0x1d>
     9fd:	5b                   	pop    %rbx
     9fe:	41 5c                	pop    %r12
     a00:	41 5d                	pop    %r13
     a02:	41 5e                	pop    %r14
     a04:	5d                   	pop    %rbp
     a05:	c3                   	retq   
     a06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     a0d:	00 00 00 

0000000000000a10 <vmx_put_cpu.isra.9>:
vmx_put_cpu.isra.9():
     a10:	e8 00 00 00 00       	callq  a15 <vmx_put_cpu.isra.9+0x5>
			a11: R_X86_64_PC32	__fentry__-0x4
     a15:	55                   	push   %rbp
     a16:	48 89 e5             	mov    %rsp,%rbp
     a19:	53                   	push   %rbx
     a1a:	48 89 fb             	mov    %rdi,%rbx
     a1d:	bf 02 01 00 c0       	mov    $0xc0000102,%edi
     a22:	ff 14 25 00 00 00 00 	callq  *0x0
			a25: R_X86_64_32S	pv_ops+0xc8
     a29:	48 89 03             	mov    %rax,(%rbx)
     a2c:	5b                   	pop    %rbx
     a2d:	5d                   	pop    %rbp
     a2e:	c3                   	retq   
     a2f:	90                   	nop

0000000000000a30 <vmx_free_vpid.isra.11>:
vmx_free_vpid.isra.11():
     a30:	e8 00 00 00 00       	callq  a35 <vmx_free_vpid.isra.11+0x5>
			a31: R_X86_64_PC32	__fentry__-0x4
     a35:	55                   	push   %rbp
     a36:	48 89 e5             	mov    %rsp,%rbp
     a39:	53                   	push   %rbx
     a3a:	48 89 fb             	mov    %rdi,%rbx
     a3d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a40: R_X86_64_32S	.bss+0x20068
     a44:	e8 00 00 00 00       	callq  a49 <vmx_free_vpid.isra.11+0x19>
			a45: R_X86_64_PC32	_raw_spin_lock-0x4
     a49:	48 63 03             	movslq (%rbx),%rax
     a4c:	85 c0                	test   %eax,%eax
     a4e:	74 08                	je     a58 <vmx_free_vpid.isra.11+0x28>
     a50:	48 0f b3 05 00 00 00 	btr    %rax,0x0(%rip)        # a58 <vmx_free_vpid.isra.11+0x28>
     a57:	00 
			a54: R_X86_64_PC32	.bss+0x2007c
     a58:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			a5b: R_X86_64_32S	.bss+0x20068
     a5f:	ff 14 25 00 00 00 00 	callq  *0x0
			a62: R_X86_64_32S	pv_ops+0x298
     a66:	5b                   	pop    %rbx
     a67:	5d                   	pop    %rbp
     a68:	c3                   	retq   
     a69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000000a70 <__vmx_get_cpu_helper>:
__vmx_get_cpu_helper():
     a70:	e8 00 00 00 00       	callq  a75 <__vmx_get_cpu_helper+0x5>
			a71: R_X86_64_PC32	__fentry__-0x4
     a75:	55                   	push   %rbp
     a76:	48 89 e5             	mov    %rsp,%rbp
     a79:	53                   	push   %rbx
     a7a:	65 8b 05 00 00 00 00 	mov    %gs:0x0(%rip),%eax        # a81 <__vmx_get_cpu_helper+0x11>
			a7d: R_X86_64_PC32	cpu_number-0x4
     a81:	39 47 10             	cmp    %eax,0x10(%rdi)
     a84:	75 2b                	jne    ab1 <__vmx_get_cpu_helper+0x41>
     a86:	48 89 fb             	mov    %rdi,%rbx
     a89:	48 8b bf 30 02 00 00 	mov    0x230(%rdi),%rdi
     a90:	e8 ab fb ff ff       	callq  640 <vmcs_clear>
     a95:	65 48 8b 05 00 00 00 	mov    %gs:0x0(%rip),%rax        # a9d <__vmx_get_cpu_helper+0x2d>
     a9c:	00 
			a99: R_X86_64_PC32	local_vcpu-0x4
     a9d:	48 39 c3             	cmp    %rax,%rbx
     aa0:	75 0c                	jne    aae <__vmx_get_cpu_helper+0x3e>
     aa2:	65 48 c7 05 00 00 00 	movq   $0x0,%gs:0x0(%rip)        # aae <__vmx_get_cpu_helper+0x3e>
     aa9:	00 00 00 00 00 
			aa6: R_X86_64_PC32	local_vcpu-0x8
     aae:	5b                   	pop    %rbx
     aaf:	5d                   	pop    %rbp
     ab0:	c3                   	retq   
     ab1:	0f 0b                	ud2    
     ab3:	0f 1f 00             	nopl   (%rax)
     ab6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     abd:	00 00 00 

0000000000000ac0 <dune_do_fork.constprop.24>:
dune_do_fork.constprop.24():
     ac0:	55                   	push   %rbp
     ac1:	49 89 cb             	mov    %rcx,%r11
     ac4:	48 89 f8             	mov    %rdi,%rax
     ac7:	65 48 8b 0c 25 00 00 	mov    %gs:0x0,%rcx
     ace:	00 00 
			acc: R_X86_64_32S	current_task
     ad0:	48 89 e5             	mov    %rsp,%rbp
     ad3:	41 57                	push   %r15
     ad5:	41 56                	push   %r14
     ad7:	41 55                	push   %r13
     ad9:	41 54                	push   %r12
     adb:	4c 8d a5 28 ff ff ff 	lea    -0xd8(%rbp),%r12
     ae2:	53                   	push   %rbx
     ae3:	49 89 f2             	mov    %rsi,%r10
     ae6:	4c 89 e7             	mov    %r12,%rdi
     ae9:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
     af0:	65 48 8b 1c 25 28 00 	mov    %gs:0x28,%rbx
     af7:	00 00 
     af9:	48 89 5d d0          	mov    %rbx,-0x30(%rbp)
     afd:	31 db                	xor    %ebx,%ebx
     aff:	48 8b 59 18          	mov    0x18(%rcx),%rbx
     b03:	b9 15 00 00 00       	mov    $0x15,%ecx
     b08:	4c 8d ab 58 3f 00 00 	lea    0x3f58(%rbx),%r13
     b0f:	4c 89 ee             	mov    %r13,%rsi
     b12:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
     b15:	48 8d bb 60 3f 00 00 	lea    0x3f60(%rbx),%rdi
     b1c:	48 89 d6             	mov    %rdx,%rsi
     b1f:	48 8b 0a             	mov    (%rdx),%rcx
     b22:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
     b26:	49 29 fd             	sub    %rdi,%r13
     b29:	45 8d bd a8 00 00 00 	lea    0xa8(%r13),%r15d
     b30:	4c 29 ee             	sub    %r13,%rsi
     b33:	48 89 8b 58 3f 00 00 	mov    %rcx,0x3f58(%rbx)
     b3a:	48 8b 8a a0 00 00 00 	mov    0xa0(%rdx),%rcx
     b41:	31 d2                	xor    %edx,%edx
     b43:	41 c1 ef 03          	shr    $0x3,%r15d
     b47:	48 89 8b f8 3f 00 00 	mov    %rcx,0x3ff8(%rbx)
     b4e:	44 89 f9             	mov    %r15d,%ecx
     b51:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
     b54:	48 89 c7             	mov    %rax,%rdi
     b57:	4c 89 d9             	mov    %r11,%rcx
     b5a:	4c 89 d6             	mov    %r10,%rsi
     b5d:	48 c7 c0 10 ff 09 81 	mov    $0xffffffff8109ff10,%rax
     b64:	e8 00 00 00 00       	callq  b69 <dune_do_fork.constprop.24+0xa9>
			b65: R_X86_64_PC32	__x86_indirect_thunk_rax-0x4
     b69:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
     b70:	48 8d bb 60 3f 00 00 	lea    0x3f60(%rbx),%rdi
     b77:	4c 89 e6             	mov    %r12,%rsi
     b7a:	4c 29 ee             	sub    %r13,%rsi
     b7d:	44 89 f9             	mov    %r15d,%ecx
     b80:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
     b84:	48 89 93 58 3f 00 00 	mov    %rdx,0x3f58(%rbx)
     b8b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
     b8f:	48 89 93 f8 3f 00 00 	mov    %rdx,0x3ff8(%rbx)
     b96:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
     b99:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
     b9d:	65 48 33 1c 25 28 00 	xor    %gs:0x28,%rbx
     ba4:	00 00 
     ba6:	75 12                	jne    bba <dune_do_fork.constprop.24+0xfa>
     ba8:	48 81 c4 b0 00 00 00 	add    $0xb0,%rsp
     baf:	5b                   	pop    %rbx
     bb0:	41 5c                	pop    %r12
     bb2:	41 5d                	pop    %r13
     bb4:	41 5e                	pop    %r14
     bb6:	41 5f                	pop    %r15
     bb8:	5d                   	pop    %rbp
     bb9:	c3                   	retq   
     bba:	e8 00 00 00 00       	callq  bbf <dune_do_fork.constprop.24+0xff>
			bbb: R_X86_64_PC32	__stack_chk_fail-0x4
     bbf:	90                   	nop

0000000000000bc0 <__vmx_sync_helper>:
__vmx_sync_helper():
     bc0:	e8 00 00 00 00       	callq  bc5 <__vmx_sync_helper+0x5>
			bc1: R_X86_64_PC32	__fentry__-0x4
     bc5:	55                   	push   %rbp
     bc6:	48 89 e5             	mov    %rsp,%rbp
     bc9:	48 83 ec 18          	sub    $0x18,%rsp
     bcd:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
     bd4:	00 00 
     bd6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
     bda:	31 c0                	xor    %eax,%eax
     bdc:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # be2 <__vmx_sync_helper+0x22>
			bde: R_X86_64_PC32	vmx_capability+0xc
     be2:	a9 00 00 00 02       	test   $0x2000000,%eax
     be7:	75 18                	jne    c01 <__vmx_sync_helper+0x41>
     be9:	a9 00 00 00 04       	test   $0x4000000,%eax
     bee:	75 35                	jne    c25 <__vmx_sync_helper+0x65>
     bf0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     bf4:	65 48 33 04 25 28 00 	xor    %gs:0x28,%rax
     bfb:	00 00 
     bfd:	75 4a                	jne    c49 <__vmx_sync_helper+0x89>
     bff:	c9                   	leaveq 
     c00:	c3                   	retq   
     c01:	48 8b 47 68          	mov    0x68(%rdi),%rax
     c05:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
     c0c:	00 
     c0d:	b9 01 00 00 00       	mov    $0x1,%ecx
     c12:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
     c16:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
     c1a:	66 0f 38 80 08       	invept (%rax),%rcx
     c1f:	77 02                	ja     c23 <__vmx_sync_helper+0x63>
     c21:	0f 0b                	ud2    
     c23:	eb cb                	jmp    bf0 <__vmx_sync_helper+0x30>
     c25:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
     c2c:	00 
     c2d:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
     c34:	00 
     c35:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
     c39:	b9 02 00 00 00       	mov    $0x2,%ecx
     c3e:	66 0f 38 80 08       	invept (%rax),%rcx
     c43:	77 02                	ja     c47 <__vmx_sync_helper+0x87>
     c45:	0f 0b                	ud2    
     c47:	eb a7                	jmp    bf0 <__vmx_sync_helper+0x30>
     c49:	e8 00 00 00 00       	callq  c4e <__vmx_sync_helper+0x8e>
			c4a: R_X86_64_PC32	__stack_chk_fail-0x4
     c4e:	66 90                	xchg   %ax,%ax

0000000000000c50 <vmx_disable>:
vmx_disable():
     c50:	e8 00 00 00 00       	callq  c55 <vmx_disable+0x5>
			c51: R_X86_64_PC32	__fentry__-0x4
     c55:	55                   	push   %rbp
     c56:	48 89 e5             	mov    %rsp,%rbp
     c59:	53                   	push   %rbx
     c5a:	65 8b 05 00 00 00 00 	mov    %gs:0x0(%rip),%eax        # c61 <vmx_disable+0x11>
			c5d: R_X86_64_PC32	.data..percpu-0x4
     c61:	85 c0                	test   %eax,%eax
     c63:	75 03                	jne    c68 <vmx_disable+0x18>
     c65:	5b                   	pop    %rbx
     c66:	5d                   	pop    %rbp
     c67:	c3                   	retq   
     c68:	0f 01 c4             	vmxoff 
     c6b:	ff 14 25 00 00 00 00 	callq  *0x0
			c6e: R_X86_64_32S	pv_ops+0x118
     c72:	48 89 c3             	mov    %rax,%rbx
     c75:	ff 14 25 00 00 00 00 	callq  *0x0
			c78: R_X86_64_32S	pv_ops+0x128
     c7c:	65 48 8b 05 00 00 00 	mov    %gs:0x0(%rip),%rax        # c84 <vmx_disable+0x34>
     c83:	00 
			c80: R_X86_64_PC32	cpu_tlbstate+0x14
     c84:	48 89 c7             	mov    %rax,%rdi
     c87:	48 81 e7 ff df ff ff 	and    $0xffffffffffffdfff,%rdi
     c8e:	48 39 f8             	cmp    %rdi,%rax
     c91:	74 0f                	je     ca2 <vmx_disable+0x52>
     c93:	65 48 89 3d 00 00 00 	mov    %rdi,%gs:0x0(%rip)        # c9b <vmx_disable+0x4b>
     c9a:	00 
			c97: R_X86_64_PC32	cpu_tlbstate+0x14
     c9b:	ff 14 25 00 00 00 00 	callq  *0x0
			c9e: R_X86_64_32S	pv_ops+0x40
     ca2:	48 89 df             	mov    %rbx,%rdi
     ca5:	ff 14 25 00 00 00 00 	callq  *0x0
			ca8: R_X86_64_32S	pv_ops+0x120
     cac:	65 c7 05 00 00 00 00 	movl   $0x0,%gs:0x0(%rip)        # cb7 <vmx_disable+0x67>
     cb3:	00 00 00 00 
			caf: R_X86_64_PC32	.data..percpu-0x8
     cb7:	5b                   	pop    %rbx
     cb8:	5d                   	pop    %rbp
     cb9:	c3                   	retq   
     cba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000cc0 <__vmx_sync_individual_addr_helper>:
__vmx_sync_individual_addr_helper():
     cc0:	e8 00 00 00 00       	callq  cc5 <__vmx_sync_individual_addr_helper+0x5>
			cc1: R_X86_64_PC32	__fentry__-0x4
     cc5:	55                   	push   %rbp
     cc6:	48 89 e5             	mov    %rsp,%rbp
     cc9:	48 83 ec 18          	sub    $0x18,%rsp
     ccd:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
     cd4:	00 00 
     cd6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
     cda:	31 c0                	xor    %eax,%eax
     cdc:	48 8b 07             	mov    (%rdi),%rax
     cdf:	48 8b 50 68          	mov    0x68(%rax),%rdx
     ce3:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # ce9 <__vmx_sync_individual_addr_helper+0x29>
			ce5: R_X86_64_PC32	vmx_capability+0xc
     ce9:	a9 00 00 00 01       	test   $0x1000000,%eax
     cee:	74 32                	je     d22 <__vmx_sync_individual_addr_helper+0x62>
     cf0:	48 8b 47 08          	mov    0x8(%rdi),%rax
     cf4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
     cf8:	31 c9                	xor    %ecx,%ecx
     cfa:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
     d00:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
     d04:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
     d08:	66 0f 38 80 08       	invept (%rax),%rcx
     d0d:	77 02                	ja     d11 <__vmx_sync_individual_addr_helper+0x51>
     d0f:	0f 0b                	ud2    
     d11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     d15:	65 48 33 04 25 28 00 	xor    %gs:0x28,%rax
     d1c:	00 00 
     d1e:	75 54                	jne    d74 <__vmx_sync_individual_addr_helper+0xb4>
     d20:	c9                   	leaveq 
     d21:	c3                   	retq   
     d22:	a9 00 00 00 02       	test   $0x2000000,%eax
     d27:	75 2b                	jne    d54 <__vmx_sync_individual_addr_helper+0x94>
     d29:	a9 00 00 00 04       	test   $0x4000000,%eax
     d2e:	74 e1                	je     d11 <__vmx_sync_individual_addr_helper+0x51>
     d30:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
     d37:	00 
     d38:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
     d3f:	00 
     d40:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
     d44:	b9 02 00 00 00       	mov    $0x2,%ecx
     d49:	66 0f 38 80 08       	invept (%rax),%rcx
     d4e:	77 02                	ja     d52 <__vmx_sync_individual_addr_helper+0x92>
     d50:	0f 0b                	ud2    
     d52:	eb bd                	jmp    d11 <__vmx_sync_individual_addr_helper+0x51>
     d54:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
     d58:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
     d5f:	00 
     d60:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
     d64:	b9 01 00 00 00       	mov    $0x1,%ecx
     d69:	66 0f 38 80 08       	invept (%rax),%rcx
     d6e:	77 02                	ja     d72 <__vmx_sync_individual_addr_helper+0xb2>
     d70:	0f 0b                	ud2    
     d72:	eb 9d                	jmp    d11 <__vmx_sync_individual_addr_helper+0x51>
     d74:	e8 00 00 00 00       	callq  d79 <__vmx_sync_individual_addr_helper+0xb9>
			d75: R_X86_64_PC32	__stack_chk_fail-0x4
     d79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000000d80 <vmx_get_cpu>:
vmx_get_cpu():
     d80:	e8 00 00 00 00       	callq  d85 <vmx_get_cpu+0x5>
			d81: R_X86_64_PC32	__fentry__-0x4
     d85:	55                   	push   %rbp
     d86:	48 89 e5             	mov    %rsp,%rbp
     d89:	41 55                	push   %r13
     d8b:	41 54                	push   %r12
     d8d:	53                   	push   %rbx
     d8e:	48 89 fb             	mov    %rdi,%rbx
     d91:	48 83 ec 18          	sub    $0x18,%rsp
     d95:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
     d9c:	00 00 
     d9e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
     da2:	31 c0                	xor    %eax,%eax
     da4:	48 8b 97 48 02 00 00 	mov    0x248(%rdi),%rdx
     dab:	bf 02 01 00 c0       	mov    $0xc0000102,%edi
     db0:	65 44 8b 25 00 00 00 	mov    %gs:0x0(%rip),%r12d        # db8 <vmx_get_cpu+0x38>
     db7:	00 
			db4: R_X86_64_PC32	cpu_number-0x4
     db8:	89 d6                	mov    %edx,%esi
     dba:	48 c1 ea 20          	shr    $0x20,%rdx
     dbe:	ff 14 25 00 00 00 00 	callq  *0x0
			dc1: R_X86_64_32S	pv_ops+0xd0
     dc5:	65 48 8b 05 00 00 00 	mov    %gs:0x0(%rip),%rax        # dcd <vmx_get_cpu+0x4d>
     dcc:	00 
			dc9: R_X86_64_PC32	local_vcpu-0x4
     dcd:	48 39 c3             	cmp    %rax,%rbx
     dd0:	0f 84 20 01 00 00    	je     ef6 <vmx_get_cpu+0x176>
     dd6:	65 48 89 1d 00 00 00 	mov    %rbx,%gs:0x0(%rip)        # dde <vmx_get_cpu+0x5e>
     ddd:	00 
			dda: R_X86_64_PC32	local_vcpu-0x4
     dde:	8b 7b 10             	mov    0x10(%rbx),%edi
     de1:	44 39 e7             	cmp    %r12d,%edi
     de4:	0f 84 f5 01 00 00    	je     fdf <vmx_get_cpu+0x25f>
     dea:	85 ff                	test   %edi,%edi
     dec:	0f 88 22 01 00 00    	js     f14 <vmx_get_cpu+0x194>
     df2:	b9 01 00 00 00       	mov    $0x1,%ecx
     df7:	48 89 da             	mov    %rbx,%rdx
     dfa:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			dfd: R_X86_64_32S	.text+0xa70
     e01:	e8 00 00 00 00       	callq  e06 <vmx_get_cpu+0x86>
			e02: R_X86_64_PC32	smp_call_function_single-0x4
     e06:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # e0c <vmx_get_cpu+0x8c>
			e08: R_X86_64_PC32	vmx_capability+0x10
     e0c:	f6 c4 02             	test   $0x2,%ah
     e0f:	0f 84 1a 01 00 00    	je     f2f <vmx_get_cpu+0x1af>
     e15:	8b 43 14             	mov    0x14(%rbx),%eax
     e18:	66 85 c0             	test   %ax,%ax
     e1b:	0f 85 71 01 00 00    	jne    f92 <vmx_get_cpu+0x212>
     e21:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # e27 <vmx_get_cpu+0xa7>
			e23: R_X86_64_PC32	vmx_capability+0xc
     e27:	a9 00 00 00 02       	test   $0x2000000,%eax
     e2c:	0f 85 39 01 00 00    	jne    f6b <vmx_get_cpu+0x1eb>
     e32:	a9 00 00 00 04       	test   $0x4000000,%eax
     e37:	0f 85 7b 01 00 00    	jne    fb8 <vmx_get_cpu+0x238>
     e3d:	48 8b bb 30 02 00 00 	mov    0x230(%rbx),%rdi
     e44:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%rbx)
     e4b:	49 c7 c5 00 00 00 00 	mov    $0x0,%r13
			e4e: R_X86_64_32S	.data..percpu+0x8
     e52:	e8 69 f8 ff ff       	callq  6c0 <vmcs_load>
     e57:	65 4c 03 2d 00 00 00 	add    %gs:0x0(%rip),%r13        # e5f <vmx_get_cpu+0xdf>
     e5e:	00 
			e5b: R_X86_64_PC32	this_cpu_off-0x4
     e5f:	66 0f 00 cf          	str    %di
     e63:	0f b7 ff             	movzwl %di,%edi
     e66:	e8 15 f7 ff ff       	callq  580 <segment_base>
     e6b:	ba 0a 6c 00 00       	mov    $0x6c0a,%edx
     e70:	0f 79 d0             	vmwrite %rax,%rdx
     e73:	0f 96 c2             	setbe  %dl
     e76:	84 d2                	test   %dl,%dl
     e78:	0f 85 96 01 00 00    	jne    1014 <vmx_get_cpu+0x294>
     e7e:	49 8b 45 02          	mov    0x2(%r13),%rax
     e82:	ba 0c 6c 00 00       	mov    $0x6c0c,%edx
     e87:	0f 79 d0             	vmwrite %rax,%rdx
     e8a:	0f 96 c2             	setbe  %dl
     e8d:	84 d2                	test   %dl,%dl
     e8f:	0f 85 a3 01 00 00    	jne    1038 <vmx_get_cpu+0x2b8>
     e95:	bf 75 01 00 00       	mov    $0x175,%edi
     e9a:	ff 14 25 00 00 00 00 	callq  *0x0
			e9d: R_X86_64_32S	pv_ops+0xc8
     ea1:	ba 10 6c 00 00       	mov    $0x6c10,%edx
     ea6:	0f 79 d0             	vmwrite %rax,%rdx
     ea9:	0f 96 c2             	setbe  %dl
     eac:	84 d2                	test   %dl,%dl
     eae:	0f 85 72 01 00 00    	jne    1026 <vmx_get_cpu+0x2a6>
     eb4:	bf 00 01 00 c0       	mov    $0xc0000100,%edi
     eb9:	ff 14 25 00 00 00 00 	callq  *0x0
			ebc: R_X86_64_32S	pv_ops+0xc8
     ec0:	ba 06 6c 00 00       	mov    $0x6c06,%edx
     ec5:	0f 79 d0             	vmwrite %rax,%rdx
     ec8:	0f 96 c2             	setbe  %dl
     ecb:	84 d2                	test   %dl,%dl
     ecd:	0f 85 2f 01 00 00    	jne    1002 <vmx_get_cpu+0x282>
     ed3:	bf 01 01 00 c0       	mov    $0xc0000101,%edi
     ed8:	ff 14 25 00 00 00 00 	callq  *0x0
			edb: R_X86_64_32S	pv_ops+0xc8
     edf:	ba 08 6c 00 00       	mov    $0x6c08,%edx
     ee4:	0f 79 d0             	vmwrite %rax,%rdx
     ee7:	0f 96 c2             	setbe  %dl
     eea:	84 d2                	test   %dl,%dl
     eec:	0f 85 fe 00 00 00    	jne    ff0 <vmx_get_cpu+0x270>
     ef2:	44 89 63 10          	mov    %r12d,0x10(%rbx)
     ef6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
     efa:	65 48 33 04 25 28 00 	xor    %gs:0x28,%rax
     f01:	00 00 
     f03:	0f 85 41 01 00 00    	jne    104a <vmx_get_cpu+0x2ca>
     f09:	48 83 c4 18          	add    $0x18,%rsp
     f0d:	5b                   	pop    %rbx
     f0e:	41 5c                	pop    %r12
     f10:	41 5d                	pop    %r13
     f12:	5d                   	pop    %rbp
     f13:	c3                   	retq   
     f14:	48 8b bb 30 02 00 00 	mov    0x230(%rbx),%rdi
     f1b:	e8 20 f7 ff ff       	callq  640 <vmcs_clear>
     f20:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # f26 <vmx_get_cpu+0x1a6>
			f22: R_X86_64_PC32	vmx_capability+0x10
     f26:	f6 c4 02             	test   $0x2,%ah
     f29:	0f 85 e6 fe ff ff    	jne    e15 <vmx_get_cpu+0x95>
     f2f:	f6 c4 04             	test   $0x4,%ah
     f32:	0f 84 e9 fe ff ff    	je     e21 <vmx_get_cpu+0xa1>
     f38:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
     f3f:	00 
     f40:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
     f47:	00 
     f48:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
     f4c:	b9 02 00 00 00       	mov    $0x2,%ecx
     f51:	66 0f 38 81 08       	invvpid (%rax),%rcx
     f56:	77 02                	ja     f5a <vmx_get_cpu+0x1da>
     f58:	0f 0b                	ud2    
     f5a:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # f60 <vmx_get_cpu+0x1e0>
			f5c: R_X86_64_PC32	vmx_capability+0xc
     f60:	a9 00 00 00 02       	test   $0x2000000,%eax
     f65:	0f 84 c7 fe ff ff    	je     e32 <vmx_get_cpu+0xb2>
     f6b:	48 8b 43 68          	mov    0x68(%rbx),%rax
     f6f:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
     f76:	00 
     f77:	b9 01 00 00 00       	mov    $0x1,%ecx
     f7c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
     f80:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
     f84:	66 0f 38 80 08       	invept (%rax),%rcx
     f89:	77 02                	ja     f8d <vmx_get_cpu+0x20d>
     f8b:	0f 0b                	ud2    
     f8d:	e9 ab fe ff ff       	jmpq   e3d <vmx_get_cpu+0xbd>
     f92:	0f b7 c0             	movzwl %ax,%eax
     f95:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
     f9c:	00 
     f9d:	b9 01 00 00 00       	mov    $0x1,%ecx
     fa2:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
     fa6:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
     faa:	66 0f 38 81 08       	invvpid (%rax),%rcx
     faf:	77 02                	ja     fb3 <vmx_get_cpu+0x233>
     fb1:	0f 0b                	ud2    
     fb3:	e9 69 fe ff ff       	jmpq   e21 <vmx_get_cpu+0xa1>
     fb8:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
     fbf:	00 
     fc0:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
     fc7:	00 
     fc8:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
     fcc:	b9 02 00 00 00       	mov    $0x2,%ecx
     fd1:	66 0f 38 80 08       	invept (%rax),%rcx
     fd6:	77 02                	ja     fda <vmx_get_cpu+0x25a>
     fd8:	0f 0b                	ud2    
     fda:	e9 5e fe ff ff       	jmpq   e3d <vmx_get_cpu+0xbd>
     fdf:	48 8b bb 30 02 00 00 	mov    0x230(%rbx),%rdi
     fe6:	e8 d5 f6 ff ff       	callq  6c0 <vmcs_load>
     feb:	e9 06 ff ff ff       	jmpq   ef6 <vmx_get_cpu+0x176>
     ff0:	48 89 c6             	mov    %rax,%rsi
     ff3:	bf 08 6c 00 00       	mov    $0x6c08,%edi
     ff8:	e8 43 f7 ff ff       	callq  740 <vmwrite_error>
     ffd:	e9 f0 fe ff ff       	jmpq   ef2 <vmx_get_cpu+0x172>
    1002:	48 89 c6             	mov    %rax,%rsi
    1005:	bf 06 6c 00 00       	mov    $0x6c06,%edi
    100a:	e8 31 f7 ff ff       	callq  740 <vmwrite_error>
    100f:	e9 bf fe ff ff       	jmpq   ed3 <vmx_get_cpu+0x153>
    1014:	48 89 c6             	mov    %rax,%rsi
    1017:	bf 0a 6c 00 00       	mov    $0x6c0a,%edi
    101c:	e8 1f f7 ff ff       	callq  740 <vmwrite_error>
    1021:	e9 58 fe ff ff       	jmpq   e7e <vmx_get_cpu+0xfe>
    1026:	48 89 c6             	mov    %rax,%rsi
    1029:	bf 10 6c 00 00       	mov    $0x6c10,%edi
    102e:	e8 0d f7 ff ff       	callq  740 <vmwrite_error>
    1033:	e9 7c fe ff ff       	jmpq   eb4 <vmx_get_cpu+0x134>
    1038:	48 89 c6             	mov    %rax,%rsi
    103b:	bf 0c 6c 00 00       	mov    $0x6c0c,%edi
    1040:	e8 fb f6 ff ff       	callq  740 <vmwrite_error>
    1045:	e9 4b fe ff ff       	jmpq   e95 <vmx_get_cpu+0x115>
    104a:	e8 00 00 00 00       	callq  104f <vmx_get_cpu+0x2cf>
			104b: R_X86_64_PC32	__stack_chk_fail-0x4
    104f:	90                   	nop

0000000000001050 <make_pt_regs>:
make_pt_regs():
    1050:	e8 00 00 00 00       	callq  1055 <make_pt_regs+0x5>
			1051: R_X86_64_PC32	__fentry__-0x4
    1055:	55                   	push   %rbp
    1056:	48 63 d2             	movslq %edx,%rdx
    1059:	48 89 56 50          	mov    %rdx,0x50(%rsi)
    105d:	48 89 e5             	mov    %rsp,%rbp
    1060:	41 54                	push   %r12
    1062:	53                   	push   %rbx
    1063:	48 8b 87 88 00 00 00 	mov    0x88(%rdi),%rax
    106a:	49 89 fc             	mov    %rdi,%r12
    106d:	48 89 f3             	mov    %rsi,%rbx
    1070:	48 89 46 78          	mov    %rax,0x78(%rsi)
    1074:	48 8b 87 a0 00 00 00 	mov    0xa0(%rdi),%rax
    107b:	48 89 46 28          	mov    %rax,0x28(%rsi)
    107f:	48 8b 87 90 00 00 00 	mov    0x90(%rdi),%rax
    1086:	48 89 46 58          	mov    %rax,0x58(%rsi)
    108a:	48 8b 87 98 00 00 00 	mov    0x98(%rdi),%rax
    1091:	48 89 46 60          	mov    %rax,0x60(%rsi)
    1095:	48 8b 87 b8 00 00 00 	mov    0xb8(%rdi),%rax
    109c:	48 89 46 68          	mov    %rax,0x68(%rsi)
    10a0:	48 8b 87 c0 00 00 00 	mov    0xc0(%rdi),%rax
    10a7:	48 89 46 70          	mov    %rax,0x70(%rsi)
    10ab:	48 8b 87 c8 00 00 00 	mov    0xc8(%rdi),%rax
    10b2:	48 89 46 48          	mov    %rax,0x48(%rsi)
    10b6:	48 8b 87 d0 00 00 00 	mov    0xd0(%rdi),%rax
    10bd:	48 89 46 40          	mov    %rax,0x40(%rsi)
    10c1:	48 8b 87 d8 00 00 00 	mov    0xd8(%rdi),%rax
    10c8:	48 89 46 38          	mov    %rax,0x38(%rsi)
    10cc:	48 8b 87 e0 00 00 00 	mov    0xe0(%rdi),%rax
    10d3:	48 89 46 30          	mov    %rax,0x30(%rsi)
    10d7:	48 8b 87 e8 00 00 00 	mov    0xe8(%rdi),%rax
    10de:	48 89 46 18          	mov    %rax,0x18(%rsi)
    10e2:	48 8b 87 f0 00 00 00 	mov    0xf0(%rdi),%rax
    10e9:	48 89 46 10          	mov    %rax,0x10(%rsi)
    10ed:	48 8b 87 f8 00 00 00 	mov    0xf8(%rdi),%rax
    10f4:	48 89 46 08          	mov    %rax,0x8(%rsi)
    10f8:	48 8b 87 00 01 00 00 	mov    0x100(%rdi),%rax
    10ff:	48 89 06             	mov    %rax,(%rsi)
    1102:	48 8b 87 b0 00 00 00 	mov    0xb0(%rdi),%rax
    1109:	48 89 46 20          	mov    %rax,0x20(%rsi)
    110d:	e8 6e fc ff ff       	callq  d80 <vmx_get_cpu>
    1112:	ba 1e 68 00 00       	mov    $0x681e,%edx
    1117:	0f 78 d0             	vmread %rdx,%rax
    111a:	ba 1c 68 00 00       	mov    $0x681c,%edx
    111f:	48 89 83 80 00 00 00 	mov    %rax,0x80(%rbx)
    1126:	0f 78 d0             	vmread %rdx,%rax
    1129:	ba 20 68 00 00       	mov    $0x6820,%edx
    112e:	48 89 83 98 00 00 00 	mov    %rax,0x98(%rbx)
    1135:	0f 78 d0             	vmread %rdx,%rax
    1138:	0f b6 c0             	movzbl %al,%eax
    113b:	49 8d bc 24 48 02 00 	lea    0x248(%r12),%rdi
    1142:	00 
    1143:	48 0d 02 02 00 00    	or     $0x202,%rax
    1149:	48 89 83 90 00 00 00 	mov    %rax,0x90(%rbx)
    1150:	e8 bb f8 ff ff       	callq  a10 <vmx_put_cpu.isra.9>
    1155:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
    115c:	00 00 
			115a: R_X86_64_32S	current_task
    115e:	48 8b 80 d8 13 00 00 	mov    0x13d8(%rax),%rax
    1165:	48 39 83 80 00 00 00 	cmp    %rax,0x80(%rbx)
    116c:	72 0b                	jb     1179 <make_pt_regs+0x129>
    116e:	48 8b 43 58          	mov    0x58(%rbx),%rax
    1172:	48 89 83 80 00 00 00 	mov    %rax,0x80(%rbx)
    1179:	48 c7 83 88 00 00 00 	movq   $0x33,0x88(%rbx)
    1180:	33 00 00 00 
    1184:	48 c7 83 a0 00 00 00 	movq   $0x2b,0xa0(%rbx)
    118b:	2b 00 00 00 
    118f:	5b                   	pop    %rbx
    1190:	41 5c                	pop    %r12
    1192:	5d                   	pop    %rbp
    1193:	c3                   	retq   
    1194:	66 90                	xchg   %ax,%ax
    1196:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    119d:	00 00 00 

00000000000011a0 <dune_sys_vfork>:
dune_sys_vfork():
    11a0:	e8 00 00 00 00       	callq  11a5 <dune_sys_vfork+0x5>
			11a1: R_X86_64_PC32	__fentry__-0x4
    11a5:	55                   	push   %rbp
    11a6:	ba 3a 00 00 00       	mov    $0x3a,%edx
    11ab:	4c 89 df             	mov    %r11,%rdi
    11ae:	48 89 e5             	mov    %rsp,%rbp
    11b1:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
    11b8:	48 8d b5 50 ff ff ff 	lea    -0xb0(%rbp),%rsi
    11bf:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
    11c6:	00 00 
    11c8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    11cc:	31 c0                	xor    %eax,%eax
    11ce:	e8 7d fe ff ff       	callq  1050 <make_pt_regs>
    11d3:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    11d7:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
    11de:	45 31 c9             	xor    %r9d,%r9d
    11e1:	45 31 c0             	xor    %r8d,%r8d
    11e4:	31 c9                	xor    %ecx,%ecx
    11e6:	bf 11 41 00 00       	mov    $0x4111,%edi
    11eb:	e8 d0 f8 ff ff       	callq  ac0 <dune_do_fork.constprop.24>
    11f0:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    11f4:	65 48 33 0c 25 28 00 	xor    %gs:0x28,%rcx
    11fb:	00 00 
    11fd:	75 02                	jne    1201 <dune_sys_vfork+0x61>
    11ff:	c9                   	leaveq 
    1200:	c3                   	retq   
    1201:	e8 00 00 00 00       	callq  1206 <dune_sys_vfork+0x66>
			1202: R_X86_64_PC32	__stack_chk_fail-0x4
    1206:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    120d:	00 00 00 

0000000000001210 <dune_sys_fork>:
dune_sys_fork():
    1210:	e8 00 00 00 00       	callq  1215 <dune_sys_fork+0x5>
			1211: R_X86_64_PC32	__fentry__-0x4
    1215:	55                   	push   %rbp
    1216:	ba 39 00 00 00       	mov    $0x39,%edx
    121b:	4c 89 df             	mov    %r11,%rdi
    121e:	48 89 e5             	mov    %rsp,%rbp
    1221:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
    1228:	48 8d b5 50 ff ff ff 	lea    -0xb0(%rbp),%rsi
    122f:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
    1236:	00 00 
    1238:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    123c:	31 c0                	xor    %eax,%eax
    123e:	e8 0d fe ff ff       	callq  1050 <make_pt_regs>
    1243:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    1247:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
    124e:	45 31 c9             	xor    %r9d,%r9d
    1251:	45 31 c0             	xor    %r8d,%r8d
    1254:	31 c9                	xor    %ecx,%ecx
    1256:	bf 11 00 00 00       	mov    $0x11,%edi
    125b:	e8 60 f8 ff ff       	callq  ac0 <dune_do_fork.constprop.24>
    1260:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    1264:	65 48 33 0c 25 28 00 	xor    %gs:0x28,%rcx
    126b:	00 00 
    126d:	75 02                	jne    1271 <dune_sys_fork+0x61>
    126f:	c9                   	leaveq 
    1270:	c3                   	retq   
    1271:	e8 00 00 00 00       	callq  1276 <dune_sys_fork+0x66>
			1272: R_X86_64_PC32	__stack_chk_fail-0x4
    1276:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    127d:	00 00 00 

0000000000001280 <dune_sys_clone>:
dune_sys_clone():
    1280:	e8 00 00 00 00       	callq  1285 <dune_sys_clone+0x5>
			1281: R_X86_64_PC32	__fentry__-0x4
    1285:	55                   	push   %rbp
    1286:	48 89 e5             	mov    %rsp,%rbp
    1289:	41 57                	push   %r15
    128b:	41 56                	push   %r14
    128d:	41 55                	push   %r13
    128f:	41 54                	push   %r12
    1291:	49 89 d5             	mov    %rdx,%r13
    1294:	53                   	push   %rbx
    1295:	48 89 f3             	mov    %rsi,%rbx
    1298:	48 8d b5 28 ff ff ff 	lea    -0xd8(%rbp),%rsi
    129f:	ba 38 00 00 00       	mov    $0x38,%edx
    12a4:	49 89 fc             	mov    %rdi,%r12
    12a7:	49 89 ce             	mov    %rcx,%r14
    12aa:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
    12b1:	4d 89 c7             	mov    %r8,%r15
    12b4:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
    12bb:	00 00 
    12bd:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    12c1:	31 c0                	xor    %eax,%eax
    12c3:	4c 89 df             	mov    %r11,%rdi
    12c6:	e8 85 fd ff ff       	callq  1050 <make_pt_regs>
    12cb:	48 85 db             	test   %rbx,%rbx
    12ce:	75 04                	jne    12d4 <dune_sys_clone+0x54>
    12d0:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
    12d4:	48 8d 95 28 ff ff ff 	lea    -0xd8(%rbp),%rdx
    12db:	4c 89 e9             	mov    %r13,%rcx
    12de:	4d 89 f9             	mov    %r15,%r9
    12e1:	4d 89 f0             	mov    %r14,%r8
    12e4:	48 89 de             	mov    %rbx,%rsi
    12e7:	4c 89 e7             	mov    %r12,%rdi
    12ea:	e8 d1 f7 ff ff       	callq  ac0 <dune_do_fork.constprop.24>
    12ef:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    12f3:	65 48 33 0c 25 28 00 	xor    %gs:0x28,%rcx
    12fa:	00 00 
    12fc:	75 12                	jne    1310 <dune_sys_clone+0x90>
    12fe:	48 81 c4 b0 00 00 00 	add    $0xb0,%rsp
    1305:	5b                   	pop    %rbx
    1306:	41 5c                	pop    %r12
    1308:	41 5d                	pop    %r13
    130a:	41 5e                	pop    %r14
    130c:	41 5f                	pop    %r15
    130e:	5d                   	pop    %rbp
    130f:	c3                   	retq   
    1310:	e8 00 00 00 00       	callq  1315 <dune_sys_clone+0x95>
			1311: R_X86_64_PC32	__stack_chk_fail-0x4
    1315:	90                   	nop
    1316:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    131d:	00 00 00 

0000000000001320 <dune_fpu__restore>:
dune_fpu__restore():
    1320:	e8 00 00 00 00       	callq  1325 <dune_fpu__restore+0x5>
			1321: R_X86_64_PC32	__fentry__-0x4
    1325:	55                   	push   %rbp
    1326:	48 89 e5             	mov    %rsp,%rbp
    1329:	41 54                	push   %r12
    132b:	53                   	push   %rbx
    132c:	48 89 fb             	mov    %rdi,%rbx
    132f:	48 83 ec 10          	sub    $0x10,%rsp
    1333:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
    133a:	00 00 
    133c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1340:	31 c0                	xor    %eax,%eax
    1342:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
    1349:	00 00 
			1347: R_X86_64_32S	current_task
    134b:	48 05 00 14 00 00    	add    $0x1400,%rax
    1351:	48 39 c7             	cmp    %rax,%rdi
    1354:	0f 85 90 00 00 00    	jne    13ea <dune_fpu__restore+0xca>
    135a:	80 7b 10 00          	cmpb   $0x0,0x10(%rbx)
    135e:	4c 8d 63 40          	lea    0x40(%rbx),%r12
    1362:	74 70                	je     13d4 <dune_fpu__restore+0xb4>
    1364:	65 8a 05 00 00 00 00 	mov    %gs:0x0(%rip),%al        # 136b <dune_fpu__restore+0x4b>
			1367: R_X86_64_PC32	.data..percpu+0x24
    136b:	84 c0                	test   %al,%al
    136d:	75 73                	jne    13e2 <dune_fpu__restore+0xc2>
    136f:	65 c6 05 00 00 00 00 	movb   $0x1,%gs:0x0(%rip)        # 1377 <dune_fpu__restore+0x57>
    1376:	01 
			1372: R_X86_64_PC32	.data..percpu+0x23
    1377:	65 48 89 1d 00 00 00 	mov    %rbx,%gs:0x0(%rip)        # 137f <dune_fpu__restore+0x5f>
    137e:	00 
			137b: R_X86_64_PC32	.data..percpu+0x1c
    137f:	4c 89 65 e0          	mov    %r12,-0x20(%rbp)
    1383:	e9 00 00 00 00       	jmpq   1388 <dune_fpu__restore+0x68>
			1384: R_X86_64_PC32	.altinstr_aux-0x4
    1388:	db e2                	fnclex 
    138a:	0f 77                	emms   
    138c:	db 45 e0             	fildl  -0x20(%rbp)
    138f:	e9 00 00 00 00       	jmpq   1394 <dune_fpu__restore+0x74>
			1390: R_X86_64_PC32	.altinstr_aux+0xe
    1394:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    1399:	4c 89 e7             	mov    %r12,%rdi
    139c:	89 c2                	mov    %eax,%edx
    139e:	48 0f ae 2f          	xrstor64 (%rdi)
    13a2:	65 8a 05 00 00 00 00 	mov    %gs:0x0(%rip),%al        # 13a9 <dune_fpu__restore+0x89>
			13a5: R_X86_64_PC32	.data..percpu+0x24
    13a9:	84 c0                	test   %al,%al
    13ab:	74 39                	je     13e6 <dune_fpu__restore+0xc6>
    13ad:	65 c6 05 00 00 00 00 	movb   $0x0,%gs:0x0(%rip)        # 13b5 <dune_fpu__restore+0x95>
    13b4:	00 
			13b0: R_X86_64_PC32	.data..percpu+0x23
    13b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    13b9:	65 48 33 04 25 28 00 	xor    %gs:0x28,%rax
    13c0:	00 00 
    13c2:	75 2d                	jne    13f1 <dune_fpu__restore+0xd1>
    13c4:	48 83 c4 10          	add    $0x10,%rsp
    13c8:	5b                   	pop    %rbx
    13c9:	41 5c                	pop    %r12
    13cb:	5d                   	pop    %rbp
    13cc:	c3                   	retq   
    13cd:	48 0f ae 4b 40       	fxrstor64 0x40(%rbx)
    13d2:	eb ce                	jmp    13a2 <dune_fpu__restore+0x82>
    13d4:	4c 89 e7             	mov    %r12,%rdi
    13d7:	e8 00 00 00 00       	callq  13dc <dune_fpu__restore+0xbc>
			13d8: R_X86_64_PC32	fpstate_init-0x4
    13dc:	c6 43 10 01          	movb   $0x1,0x10(%rbx)
    13e0:	eb 82                	jmp    1364 <dune_fpu__restore+0x44>
    13e2:	0f 0b                	ud2    
    13e4:	eb 89                	jmp    136f <dune_fpu__restore+0x4f>
    13e6:	0f 0b                	ud2    
    13e8:	eb c3                	jmp    13ad <dune_fpu__restore+0x8d>
    13ea:	0f 0b                	ud2    
    13ec:	e9 69 ff ff ff       	jmpq   135a <dune_fpu__restore+0x3a>
    13f1:	e8 00 00 00 00       	callq  13f6 <dune_fpu__restore+0xd6>
			13f2: R_X86_64_PC32	__stack_chk_fail-0x4
    13f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    13fd:	00 00 00 

0000000000001400 <vmx_ept_sync_vcpu>:
vmx_ept_sync_vcpu():
    1400:	e8 00 00 00 00       	callq  1405 <vmx_ept_sync_vcpu+0x5>
			1401: R_X86_64_PC32	__fentry__-0x4
    1405:	55                   	push   %rbp
    1406:	48 89 fa             	mov    %rdi,%rdx
    1409:	8b 7f 10             	mov    0x10(%rdi),%edi
    140c:	b9 01 00 00 00       	mov    $0x1,%ecx
    1411:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			1414: R_X86_64_32S	.text+0xbc0
    1418:	48 89 e5             	mov    %rsp,%rbp
    141b:	e8 00 00 00 00       	callq  1420 <vmx_ept_sync_vcpu+0x20>
			141c: R_X86_64_PC32	smp_call_function_single-0x4
    1420:	5d                   	pop    %rbp
    1421:	c3                   	retq   
    1422:	0f 1f 40 00          	nopl   0x0(%rax)
    1426:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    142d:	00 00 00 

0000000000001430 <vmx_ept_sync_individual_addr>:
vmx_ept_sync_individual_addr():
    1430:	e8 00 00 00 00       	callq  1435 <vmx_ept_sync_individual_addr+0x5>
			1431: R_X86_64_PC32	__fentry__-0x4
    1435:	55                   	push   %rbp
    1436:	b9 01 00 00 00       	mov    $0x1,%ecx
    143b:	48 89 e5             	mov    %rsp,%rbp
    143e:	48 83 ec 18          	sub    $0x18,%rsp
    1442:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1446:	8b 7f 10             	mov    0x10(%rdi),%edi
    1449:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    144d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1451:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			1454: R_X86_64_32S	.text+0xcc0
    1458:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
    145f:	00 00 
    1461:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1465:	31 c0                	xor    %eax,%eax
    1467:	e8 00 00 00 00       	callq  146c <vmx_ept_sync_individual_addr+0x3c>
			1468: R_X86_64_PC32	smp_call_function_single-0x4
    146c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1470:	65 48 33 04 25 28 00 	xor    %gs:0x28,%rax
    1477:	00 00 
    1479:	75 02                	jne    147d <vmx_ept_sync_individual_addr+0x4d>
    147b:	c9                   	leaveq 
    147c:	c3                   	retq   
    147d:	e8 00 00 00 00       	callq  1482 <vmx_ept_sync_individual_addr+0x52>
			147e: R_X86_64_PC32	__stack_chk_fail-0x4
    1482:	0f 1f 40 00          	nopl   0x0(%rax)
    1486:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    148d:	00 00 00 

0000000000001490 <vmx_cleanup>:
vmx_cleanup():
    1490:	e8 00 00 00 00       	callq  1495 <vmx_cleanup+0x5>
			1491: R_X86_64_PC32	__fentry__-0x4
    1495:	55                   	push   %rbp
    1496:	48 89 e5             	mov    %rsp,%rbp
    1499:	41 57                	push   %r15
    149b:	41 56                	push   %r14
    149d:	41 55                	push   %r13
    149f:	41 54                	push   %r12
    14a1:	53                   	push   %rbx
    14a2:	48 83 ec 18          	sub    $0x18,%rsp
    14a6:	48 8b 1d 00 00 00 00 	mov    0x0(%rip),%rbx        # 14ad <vmx_cleanup+0x1d>
			14a9: R_X86_64_PC32	.data+0x7c
    14ad:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
    14b4:	00 00 
    14b6:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    14ba:	31 c0                	xor    %eax,%eax
    14bc:	48 81 fb 00 00 00 00 	cmp    $0x0,%rbx
			14bf: R_X86_64_32S	.data+0x80
    14c3:	75 22                	jne    14e7 <vmx_cleanup+0x57>
    14c5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    14c9:	65 48 33 04 25 28 00 	xor    %gs:0x28,%rax
    14d0:	00 00 
    14d2:	0f 85 f6 00 00 00    	jne    15ce <vmx_cleanup+0x13e>
    14d8:	48 83 c4 18          	add    $0x18,%rsp
    14dc:	5b                   	pop    %rbx
    14dd:	41 5c                	pop    %r12
    14df:	41 5d                	pop    %r13
    14e1:	41 5e                	pop    %r14
    14e3:	41 5f                	pop    %r15
    14e5:	5d                   	pop    %rbp
    14e6:	c3                   	retq   
    14e7:	4c 8b 3b             	mov    (%rbx),%r15
    14ea:	4c 8d 65 c0          	lea    -0x40(%rbp),%r12
    14ee:	49 be 00 01 00 00 00 	movabs $0xdead000000000100,%r14
    14f5:	00 ad de 
    14f8:	49 bd 22 01 00 00 00 	movabs $0xdead000000000122,%r13
    14ff:	00 ad de 
    1502:	8b 73 14             	mov    0x14(%rbx),%esi
    1505:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1508: R_X86_64_32S	.rodata.str1.8+0x400
    150c:	e8 00 00 00 00       	callq  1511 <vmx_cleanup+0x81>
			150d: R_X86_64_PC32	printk-0x4
    1511:	48 8b 43 08          	mov    0x8(%rbx),%rax
    1515:	48 8b 13             	mov    (%rbx),%rdx
    1518:	48 89 df             	mov    %rbx,%rdi
    151b:	48 89 42 08          	mov    %rax,0x8(%rdx)
    151f:	48 89 10             	mov    %rdx,(%rax)
    1522:	4c 89 33             	mov    %r14,(%rbx)
    1525:	4c 89 6b 08          	mov    %r13,0x8(%rbx)
    1529:	e8 00 00 00 00       	callq  152e <vmx_cleanup+0x9e>
			152a: R_X86_64_PC32	vmx_destroy_ept-0x4
    152e:	48 89 df             	mov    %rbx,%rdi
    1531:	e8 4a f8 ff ff       	callq  d80 <vmx_get_cpu>
    1536:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 153c <vmx_cleanup+0xac>
			1538: R_X86_64_PC32	vmx_capability+0xc
    153c:	a9 00 00 00 02       	test   $0x2000000,%eax
    1541:	0f 85 8c 00 00 00    	jne    15d3 <vmx_cleanup+0x143>
    1547:	a9 00 00 00 04       	test   $0x4000000,%eax
    154c:	74 21                	je     156f <vmx_cleanup+0xdf>
    154e:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    1555:	00 
    1556:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    155d:	00 
    155e:	4c 89 e0             	mov    %r12,%rax
    1561:	b9 02 00 00 00       	mov    $0x2,%ecx
    1566:	66 0f 38 80 08       	invept (%rax),%rcx
    156b:	77 02                	ja     156f <vmx_cleanup+0xdf>
    156d:	0f 0b                	ud2    
    156f:	48 8b bb 30 02 00 00 	mov    0x230(%rbx),%rdi
    1576:	e8 c5 f0 ff ff       	callq  640 <vmcs_clear>
    157b:	65 48 c7 05 00 00 00 	movq   $0x0,%gs:0x0(%rip)        # 1587 <vmx_cleanup+0xf7>
    1582:	00 00 00 00 00 
			157f: R_X86_64_PC32	local_vcpu-0x8
    1587:	48 8d bb 48 02 00 00 	lea    0x248(%rbx),%rdi
    158e:	e8 7d f4 ff ff       	callq  a10 <vmx_put_cpu.isra.9>
    1593:	48 8d 7b 14          	lea    0x14(%rbx),%rdi
    1597:	e8 94 f4 ff ff       	callq  a30 <vmx_free_vpid.isra.11>
    159c:	48 8b bb 30 02 00 00 	mov    0x230(%rbx),%rdi
    15a3:	8b 35 00 00 00 00    	mov    0x0(%rip),%esi        # 15a9 <vmx_cleanup+0x119>
			15a5: R_X86_64_PC32	.bss+0x40
    15a9:	e8 00 00 00 00       	callq  15ae <vmx_cleanup+0x11e>
			15aa: R_X86_64_PC32	free_pages-0x4
    15ae:	48 89 df             	mov    %rbx,%rdi
    15b1:	e8 00 00 00 00       	callq  15b6 <vmx_cleanup+0x126>
			15b2: R_X86_64_PC32	kfree-0x4
    15b6:	49 81 ff 00 00 00 00 	cmp    $0x0,%r15
			15b9: R_X86_64_32S	.data+0x80
    15bd:	0f 84 02 ff ff ff    	je     14c5 <vmx_cleanup+0x35>
    15c3:	4c 89 fb             	mov    %r15,%rbx
    15c6:	4d 8b 3f             	mov    (%r15),%r15
    15c9:	e9 34 ff ff ff       	jmpq   1502 <vmx_cleanup+0x72>
    15ce:	e8 00 00 00 00       	callq  15d3 <vmx_cleanup+0x143>
			15cf: R_X86_64_PC32	__stack_chk_fail-0x4
    15d3:	48 8b 43 68          	mov    0x68(%rbx),%rax
    15d7:	b9 01 00 00 00       	mov    $0x1,%ecx
    15dc:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    15e3:	00 
    15e4:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    15e8:	4c 89 e0             	mov    %r12,%rax
    15eb:	66 0f 38 80 08       	invept (%rax),%rcx
    15f0:	77 02                	ja     15f4 <vmx_cleanup+0x164>
    15f2:	0f 0b                	ud2    
    15f4:	e9 76 ff ff ff       	jmpq   156f <vmx_cleanup+0xdf>
    15f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001600 <vmx_launch>:
vmx_launch():
    1600:	e8 00 00 00 00       	callq  1605 <vmx_launch+0x5>
			1601: R_X86_64_PC32	__fentry__-0x4
    1605:	55                   	push   %rbp
    1606:	48 89 e5             	mov    %rsp,%rbp
    1609:	41 57                	push   %r15
    160b:	41 56                	push   %r14
    160d:	41 55                	push   %r13
    160f:	41 54                	push   %r12
    1611:	53                   	push   %rbx
    1612:	48 83 ec 68          	sub    $0x68,%rsp
    1616:	48 8b 9f a8 00 00 00 	mov    0xa8(%rdi),%rbx
    161d:	48 89 7d 90          	mov    %rdi,-0x70(%rbp)
    1621:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
    1628:	00 00 
    162a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    162e:	31 c0                	xor    %eax,%eax
    1630:	48 89 75 88          	mov    %rsi,-0x78(%rbp)
    1634:	48 85 db             	test   %rbx,%rbx
    1637:	0f 85 5d 0b 00 00    	jne    219a <vmx_launch+0xb9a>
    163d:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 1644 <vmx_launch+0x44>
			1640: R_X86_64_PC32	kmalloc_caches+0x4c
    1644:	ba 60 02 00 00       	mov    $0x260,%edx
    1649:	be c0 0c 00 00       	mov    $0xcc0,%esi
    164e:	e8 00 00 00 00       	callq  1653 <vmx_launch+0x53>
			164f: R_X86_64_PC32	kmem_cache_alloc_trace-0x4
    1653:	48 85 c0             	test   %rax,%rax
    1656:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    165a:	0f 84 a9 10 00 00    	je     2709 <vmx_launch+0x1109>
    1660:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
    1664:	48 89 d8             	mov    %rbx,%rax
    1667:	b9 4c 00 00 00       	mov    $0x4c,%ecx
    166c:	48 8b 5d 98          	mov    -0x68(%rbp),%rbx
    1670:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    1673:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 167a <vmx_launch+0x7a>
			1676: R_X86_64_PC32	.data+0x7c
    167a:	48 89 1d 00 00 00 00 	mov    %rbx,0x0(%rip)        # 1681 <vmx_launch+0x81>
			167d: R_X86_64_PC32	.data+0x7c
    1681:	48 89 58 08          	mov    %rbx,0x8(%rax)
    1685:	48 89 03             	mov    %rax,(%rbx)
    1688:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    168c:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    1693:	00 
			1690: R_X86_64_32S	.data+0x80
    1694:	48 89 83 40 02 00 00 	mov    %rax,0x240(%rbx)
    169b:	48 89 98 a8 00 00 00 	mov    %rbx,0xa8(%rax)
    16a2:	65 8b 3d 00 00 00 00 	mov    %gs:0x0(%rip),%edi        # 16a9 <vmx_launch+0xa9>
			16a5: R_X86_64_PC32	cpu_number-0x4
    16a9:	e8 f2 f1 ff ff       	callq  8a0 <__vmx_alloc_vmcs>
    16ae:	48 85 c0             	test   %rax,%rax
    16b1:	48 89 83 30 02 00 00 	mov    %rax,0x230(%rbx)
    16b8:	0f 84 42 10 00 00    	je     2700 <vmx_launch+0x1100>
    16be:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16c1: R_X86_64_32S	.bss+0x20068
    16c5:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%rbx)
    16cc:	e8 00 00 00 00       	callq  16d1 <vmx_launch+0xd1>
			16cd: R_X86_64_PC32	_raw_spin_lock-0x4
    16d1:	be 00 00 01 00       	mov    $0x10000,%esi
    16d6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16d9: R_X86_64_32S	.bss+0x20080
    16dd:	e8 00 00 00 00       	callq  16e2 <vmx_launch+0xe2>
			16de: R_X86_64_PC32	find_first_zero_bit-0x4
    16e2:	3d ff ff 00 00       	cmp    $0xffff,%eax
    16e7:	48 89 c2             	mov    %rax,%rdx
    16ea:	7f 0d                	jg     16f9 <vmx_launch+0xf9>
    16ec:	89 43 14             	mov    %eax,0x14(%rbx)
    16ef:	48 98                	cltq   
    16f1:	48 0f ab 05 00 00 00 	bts    %rax,0x0(%rip)        # 16f9 <vmx_launch+0xf9>
    16f8:	00 
			16f5: R_X86_64_PC32	.bss+0x2007c
    16f9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			16fc: R_X86_64_32S	.bss+0x20068
    1700:	ff 14 25 00 00 00 00 	callq  *0x0
			1703: R_X86_64_32S	pv_ops+0x298
    1707:	81 fa ff ff 00 00    	cmp    $0xffff,%edx
    170d:	0f 8f d7 0f 00 00    	jg     26ea <vmx_launch+0x10ea>
    1713:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
    1717:	c7 41 10 ff ff ff ff 	movl   $0xffffffff,0x10(%rcx)
    171e:	48 c7 81 38 02 00 00 	movq   $0x0,0x238(%rcx)
    1725:	00 00 00 00 
			1725: R_X86_64_32S	.data..cacheline_aligned
    1729:	0f 01 4d a4          	sidt   -0x5c(%rbp)
    172d:	48 8b 45 a6          	mov    -0x5a(%rbp),%rax
    1731:	c7 41 58 00 00 00 00 	movl   $0x0,0x58(%rcx)
    1738:	48 89 cf             	mov    %rcx,%rdi
    173b:	48 89 cb             	mov    %rcx,%rbx
    173e:	48 89 81 50 02 00 00 	mov    %rax,0x250(%rcx)
    1745:	e8 00 00 00 00       	callq  174a <vmx_launch+0x14a>
			1746: R_X86_64_PC32	vmx_init_ept-0x4
    174a:	85 c0                	test   %eax,%eax
    174c:	0f 85 8b 0f 00 00    	jne    26dd <vmx_launch+0x10dd>
    1752:	48 8b 43 60          	mov    0x60(%rbx),%rax
    1756:	48 89 df             	mov    %rbx,%rdi
    1759:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    175d:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 1763 <vmx_launch+0x163>
			175f: R_X86_64_PC32	vmx_capability+0xc
    1763:	25 00 00 20 00       	and    $0x200000,%eax
    1768:	83 f8 01             	cmp    $0x1,%eax
    176b:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    176f:	48 19 d2             	sbb    %rdx,%rdx
    1772:	48 83 e2 c0          	and    $0xffffffffffffffc0,%rdx
    1776:	48 83 c2 5e          	add    $0x5e,%rdx
    177a:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    1780:	48 09 d0             	or     %rdx,%rax
    1783:	48 89 43 68          	mov    %rax,0x68(%rbx)
    1787:	e8 f4 f5 ff ff       	callq  d80 <vmx_get_cpu>
    178c:	0f b7 43 14          	movzwl 0x14(%rbx),%eax
    1790:	31 d2                	xor    %edx,%edx
    1792:	0f 79 d0             	vmwrite %rax,%rdx
    1795:	0f 96 c2             	setbe  %dl
    1798:	84 d2                	test   %dl,%dl
    179a:	0f 85 cd 10 00 00    	jne    286d <vmx_launch+0x126d>
    17a0:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    17a7:	ba 00 28 00 00       	mov    $0x2800,%edx
    17ac:	0f 79 d0             	vmwrite %rax,%rdx
    17af:	0f 96 c2             	setbe  %dl
    17b2:	84 d2                	test   %dl,%dl
    17b4:	0f 85 8f 10 00 00    	jne    2849 <vmx_launch+0x1249>
    17ba:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 17c0 <vmx_launch+0x1c0>
			17bc: R_X86_64_PC32	.bss+0x48
    17c0:	ba 00 40 00 00       	mov    $0x4000,%edx
    17c5:	0f 79 d0             	vmwrite %rax,%rdx
    17c8:	0f 96 c2             	setbe  %dl
    17cb:	84 d2                	test   %dl,%dl
    17cd:	0f 85 88 10 00 00    	jne    285b <vmx_launch+0x125b>
    17d3:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 17d9 <vmx_launch+0x1d9>
			17d5: R_X86_64_PC32	.bss+0x4c
    17d9:	ba 02 40 00 00       	mov    $0x4002,%edx
    17de:	48 89 c1             	mov    %rax,%rcx
    17e1:	0f 79 d0             	vmwrite %rax,%rdx
    17e4:	0f 96 c2             	setbe  %dl
    17e7:	84 d2                	test   %dl,%dl
    17e9:	0f 85 8d 10 00 00    	jne    287c <vmx_launch+0x127c>
    17ef:	85 c9                	test   %ecx,%ecx
    17f1:	0f 88 39 0f 00 00    	js     2730 <vmx_launch+0x1130>
    17f7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    17fb:	ba 1a 20 00 00       	mov    $0x201a,%edx
    1800:	48 8b 40 68          	mov    0x68(%rax),%rax
    1804:	0f 79 d0             	vmwrite %rax,%rdx
    1807:	0f 96 c2             	setbe  %dl
    180a:	84 d2                	test   %dl,%dl
    180c:	0f 85 66 11 00 00    	jne    2978 <vmx_launch+0x1378>
    1812:	31 c0                	xor    %eax,%eax
    1814:	ba 06 40 00 00       	mov    $0x4006,%edx
    1819:	0f 79 d0             	vmwrite %rax,%rdx
    181c:	0f 96 c0             	setbe  %al
    181f:	84 c0                	test   %al,%al
    1821:	0f 85 86 0f 00 00    	jne    27ad <vmx_launch+0x11ad>
    1827:	31 c0                	xor    %eax,%eax
    1829:	ba 08 40 00 00       	mov    $0x4008,%edx
    182e:	0f 79 d0             	vmwrite %rax,%rdx
    1831:	0f 96 c0             	setbe  %al
    1834:	84 c0                	test   %al,%al
    1836:	0f 85 eb 0f 00 00    	jne    2827 <vmx_launch+0x1227>
    183c:	31 c0                	xor    %eax,%eax
    183e:	ba 0a 40 00 00       	mov    $0x400a,%edx
    1843:	0f 79 d0             	vmwrite %rax,%rdx
    1846:	0f 96 c0             	setbe  %al
    1849:	84 c0                	test   %al,%al
    184b:	0f 85 e7 0f 00 00    	jne    2838 <vmx_launch+0x1238>
    1851:	be 00 00 00 80       	mov    $0x80000000,%esi
    1856:	48 03 35 00 00 00 00 	add    0x0(%rip),%rsi        # 185d <vmx_launch+0x25d>
			1859: R_X86_64_PC32	.bss+0x2005c
    185d:	0f 82 73 19 00 00    	jb     31d6 <vmx_launch+0x1bd6>
    1863:	48 c7 c0 00 00 00 80 	mov    $0xffffffff80000000,%rax
    186a:	48 2b 05 00 00 00 00 	sub    0x0(%rip),%rax        # 1871 <vmx_launch+0x271>
			186d: R_X86_64_PC32	page_offset_base-0x4
    1871:	48 01 f0             	add    %rsi,%rax
    1874:	ba 04 20 00 00       	mov    $0x2004,%edx
    1879:	0f 79 d0             	vmwrite %rax,%rdx
    187c:	0f 96 c2             	setbe  %dl
    187f:	84 d2                	test   %dl,%dl
    1881:	0f 85 df 10 00 00    	jne    2966 <vmx_launch+0x1366>
    1887:	31 c0                	xor    %eax,%eax
    1889:	ba 10 40 00 00       	mov    $0x4010,%edx
    188e:	0f 79 d0             	vmwrite %rax,%rdx
    1891:	0f 96 c0             	setbe  %al
    1894:	84 c0                	test   %al,%al
    1896:	0f 85 33 0f 00 00    	jne    27cf <vmx_launch+0x11cf>
    189c:	31 c0                	xor    %eax,%eax
    189e:	ba 14 40 00 00       	mov    $0x4014,%edx
    18a3:	0f 79 d0             	vmwrite %rax,%rdx
    18a6:	0f 96 c0             	setbe  %al
    18a9:	84 c0                	test   %al,%al
    18ab:	0f 85 2f 0f 00 00    	jne    27e0 <vmx_launch+0x11e0>
    18b1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    18b5:	48 8d b0 b0 01 00 00 	lea    0x1b0(%rax),%rsi
    18bc:	b8 00 00 00 80       	mov    $0x80000000,%eax
    18c1:	48 01 c6             	add    %rax,%rsi
    18c4:	0f 82 46 19 00 00    	jb     3210 <vmx_launch+0x1c10>
    18ca:	48 c7 c0 00 00 00 80 	mov    $0xffffffff80000000,%rax
    18d1:	48 2b 05 00 00 00 00 	sub    0x0(%rip),%rax        # 18d8 <vmx_launch+0x2d8>
			18d4: R_X86_64_PC32	page_offset_base-0x4
    18d8:	48 01 f0             	add    %rsi,%rax
    18db:	ba 08 20 00 00       	mov    $0x2008,%edx
    18e0:	0f 79 d0             	vmwrite %rax,%rdx
    18e3:	0f 96 c2             	setbe  %dl
    18e6:	84 d2                	test   %dl,%dl
    18e8:	0f 85 03 0f 00 00    	jne    27f1 <vmx_launch+0x11f1>
    18ee:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    18f2:	48 8d b0 30 01 00 00 	lea    0x130(%rax),%rsi
    18f9:	b8 00 00 00 80       	mov    $0x80000000,%eax
    18fe:	48 01 c6             	add    %rax,%rsi
    1901:	0f 82 c3 18 00 00    	jb     31ca <vmx_launch+0x1bca>
    1907:	48 c7 c0 00 00 00 80 	mov    $0xffffffff80000000,%rax
    190e:	48 2b 05 00 00 00 00 	sub    0x0(%rip),%rax        # 1915 <vmx_launch+0x315>
			1911: R_X86_64_PC32	page_offset_base-0x4
    1915:	48 01 f0             	add    %rsi,%rax
    1918:	ba 0a 20 00 00       	mov    $0x200a,%edx
    191d:	0f 79 d0             	vmwrite %rax,%rdx
    1920:	0f 96 c2             	setbe  %dl
    1923:	84 d2                	test   %dl,%dl
    1925:	0f 85 d8 0e 00 00    	jne    2803 <vmx_launch+0x1203>
    192b:	e8 00 00 00 00       	callq  1930 <vmx_launch+0x330>
			192c: R_X86_64_PC32	dune_apic_init_rt_entry-0x4
    1930:	f6 05 00 00 00 00 01 	testb  $0x1,0x0(%rip)        # 1937 <vmx_launch+0x337>
			1932: R_X86_64_PC32	vmx_capability+0x8
    1937:	0f 84 4a 0d 00 00    	je     2687 <vmx_launch+0x1087>
    193d:	65 8b 05 00 00 00 00 	mov    %gs:0x0(%rip),%eax        # 1944 <vmx_launch+0x344>
			1940: R_X86_64_PC32	cpu_number-0x4
    1944:	48 98                	cltq   
    1946:	be 00 00 00 80       	mov    $0x80000000,%esi
    194b:	48 03 34 c5 00 00 00 	add    0x0(,%rax,8),%rsi
    1952:	00 
			194f: R_X86_64_32S	.bss+0x10060
    1953:	0f 82 cf 18 00 00    	jb     3228 <vmx_launch+0x1c28>
    1959:	48 c7 c0 00 00 00 80 	mov    $0xffffffff80000000,%rax
    1960:	48 2b 05 00 00 00 00 	sub    0x0(%rip),%rax        # 1967 <vmx_launch+0x367>
			1963: R_X86_64_PC32	page_offset_base-0x4
    1967:	48 01 f0             	add    %rsi,%rax
    196a:	ba 12 20 00 00       	mov    $0x2012,%edx
    196f:	0f 79 d0             	vmwrite %rax,%rdx
    1972:	0f 96 c2             	setbe  %dl
    1975:	84 d2                	test   %dl,%dl
    1977:	0f 85 f2 0d 00 00    	jne    276f <vmx_launch+0x116f>
    197d:	f6 05 00 00 00 00 80 	testb  $0x80,0x0(%rip)        # 1984 <vmx_launch+0x384>
			197f: R_X86_64_PC32	vmx_capability-0x1
    1984:	0f 84 25 0d 00 00    	je     26af <vmx_launch+0x10af>
    198a:	65 8b 05 00 00 00 00 	mov    %gs:0x0(%rip),%eax        # 1991 <vmx_launch+0x391>
			198d: R_X86_64_PC32	cpu_number-0x4
    1991:	48 98                	cltq   
    1993:	be 00 00 00 80       	mov    $0x80000000,%esi
    1998:	48 03 34 c5 00 00 00 	add    0x0(,%rax,8),%rsi
    199f:	00 
			199c: R_X86_64_32S	.bss+0x60
    19a0:	0f 82 76 18 00 00    	jb     321c <vmx_launch+0x1c1c>
    19a6:	48 c7 c0 00 00 00 80 	mov    $0xffffffff80000000,%rax
    19ad:	48 2b 05 00 00 00 00 	sub    0x0(%rip),%rax        # 19b4 <vmx_launch+0x3b4>
			19b0: R_X86_64_PC32	page_offset_base-0x4
    19b4:	48 01 f0             	add    %rsi,%rax
    19b7:	ba 16 20 00 00       	mov    $0x2016,%edx
    19bc:	0f 79 d0             	vmwrite %rax,%rdx
    19bf:	0f 96 c2             	setbe  %dl
    19c2:	84 d2                	test   %dl,%dl
    19c4:	0f 85 cf 0c 00 00    	jne    2699 <vmx_launch+0x1099>
    19ca:	f6 05 00 00 00 00 01 	testb  $0x1,0x0(%rip)        # 19d1 <vmx_launch+0x3d1>
			19cc: R_X86_64_PC32	vmx_capability+0x8
    19d1:	0f 85 d8 0c 00 00    	jne    26af <vmx_launch+0x10af>
    19d7:	b8 f2 00 00 00       	mov    $0xf2,%eax
    19dc:	ba 02 00 00 00       	mov    $0x2,%edx
    19e1:	0f 79 d0             	vmwrite %rax,%rdx
    19e4:	0f 96 c0             	setbe  %al
    19e7:	84 c0                	test   %al,%al
    19e9:	0f 85 6c 0d 00 00    	jne    275b <vmx_launch+0x115b>
    19ef:	8b 0d 00 00 00 00    	mov    0x0(%rip),%ecx        # 19f5 <vmx_launch+0x3f5>
			19f1: R_X86_64_PC32	.bss+0x58
    19f5:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 19fb <vmx_launch+0x3fb>
			19f7: R_X86_64_PC32	.bss+0x54
    19fb:	ba 0c 40 00 00       	mov    $0x400c,%edx
    1a00:	80 cd 02             	or     $0x2,%ch
    1a03:	89 0d 00 00 00 00    	mov    %ecx,0x0(%rip)        # 1a09 <vmx_launch+0x409>
			1a05: R_X86_64_PC32	.bss+0x58
    1a09:	0f 79 d0             	vmwrite %rax,%rdx
    1a0c:	0f 96 c2             	setbe  %dl
    1a0f:	84 d2                	test   %dl,%dl
    1a11:	0f 85 92 12 00 00    	jne    2ca9 <vmx_launch+0x16a9>
    1a17:	89 c8                	mov    %ecx,%eax
    1a19:	ba 12 40 00 00       	mov    $0x4012,%edx
    1a1e:	0f 79 d0             	vmwrite %rax,%rdx
    1a21:	0f 96 c2             	setbe  %dl
    1a24:	84 d2                	test   %dl,%dl
    1a26:	0f 85 95 12 00 00    	jne    2cc1 <vmx_launch+0x16c1>
    1a2c:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    1a33:	ba 00 60 00 00       	mov    $0x6000,%edx
    1a38:	0f 79 d0             	vmwrite %rax,%rdx
    1a3b:	0f 96 c2             	setbe  %dl
    1a3e:	84 d2                	test   %dl,%dl
    1a40:	0f 85 1a 12 00 00    	jne    2c60 <vmx_launch+0x1660>
    1a46:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    1a4d:	ba 02 60 00 00       	mov    $0x6002,%edx
    1a52:	0f 79 d0             	vmwrite %rax,%rdx
    1a55:	0f 96 c2             	setbe  %dl
    1a58:	84 d2                	test   %dl,%dl
    1a5a:	0f 85 12 12 00 00    	jne    2c72 <vmx_launch+0x1672>
    1a60:	31 c0                	xor    %eax,%eax
    1a62:	ba 10 20 00 00       	mov    $0x2010,%edx
    1a67:	0f 79 d0             	vmwrite %rax,%rdx
    1a6a:	0f 96 c0             	setbe  %al
    1a6d:	84 c0                	test   %al,%al
    1a6f:	0f 85 0f 12 00 00    	jne    2c84 <vmx_launch+0x1684>
    1a75:	b8 0a 00 00 00       	mov    $0xa,%eax
    1a7a:	ba 04 40 00 00       	mov    $0x4004,%edx
    1a7f:	0f 79 d0             	vmwrite %rax,%rdx
    1a82:	0f 96 c0             	setbe  %al
    1a85:	84 c0                	test   %al,%al
    1a87:	0f 85 08 12 00 00    	jne    2c95 <vmx_launch+0x1695>
    1a8d:	ff 14 25 00 00 00 00 	callq  *0x0
			1a90: R_X86_64_32S	pv_ops+0x30
    1a94:	ba 00 6c 00 00       	mov    $0x6c00,%edx
    1a99:	48 83 e0 f7          	and    $0xfffffffffffffff7,%rax
    1a9d:	0f 79 d0             	vmwrite %rax,%rdx
    1aa0:	0f 96 c2             	setbe  %dl
    1aa3:	84 d2                	test   %dl,%dl
    1aa5:	0f 85 1b 11 00 00    	jne    2bc6 <vmx_launch+0x15c6>
    1aab:	0f 20 e0             	mov    %cr4,%rax
    1aae:	ba 04 6c 00 00       	mov    $0x6c04,%edx
    1ab3:	0f 79 d0             	vmwrite %rax,%rdx
    1ab6:	0f 96 c2             	setbe  %dl
    1ab9:	84 d2                	test   %dl,%dl
    1abb:	0f 85 17 11 00 00    	jne    2bd8 <vmx_launch+0x15d8>
    1ac1:	ff 14 25 00 00 00 00 	callq  *0x0
			1ac4: R_X86_64_32S	pv_ops+0x188
    1ac8:	ba 02 6c 00 00       	mov    $0x6c02,%edx
    1acd:	0f 79 d0             	vmwrite %rax,%rdx
    1ad0:	0f 96 c2             	setbe  %dl
    1ad3:	84 d2                	test   %dl,%dl
    1ad5:	0f 85 0f 11 00 00    	jne    2bea <vmx_launch+0x15ea>
    1adb:	b8 10 00 00 00       	mov    $0x10,%eax
    1ae0:	ba 02 0c 00 00       	mov    $0xc02,%edx
    1ae5:	0f 79 d0             	vmwrite %rax,%rdx
    1ae8:	0f 96 c0             	setbe  %al
    1aeb:	84 c0                	test   %al,%al
    1aed:	0f 85 09 11 00 00    	jne    2bfc <vmx_launch+0x15fc>
    1af3:	b8 18 00 00 00       	mov    $0x18,%eax
    1af8:	ba 06 0c 00 00       	mov    $0xc06,%edx
    1afd:	0f 79 d0             	vmwrite %rax,%rdx
    1b00:	0f 96 c0             	setbe  %al
    1b03:	84 c0                	test   %al,%al
    1b05:	0f 85 05 11 00 00    	jne    2c10 <vmx_launch+0x1610>
    1b0b:	b8 18 00 00 00       	mov    $0x18,%eax
    1b10:	ba 00 0c 00 00       	mov    $0xc00,%edx
    1b15:	0f 79 d0             	vmwrite %rax,%rdx
    1b18:	0f 96 c0             	setbe  %al
    1b1b:	84 c0                	test   %al,%al
    1b1d:	0f 85 01 11 00 00    	jne    2c24 <vmx_launch+0x1624>
    1b23:	b8 18 00 00 00       	mov    $0x18,%eax
    1b28:	ba 04 0c 00 00       	mov    $0xc04,%edx
    1b2d:	0f 79 d0             	vmwrite %rax,%rdx
    1b30:	0f 96 c0             	setbe  %al
    1b33:	84 c0                	test   %al,%al
    1b35:	0f 85 fd 10 00 00    	jne    2c38 <vmx_launch+0x1638>
    1b3b:	b8 40 00 00 00       	mov    $0x40,%eax
    1b40:	ba 0c 0c 00 00       	mov    $0xc0c,%edx
    1b45:	0f 79 d0             	vmwrite %rax,%rdx
    1b48:	0f 96 c0             	setbe  %al
    1b4b:	84 c0                	test   %al,%al
    1b4d:	0f 85 f9 10 00 00    	jne    2c4c <vmx_launch+0x164c>
    1b53:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1b57:	ba 0e 6c 00 00       	mov    $0x6c0e,%edx
    1b5c:	48 8b 80 50 02 00 00 	mov    0x250(%rax),%rax
    1b63:	0f 79 d0             	vmwrite %rax,%rdx
    1b66:	0f 96 c2             	setbe  %dl
    1b69:	84 d2                	test   %dl,%dl
    1b6b:	0f 85 16 12 00 00    	jne    2d87 <vmx_launch+0x1787>
    1b71:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
			1b74: R_X86_64_32S	.text+0x2441
    1b78:	ba 16 6c 00 00       	mov    $0x6c16,%edx
    1b7d:	0f 79 d0             	vmwrite %rax,%rdx
    1b80:	0f 96 c2             	setbe  %dl
    1b83:	84 d2                	test   %dl,%dl
    1b85:	0f 85 0e 12 00 00    	jne    2d99 <vmx_launch+0x1799>
    1b8b:	bf 74 01 00 00       	mov    $0x174,%edi
    1b90:	ff 14 25 00 00 00 00 	callq  *0x0
			1b93: R_X86_64_32S	pv_ops+0xc8
    1b97:	ba 00 4c 00 00       	mov    $0x4c00,%edx
    1b9c:	89 c0                	mov    %eax,%eax
    1b9e:	0f 79 d0             	vmwrite %rax,%rdx
    1ba1:	0f 96 c2             	setbe  %dl
    1ba4:	84 d2                	test   %dl,%dl
    1ba6:	0f 85 ff 11 00 00    	jne    2dab <vmx_launch+0x17ab>
    1bac:	bf 76 01 00 00       	mov    $0x176,%edi
    1bb1:	ff 14 25 00 00 00 00 	callq  *0x0
			1bb4: R_X86_64_32S	pv_ops+0xc8
    1bb8:	ba 12 6c 00 00       	mov    $0x6c12,%edx
    1bbd:	0f 79 d0             	vmwrite %rax,%rdx
    1bc0:	0f 96 c2             	setbe  %dl
    1bc3:	84 d2                	test   %dl,%dl
    1bc5:	0f 85 f2 11 00 00    	jne    2dbd <vmx_launch+0x17bd>
    1bcb:	bf 80 00 00 c0       	mov    $0xc0000080,%edi
    1bd0:	ff 14 25 00 00 00 00 	callq  *0x0
			1bd3: R_X86_64_32S	pv_ops+0xc8
    1bd7:	ba 02 2c 00 00       	mov    $0x2c02,%edx
    1bdc:	89 c0                	mov    %eax,%eax
    1bde:	0f 79 d0             	vmwrite %rax,%rdx
    1be1:	0f 96 c2             	setbe  %dl
    1be4:	84 d2                	test   %dl,%dl
    1be6:	0f 85 29 0c 00 00    	jne    2815 <vmx_launch+0x1215>
    1bec:	f6 05 00 00 00 00 08 	testb  $0x8,0x0(%rip)        # 1bf3 <vmx_launch+0x5f3>
			1bee: R_X86_64_PC32	.bss+0x55
    1bf3:	74 1f                	je     1c14 <vmx_launch+0x614>
    1bf5:	bf 77 02 00 00       	mov    $0x277,%edi
    1bfa:	ff 14 25 00 00 00 00 	callq  *0x0
			1bfd: R_X86_64_32S	pv_ops+0xc8
    1c01:	ba 00 2c 00 00       	mov    $0x2c00,%edx
    1c06:	0f 79 d0             	vmwrite %rax,%rdx
    1c09:	0f 96 c2             	setbe  %dl
    1c0c:	84 d2                	test   %dl,%dl
    1c0e:	0f 85 87 0b 00 00    	jne    279b <vmx_launch+0x119b>
    1c14:	31 c0                	xor    %eax,%eax
    1c16:	ba 08 0c 00 00       	mov    $0xc08,%edx
    1c1b:	0f 79 d0             	vmwrite %rax,%rdx
    1c1e:	0f 96 c0             	setbe  %al
    1c21:	84 c0                	test   %al,%al
    1c23:	0f 85 aa 10 00 00    	jne    2cd3 <vmx_launch+0x16d3>
    1c29:	31 c0                	xor    %eax,%eax
    1c2b:	ba 0a 0c 00 00       	mov    $0xc0a,%edx
    1c30:	0f 79 d0             	vmwrite %rax,%rdx
    1c33:	0f 96 c0             	setbe  %al
    1c36:	84 c0                	test   %al,%al
    1c38:	0f 85 a6 10 00 00    	jne    2ce4 <vmx_launch+0x16e4>
    1c3e:	bf 00 01 00 c0       	mov    $0xc0000100,%edi
    1c43:	ff 14 25 00 00 00 00 	callq  *0x0
			1c46: R_X86_64_32S	pv_ops+0xc8
    1c4a:	ba 06 6c 00 00       	mov    $0x6c06,%edx
    1c4f:	0f 79 d0             	vmwrite %rax,%rdx
    1c52:	0f 96 c2             	setbe  %dl
    1c55:	84 d2                	test   %dl,%dl
    1c57:	0f 85 98 10 00 00    	jne    2cf5 <vmx_launch+0x16f5>
    1c5d:	bf 01 01 00 c0       	mov    $0xc0000101,%edi
    1c62:	ff 14 25 00 00 00 00 	callq  *0x0
			1c65: R_X86_64_32S	pv_ops+0xc8
    1c69:	ba 08 6c 00 00       	mov    $0x6c08,%edx
    1c6e:	0f 79 d0             	vmwrite %rax,%rdx
    1c71:	0f 96 c2             	setbe  %dl
    1c74:	84 d2                	test   %dl,%dl
    1c76:	0f 85 8b 10 00 00    	jne    2d07 <vmx_launch+0x1707>
    1c7c:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 1c83 <vmx_launch+0x683>
			1c7f: R_X86_64_PC32	boot_cpu_data+0x20
    1c83:	48 8b 15 00 00 00 00 	mov    0x0(%rip),%rdx        # 1c8a <vmx_launch+0x68a>
			1c86: R_X86_64_PC32	boot_cpu_data+0x20
    1c8a:	48 c1 e8 11          	shr    $0x11,%rax
    1c8e:	83 e0 01             	and    $0x1,%eax
    1c91:	48 83 f8 01          	cmp    $0x1,%rax
    1c95:	48 19 db             	sbb    %rbx,%rbx
    1c98:	48 81 e3 00 00 fe ff 	and    $0xfffffffffffe0000,%rbx
    1c9f:	48 81 c3 a0 26 02 00 	add    $0x226a0,%rbx
    1ca6:	48 89 d8             	mov    %rbx,%rax
    1ca9:	48 0d 00 00 04 00    	or     $0x40000,%rax
    1caf:	f7 c2 00 00 00 08    	test   $0x8000000,%edx
    1cb5:	48 0f 45 d8          	cmovne %rax,%rbx
    1cb9:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 1cc0 <vmx_launch+0x6c0>
			1cbc: R_X86_64_PC32	boot_cpu_data+0x30
    1cc0:	48 89 da             	mov    %rbx,%rdx
    1cc3:	48 81 ca 00 00 01 00 	or     $0x10000,%rdx
    1cca:	48 c1 e8 20          	shr    $0x20,%rax
    1cce:	a8 01                	test   $0x1,%al
    1cd0:	b8 33 00 01 80       	mov    $0x80010033,%eax
    1cd5:	48 0f 45 da          	cmovne %rdx,%rbx
    1cd9:	ba 00 68 00 00       	mov    $0x6800,%edx
    1cde:	0f 79 d0             	vmwrite %rax,%rdx
    1ce1:	0f 96 c2             	setbe  %dl
    1ce4:	84 d2                	test   %dl,%dl
    1ce6:	0f 85 2d 10 00 00    	jne    2d19 <vmx_launch+0x1719>
    1cec:	b8 33 00 01 80       	mov    $0x80010033,%eax
    1cf1:	ba 04 60 00 00       	mov    $0x6004,%edx
    1cf6:	0f 79 d0             	vmwrite %rax,%rdx
    1cf9:	0f 96 c2             	setbe  %dl
    1cfc:	84 d2                	test   %dl,%dl
    1cfe:	0f 85 27 10 00 00    	jne    2d2b <vmx_launch+0x172b>
    1d04:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    1d08:	ba 02 68 00 00       	mov    $0x6802,%edx
    1d0d:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
    1d14:	0f 79 d0             	vmwrite %rax,%rdx
    1d17:	0f 96 c2             	setbe  %dl
    1d1a:	84 d2                	test   %dl,%dl
    1d1c:	0f 85 1b 10 00 00    	jne    2d3d <vmx_launch+0x173d>
    1d22:	ba 04 68 00 00       	mov    $0x6804,%edx
    1d27:	48 89 d8             	mov    %rbx,%rax
    1d2a:	0f 79 d0             	vmwrite %rax,%rdx
    1d2d:	0f 96 c2             	setbe  %dl
    1d30:	84 d2                	test   %dl,%dl
    1d32:	0f 85 17 10 00 00    	jne    2d4f <vmx_launch+0x174f>
    1d38:	ba 06 60 00 00       	mov    $0x6006,%edx
    1d3d:	48 89 d8             	mov    %rbx,%rax
    1d40:	0f 79 d0             	vmwrite %rax,%rdx
    1d43:	0f 96 c2             	setbe  %dl
    1d46:	84 d2                	test   %dl,%dl
    1d48:	0f 85 13 10 00 00    	jne    2d61 <vmx_launch+0x1761>
    1d4e:	b8 01 45 00 00       	mov    $0x4501,%eax
    1d53:	ba 06 28 00 00       	mov    $0x2806,%edx
    1d58:	0f 79 d0             	vmwrite %rax,%rdx
    1d5b:	0f 96 c0             	setbe  %al
    1d5e:	84 c0                	test   %al,%al
    1d60:	0f 85 0d 10 00 00    	jne    2d73 <vmx_launch+0x1773>
    1d66:	31 c0                	xor    %eax,%eax
    1d68:	ba 16 68 00 00       	mov    $0x6816,%edx
    1d6d:	0f 79 d0             	vmwrite %rax,%rdx
    1d70:	0f 96 c0             	setbe  %al
    1d73:	84 c0                	test   %al,%al
    1d75:	0f 85 0f 0c 00 00    	jne    298a <vmx_launch+0x138a>
    1d7b:	31 c0                	xor    %eax,%eax
    1d7d:	ba 10 48 00 00       	mov    $0x4810,%edx
    1d82:	0f 79 d0             	vmwrite %rax,%rdx
    1d85:	0f 96 c0             	setbe  %al
    1d88:	84 c0                	test   %al,%al
    1d8a:	0f 85 0b 0c 00 00    	jne    299b <vmx_launch+0x139b>
    1d90:	31 c0                	xor    %eax,%eax
    1d92:	ba 18 68 00 00       	mov    $0x6818,%edx
    1d97:	0f 79 d0             	vmwrite %rax,%rdx
    1d9a:	0f 96 c0             	setbe  %al
    1d9d:	84 c0                	test   %al,%al
    1d9f:	0f 85 07 0c 00 00    	jne    29ac <vmx_launch+0x13ac>
    1da5:	31 c0                	xor    %eax,%eax
    1da7:	ba 12 48 00 00       	mov    $0x4812,%edx
    1dac:	0f 79 d0             	vmwrite %rax,%rdx
    1daf:	0f 96 c0             	setbe  %al
    1db2:	84 c0                	test   %al,%al
    1db4:	0f 85 03 0c 00 00    	jne    29bd <vmx_launch+0x13bd>
    1dba:	31 c0                	xor    %eax,%eax
    1dbc:	ba 1a 68 00 00       	mov    $0x681a,%edx
    1dc1:	0f 79 d0             	vmwrite %rax,%rdx
    1dc4:	0f 96 c0             	setbe  %al
    1dc7:	84 c0                	test   %al,%al
    1dc9:	0f 85 ff 0b 00 00    	jne    29ce <vmx_launch+0x13ce>
    1dcf:	31 c0                	xor    %eax,%eax
    1dd1:	ba 08 68 00 00       	mov    $0x6808,%edx
    1dd6:	0f 79 d0             	vmwrite %rax,%rdx
    1dd9:	0f 96 c0             	setbe  %al
    1ddc:	84 c0                	test   %al,%al
    1dde:	0f 85 fb 0b 00 00    	jne    29df <vmx_launch+0x13df>
    1de4:	31 c0                	xor    %eax,%eax
    1de6:	ba 0c 68 00 00       	mov    $0x680c,%edx
    1deb:	0f 79 d0             	vmwrite %rax,%rdx
    1dee:	0f 96 c0             	setbe  %al
    1df1:	84 c0                	test   %al,%al
    1df3:	0f 85 f7 0b 00 00    	jne    29f0 <vmx_launch+0x13f0>
    1df9:	31 c0                	xor    %eax,%eax
    1dfb:	ba 06 68 00 00       	mov    $0x6806,%edx
    1e00:	0f 79 d0             	vmwrite %rax,%rdx
    1e03:	0f 96 c0             	setbe  %al
    1e06:	84 c0                	test   %al,%al
    1e08:	0f 85 f3 0b 00 00    	jne    2a01 <vmx_launch+0x1401>
    1e0e:	31 c0                	xor    %eax,%eax
    1e10:	ba 10 68 00 00       	mov    $0x6810,%edx
    1e15:	0f 79 d0             	vmwrite %rax,%rdx
    1e18:	0f 96 c0             	setbe  %al
    1e1b:	84 c0                	test   %al,%al
    1e1d:	0f 85 ef 0b 00 00    	jne    2a12 <vmx_launch+0x1412>
    1e23:	31 c0                	xor    %eax,%eax
    1e25:	ba 0a 68 00 00       	mov    $0x680a,%edx
    1e2a:	0f 79 d0             	vmwrite %rax,%rdx
    1e2d:	0f 96 c0             	setbe  %al
    1e30:	84 c0                	test   %al,%al
    1e32:	0f 85 eb 0b 00 00    	jne    2a23 <vmx_launch+0x1423>
    1e38:	bf 00 01 00 c0       	mov    $0xc0000100,%edi
    1e3d:	ff 14 25 00 00 00 00 	callq  *0x0
			1e40: R_X86_64_32S	pv_ops+0xc8
    1e44:	ba 0e 68 00 00       	mov    $0x680e,%edx
    1e49:	0f 79 d0             	vmwrite %rax,%rdx
    1e4c:	0f 96 c2             	setbe  %dl
    1e4f:	84 d2                	test   %dl,%dl
    1e51:	0f 85 dd 0b 00 00    	jne    2a34 <vmx_launch+0x1434>
    1e57:	b8 9b a0 00 00       	mov    $0xa09b,%eax
    1e5c:	ba 16 48 00 00       	mov    $0x4816,%edx
    1e61:	0f 79 d0             	vmwrite %rax,%rdx
    1e64:	0f 96 c0             	setbe  %al
    1e67:	84 c0                	test   %al,%al
    1e69:	0f 85 d7 0b 00 00    	jne    2a46 <vmx_launch+0x1446>
    1e6f:	b8 93 a0 00 00       	mov    $0xa093,%eax
    1e74:	ba 1a 48 00 00       	mov    $0x481a,%edx
    1e79:	0f 79 d0             	vmwrite %rax,%rdx
    1e7c:	0f 96 c0             	setbe  %al
    1e7f:	84 c0                	test   %al,%al
    1e81:	0f 85 d3 0b 00 00    	jne    2a5a <vmx_launch+0x145a>
    1e87:	b8 93 a0 00 00       	mov    $0xa093,%eax
    1e8c:	ba 14 48 00 00       	mov    $0x4814,%edx
    1e91:	0f 79 d0             	vmwrite %rax,%rdx
    1e94:	0f 96 c0             	setbe  %al
    1e97:	84 c0                	test   %al,%al
    1e99:	0f 85 cf 0b 00 00    	jne    2a6e <vmx_launch+0x146e>
    1e9f:	b8 93 a0 00 00       	mov    $0xa093,%eax
    1ea4:	ba 1c 48 00 00       	mov    $0x481c,%edx
    1ea9:	0f 79 d0             	vmwrite %rax,%rdx
    1eac:	0f 96 c0             	setbe  %al
    1eaf:	84 c0                	test   %al,%al
    1eb1:	0f 85 cb 0b 00 00    	jne    2a82 <vmx_launch+0x1482>
    1eb7:	b8 93 a0 00 00       	mov    $0xa093,%eax
    1ebc:	ba 1e 48 00 00       	mov    $0x481e,%edx
    1ec1:	0f 79 d0             	vmwrite %rax,%rdx
    1ec4:	0f 96 c0             	setbe  %al
    1ec7:	84 c0                	test   %al,%al
    1ec9:	0f 85 c7 0b 00 00    	jne    2a96 <vmx_launch+0x1496>
    1ecf:	b8 93 a0 00 00       	mov    $0xa093,%eax
    1ed4:	ba 18 48 00 00       	mov    $0x4818,%edx
    1ed9:	0f 79 d0             	vmwrite %rax,%rdx
    1edc:	0f 96 c0             	setbe  %al
    1edf:	84 c0                	test   %al,%al
    1ee1:	0f 85 c3 0b 00 00    	jne    2aaa <vmx_launch+0x14aa>
    1ee7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    1eec:	ba 02 48 00 00       	mov    $0x4802,%edx
    1ef1:	0f 79 d0             	vmwrite %rax,%rdx
    1ef4:	0f 96 c2             	setbe  %dl
    1ef7:	84 d2                	test   %dl,%dl
    1ef9:	0f 85 bf 0b 00 00    	jne    2abe <vmx_launch+0x14be>
    1eff:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    1f04:	ba 06 48 00 00       	mov    $0x4806,%edx
    1f09:	0f 79 d0             	vmwrite %rax,%rdx
    1f0c:	0f 96 c2             	setbe  %dl
    1f0f:	84 d2                	test   %dl,%dl
    1f11:	0f 85 b9 0b 00 00    	jne    2ad0 <vmx_launch+0x14d0>
    1f17:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    1f1c:	ba 00 48 00 00       	mov    $0x4800,%edx
    1f21:	0f 79 d0             	vmwrite %rax,%rdx
    1f24:	0f 96 c2             	setbe  %dl
    1f27:	84 d2                	test   %dl,%dl
    1f29:	0f 85 b3 0b 00 00    	jne    2ae2 <vmx_launch+0x14e2>
    1f2f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    1f34:	ba 08 48 00 00       	mov    $0x4808,%edx
    1f39:	0f 79 d0             	vmwrite %rax,%rdx
    1f3c:	0f 96 c2             	setbe  %dl
    1f3f:	84 d2                	test   %dl,%dl
    1f41:	0f 85 ad 0b 00 00    	jne    2af4 <vmx_launch+0x14f4>
    1f47:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    1f4c:	ba 0a 48 00 00       	mov    $0x480a,%edx
    1f51:	0f 79 d0             	vmwrite %rax,%rdx
    1f54:	0f 96 c2             	setbe  %dl
    1f57:	84 d2                	test   %dl,%dl
    1f59:	0f 85 a7 0b 00 00    	jne    2b06 <vmx_launch+0x1506>
    1f5f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    1f64:	ba 04 48 00 00       	mov    $0x4804,%edx
    1f69:	0f 79 d0             	vmwrite %rax,%rdx
    1f6c:	0f 96 c2             	setbe  %dl
    1f6f:	84 d2                	test   %dl,%dl
    1f71:	0f 85 a1 0b 00 00    	jne    2b18 <vmx_launch+0x1518>
    1f77:	31 c0                	xor    %eax,%eax
    1f79:	ba 02 08 00 00       	mov    $0x802,%edx
    1f7e:	0f 79 d0             	vmwrite %rax,%rdx
    1f81:	0f 96 c0             	setbe  %al
    1f84:	84 c0                	test   %al,%al
    1f86:	0f 85 9e 0b 00 00    	jne    2b2a <vmx_launch+0x152a>
    1f8c:	31 c0                	xor    %eax,%eax
    1f8e:	ba 06 08 00 00       	mov    $0x806,%edx
    1f93:	0f 79 d0             	vmwrite %rax,%rdx
    1f96:	0f 96 c0             	setbe  %al
    1f99:	84 c0                	test   %al,%al
    1f9b:	0f 85 9a 0b 00 00    	jne    2b3b <vmx_launch+0x153b>
    1fa1:	31 c0                	xor    %eax,%eax
    1fa3:	ba 00 08 00 00       	mov    $0x800,%edx
    1fa8:	0f 79 d0             	vmwrite %rax,%rdx
    1fab:	0f 96 c0             	setbe  %al
    1fae:	84 c0                	test   %al,%al
    1fb0:	0f 85 96 0b 00 00    	jne    2b4c <vmx_launch+0x154c>
    1fb6:	31 c0                	xor    %eax,%eax
    1fb8:	ba 08 08 00 00       	mov    $0x808,%edx
    1fbd:	0f 79 d0             	vmwrite %rax,%rdx
    1fc0:	0f 96 c0             	setbe  %al
    1fc3:	84 c0                	test   %al,%al
    1fc5:	0f 85 92 0b 00 00    	jne    2b5d <vmx_launch+0x155d>
    1fcb:	31 c0                	xor    %eax,%eax
    1fcd:	ba 0a 08 00 00       	mov    $0x80a,%edx
    1fd2:	0f 79 d0             	vmwrite %rax,%rdx
    1fd5:	0f 96 c0             	setbe  %al
    1fd8:	84 c0                	test   %al,%al
    1fda:	0f 85 8e 0b 00 00    	jne    2b6e <vmx_launch+0x156e>
    1fe0:	31 c0                	xor    %eax,%eax
    1fe2:	ba 04 08 00 00       	mov    $0x804,%edx
    1fe7:	0f 79 d0             	vmwrite %rax,%rdx
    1fea:	0f 96 c0             	setbe  %al
    1fed:	84 c0                	test   %al,%al
    1fef:	0f 85 8a 0b 00 00    	jne    2b7f <vmx_launch+0x157f>
    1ff5:	31 c0                	xor    %eax,%eax
    1ff7:	ba 0e 08 00 00       	mov    $0x80e,%edx
    1ffc:	0f 79 d0             	vmwrite %rax,%rdx
    1fff:	0f 96 c0             	setbe  %al
    2002:	84 c0                	test   %al,%al
    2004:	0f 85 86 0b 00 00    	jne    2b90 <vmx_launch+0x1590>
    200a:	31 c0                	xor    %eax,%eax
    200c:	ba 0c 08 00 00       	mov    $0x80c,%edx
    2011:	0f 79 d0             	vmwrite %rax,%rdx
    2014:	0f 96 c0             	setbe  %al
    2017:	84 c0                	test   %al,%al
    2019:	0f 85 82 0b 00 00    	jne    2ba1 <vmx_launch+0x15a1>
    201f:	b8 82 00 00 00       	mov    $0x82,%eax
    2024:	ba 20 48 00 00       	mov    $0x4820,%edx
    2029:	0f 79 d0             	vmwrite %rax,%rdx
    202c:	0f 96 c0             	setbe  %al
    202f:	84 c0                	test   %al,%al
    2031:	0f 85 7b 0b 00 00    	jne    2bb2 <vmx_launch+0x15b2>
    2037:	31 c0                	xor    %eax,%eax
    2039:	ba 12 68 00 00       	mov    $0x6812,%edx
    203e:	0f 79 d0             	vmwrite %rax,%rdx
    2041:	0f 96 c0             	setbe  %al
    2044:	84 c0                	test   %al,%al
    2046:	0f 85 48 08 00 00    	jne    2894 <vmx_launch+0x1294>
    204c:	31 c0                	xor    %eax,%eax
    204e:	ba 0c 48 00 00       	mov    $0x480c,%edx
    2053:	0f 79 d0             	vmwrite %rax,%rdx
    2056:	0f 96 c0             	setbe  %al
    2059:	84 c0                	test   %al,%al
    205b:	0f 85 44 08 00 00    	jne    28a5 <vmx_launch+0x12a5>
    2061:	31 c0                	xor    %eax,%eax
    2063:	ba 14 68 00 00       	mov    $0x6814,%edx
    2068:	0f 79 d0             	vmwrite %rax,%rdx
    206b:	0f 96 c0             	setbe  %al
    206e:	84 c0                	test   %al,%al
    2070:	0f 85 40 08 00 00    	jne    28b6 <vmx_launch+0x12b6>
    2076:	b8 8b 00 00 00       	mov    $0x8b,%eax
    207b:	ba 22 48 00 00       	mov    $0x4822,%edx
    2080:	0f 79 d0             	vmwrite %rax,%rdx
    2083:	0f 96 c0             	setbe  %al
    2086:	84 c0                	test   %al,%al
    2088:	0f 85 39 08 00 00    	jne    28c7 <vmx_launch+0x12c7>
    208e:	b8 ff 00 00 00       	mov    $0xff,%eax
    2093:	ba 0e 48 00 00       	mov    $0x480e,%edx
    2098:	0f 79 d0             	vmwrite %rax,%rdx
    209b:	0f 96 c0             	setbe  %al
    209e:	84 c0                	test   %al,%al
    20a0:	0f 85 35 08 00 00    	jne    28db <vmx_launch+0x12db>
    20a6:	31 c0                	xor    %eax,%eax
    20a8:	ba 2a 48 00 00       	mov    $0x482a,%edx
    20ad:	0f 79 d0             	vmwrite %rax,%rdx
    20b0:	0f 96 c0             	setbe  %al
    20b3:	84 c0                	test   %al,%al
    20b5:	0f 85 34 08 00 00    	jne    28ef <vmx_launch+0x12ef>
    20bb:	31 c0                	xor    %eax,%eax
    20bd:	ba 24 68 00 00       	mov    $0x6824,%edx
    20c2:	0f 79 d0             	vmwrite %rax,%rdx
    20c5:	0f 96 c0             	setbe  %al
    20c8:	84 c0                	test   %al,%al
    20ca:	0f 85 30 08 00 00    	jne    2900 <vmx_launch+0x1300>
    20d0:	31 c0                	xor    %eax,%eax
    20d2:	ba 26 68 00 00       	mov    $0x6826,%edx
    20d7:	0f 79 d0             	vmwrite %rax,%rdx
    20da:	0f 96 c0             	setbe  %al
    20dd:	84 c0                	test   %al,%al
    20df:	0f 85 2c 08 00 00    	jne    2911 <vmx_launch+0x1311>
    20e5:	31 c0                	xor    %eax,%eax
    20e7:	ba 26 48 00 00       	mov    $0x4826,%edx
    20ec:	0f 79 d0             	vmwrite %rax,%rdx
    20ef:	0f 96 c0             	setbe  %al
    20f2:	84 c0                	test   %al,%al
    20f4:	0f 85 28 08 00 00    	jne    2922 <vmx_launch+0x1322>
    20fa:	31 c0                	xor    %eax,%eax
    20fc:	ba 24 48 00 00       	mov    $0x4824,%edx
    2101:	0f 79 d0             	vmwrite %rax,%rdx
    2104:	0f 96 c0             	setbe  %al
    2107:	84 c0                	test   %al,%al
    2109:	0f 85 24 08 00 00    	jne    2933 <vmx_launch+0x1333>
    210f:	31 c0                	xor    %eax,%eax
    2111:	ba 22 68 00 00       	mov    $0x6822,%edx
    2116:	0f 79 d0             	vmwrite %rax,%rdx
    2119:	0f 96 c0             	setbe  %al
    211c:	84 c0                	test   %al,%al
    211e:	0f 85 20 08 00 00    	jne    2944 <vmx_launch+0x1344>
    2124:	31 c0                	xor    %eax,%eax
    2126:	ba 02 28 00 00       	mov    $0x2802,%edx
    212b:	0f 79 d0             	vmwrite %rax,%rdx
    212e:	0f 96 c0             	setbe  %al
    2131:	84 c0                	test   %al,%al
    2133:	0f 85 1c 08 00 00    	jne    2955 <vmx_launch+0x1355>
    2139:	31 c0                	xor    %eax,%eax
    213b:	ba 16 40 00 00       	mov    $0x4016,%edx
    2140:	0f 79 d0             	vmwrite %rax,%rdx
    2143:	0f 96 c0             	setbe  %al
    2146:	84 c0                	test   %al,%al
    2148:	0f 85 70 06 00 00    	jne    27be <vmx_launch+0x11be>
    214e:	48 8b 5d 98          	mov    -0x68(%rbp),%rbx
    2152:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
    2156:	48 89 df             	mov    %rbx,%rdi
    2159:	e8 12 e6 ff ff       	callq  770 <vmx_setup_registers>
    215e:	48 89 d8             	mov    %rbx,%rax
    2161:	48 05 48 02 00 00    	add    $0x248,%rax
    2167:	48 89 c7             	mov    %rax,%rdi
    216a:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    216e:	e8 9d e8 ff ff       	callq  a10 <vmx_put_cpu.isra.9>
    2173:	f6 05 00 00 00 00 20 	testb  $0x20,0x0(%rip)        # 217a <vmx_launch+0xb7a>
			2175: R_X86_64_PC32	vmx_capability+0xd
    217a:	0f 85 04 10 00 00    	jne    3184 <vmx_launch+0x1b84>
    2180:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
    2184:	e8 00 00 00 00       	callq  2189 <vmx_launch+0xb89>
			2185: R_X86_64_PC32	vmx_create_ept-0x4
    2189:	85 c0                	test   %eax,%eax
    218b:	0f 85 4c 05 00 00    	jne    26dd <vmx_launch+0x10dd>
    2191:	65 8b 05 00 00 00 00 	mov    %gs:0x0(%rip),%eax        # 2198 <vmx_launch+0xb98>
			2194: R_X86_64_PC32	cpu_number-0x4
    2198:	eb 2f                	jmp    21c9 <vmx_launch+0xbc9>
    219a:	49 89 ff             	mov    %rdi,%r15
    219d:	48 89 df             	mov    %rbx,%rdi
    21a0:	48 89 5d 98          	mov    %rbx,-0x68(%rbp)
    21a4:	e8 d7 eb ff ff       	callq  d80 <vmx_get_cpu>
    21a9:	48 89 df             	mov    %rbx,%rdi
    21ac:	4c 89 fe             	mov    %r15,%rsi
    21af:	e8 bc e5 ff ff       	callq  770 <vmx_setup_registers>
    21b4:	48 89 d8             	mov    %rbx,%rax
    21b7:	48 05 48 02 00 00    	add    $0x248,%rax
    21bd:	48 89 c7             	mov    %rax,%rdi
    21c0:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    21c4:	e8 47 e8 ff ff       	callq  a10 <vmx_put_cpu.isra.9>
    21c9:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    21cd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			21d0: R_X86_64_32S	.rodata.str1.8+0x428
    21d4:	8b 70 14             	mov    0x14(%rax),%esi
    21d7:	e8 00 00 00 00       	callq  21dc <vmx_launch+0xbdc>
			21d8: R_X86_64_PC32	printk-0x4
    21dc:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
    21e0:	41 bd 12 20 00 00    	mov    $0x2012,%r13d
    21e6:	41 bc 16 20 00 00    	mov    $0x2016,%r12d
    21ec:	e8 8f eb ff ff       	callq  d80 <vmx_get_cpu>
    21f1:	65 48 8b 1c 25 00 00 	mov    %gs:0x0,%rbx
    21f8:	00 00 
			21f6: R_X86_64_32S	current_task
    21fa:	48 8d bb 00 14 00 00 	lea    0x1400(%rbx),%rdi
    2201:	e8 00 00 00 00       	callq  2206 <vmx_launch+0xc06>
			2202: R_X86_64_PC32	dune_fpu__restore-0x4
    2206:	ff 14 25 00 00 00 00 	callq  *0x0
			2209: R_X86_64_32S	pv_ops+0x128
    220d:	48 8b 03             	mov    (%rbx),%rax
    2210:	a8 08                	test   $0x8,%al
    2212:	0f 85 de 0c 00 00    	jne    2ef6 <vmx_launch+0x18f6>
    2218:	48 8b 03             	mov    (%rbx),%rax
    221b:	a8 04                	test   $0x4,%al
    221d:	0f 85 db 0e 00 00    	jne    30fe <vmx_launch+0x1afe>
    2223:	48 8d 7d a4          	lea    -0x5c(%rbp),%rdi
    2227:	e8 00 00 00 00       	callq  222c <vmx_launch+0xc2c>
			2228: R_X86_64_PC32	perf_guest_get_msrs-0x4
    222c:	48 89 c3             	mov    %rax,%rbx
    222f:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    2232:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
    2236:	ba 10 40 00 00       	mov    $0x4010,%edx
    223b:	89 86 20 01 00 00    	mov    %eax,0x120(%rsi)
    2241:	0f 79 d0             	vmwrite %rax,%rdx
    2244:	0f 96 c2             	setbe  %dl
    2247:	84 d2                	test   %dl,%dl
    2249:	0f 85 93 0f 00 00    	jne    31e2 <vmx_launch+0x1be2>
    224f:	ba 14 40 00 00       	mov    $0x4014,%edx
    2254:	0f 79 d0             	vmwrite %rax,%rdx
    2257:	0f 96 c2             	setbe  %dl
    225a:	84 d2                	test   %dl,%dl
    225c:	0f 85 9c 0f 00 00    	jne    31fe <vmx_launch+0x1bfe>
    2262:	8b 4d a4             	mov    -0x5c(%rbp),%ecx
    2265:	85 c9                	test   %ecx,%ecx
    2267:	7e 42                	jle    22ab <vmx_launch+0xcab>
    2269:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
    226d:	83 e9 01             	sub    $0x1,%ecx
    2270:	48 89 d8             	mov    %rbx,%rax
    2273:	48 8d 0c 49          	lea    (%rcx,%rcx,2),%rcx
    2277:	48 8d 96 30 01 00 00 	lea    0x130(%rsi),%rdx
    227e:	48 8d 74 cb 18       	lea    0x18(%rbx,%rcx,8),%rsi
    2283:	8b 08                	mov    (%rax),%ecx
    2285:	48 83 c0 18          	add    $0x18,%rax
    2289:	48 83 c2 10          	add    $0x10,%rdx
    228d:	89 4a 70             	mov    %ecx,0x70(%rdx)
    2290:	48 8b 48 f0          	mov    -0x10(%rax),%rcx
    2294:	48 89 4a 78          	mov    %rcx,0x78(%rdx)
    2298:	8b 48 e8             	mov    -0x18(%rax),%ecx
    229b:	89 4a f0             	mov    %ecx,-0x10(%rdx)
    229e:	48 8b 48 f8          	mov    -0x8(%rax),%rcx
    22a2:	48 89 4a f8          	mov    %rcx,-0x8(%rdx)
    22a6:	48 39 c6             	cmp    %rax,%rsi
    22a9:	75 d8                	jne    2283 <vmx_launch+0xc83>
    22ab:	65 8b 05 00 00 00 00 	mov    %gs:0x0(%rip),%eax        # 22b2 <vmx_launch+0xcb2>
			22ae: R_X86_64_PC32	cpu_number-0x4
    22b2:	48 98                	cltq   
    22b4:	48 8b 0c c5 00 00 00 	mov    0x0(,%rax,8),%rcx
    22bb:	00 
			22b8: R_X86_64_32S	.bss+0x60
    22bc:	31 c0                	xor    %eax,%eax
    22be:	48 87 41 20          	xchg   %rax,0x20(%rcx)
    22c2:	a8 01                	test   $0x1,%al
    22c4:	0f 84 ce 00 00 00    	je     2398 <vmx_launch+0xd98>
    22ca:	ba 10 08 00 00       	mov    $0x810,%edx
    22cf:	0f 78 d0             	vmread %rdx,%rax
    22d2:	31 f6                	xor    %esi,%esi
    22d4:	49 89 c4             	mov    %rax,%r12
    22d7:	89 c7                	mov    %eax,%edi
    22d9:	31 c0                	xor    %eax,%eax
    22db:	48 89 f2             	mov    %rsi,%rdx
    22de:	48 87 14 01          	xchg   %rdx,(%rcx,%rax,1)
    22e2:	48 89 54 05 b0       	mov    %rdx,-0x50(%rbp,%rax,1)
    22e7:	48 83 c0 08          	add    $0x8,%rax
    22eb:	48 83 f8 20          	cmp    $0x20,%rax
    22ef:	75 ea                	jne    22db <vmx_launch+0xcdb>
    22f1:	48 8d 5d b0          	lea    -0x50(%rbp),%rbx
    22f5:	45 31 c0             	xor    %r8d,%r8d
    22f8:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    22fe:	ba 12 20 00 00       	mov    $0x2012,%edx
    2303:	41 bb 01 00 00 00    	mov    $0x1,%r11d
    2309:	4c 8b 0b             	mov    (%rbx),%r9
    230c:	4d 85 c9             	test   %r9,%r9
    230f:	74 56                	je     2367 <vmx_launch+0xd67>
    2311:	31 f6                	xor    %esi,%esi
    2313:	89 f1                	mov    %esi,%ecx
    2315:	4c 89 d0             	mov    %r10,%rax
    2318:	48 d3 e0             	shl    %cl,%rax
    231b:	4c 21 c8             	and    %r9,%rax
    231e:	48 d3 e8             	shr    %cl,%rax
    2321:	84 c0                	test   %al,%al
    2323:	74 38                	je     235d <vmx_launch+0xd5d>
    2325:	4e 8d 34 06          	lea    (%rsi,%r8,1),%r14
    2329:	0f 78 d0             	vmread %rdx,%rax
    232c:	48 03 05 00 00 00 00 	add    0x0(%rip),%rax        # 2333 <vmx_launch+0xd33>
			232f: R_X86_64_PC32	page_offset_base-0x4
    2333:	4d 89 f5             	mov    %r14,%r13
    2336:	42 8d 0c 06          	lea    (%rsi,%r8,1),%ecx
    233a:	49 d1 fd             	sar    %r13
    233d:	40 0f b6 ff          	movzbl %dil,%edi
    2341:	45 89 df             	mov    %r11d,%r15d
    2344:	41 83 e5 70          	and    $0x70,%r13d
    2348:	41 d3 e7             	shl    %cl,%r15d
    234b:	49 81 cd 00 02 00 00 	or     $0x200,%r13
    2352:	46 09 3c 28          	or     %r15d,(%rax,%r13,1)
    2356:	4c 39 f7             	cmp    %r14,%rdi
    2359:	49 0f 4c fe          	cmovl  %r14,%rdi
    235d:	48 83 c6 01          	add    $0x1,%rsi
    2361:	48 83 fe 40          	cmp    $0x40,%rsi
    2365:	75 ac                	jne    2313 <vmx_launch+0xd13>
    2367:	49 83 c0 40          	add    $0x40,%r8
    236b:	48 83 c3 08          	add    $0x8,%rbx
    236f:	49 81 f8 00 01 00 00 	cmp    $0x100,%r8
    2376:	75 91                	jne    2309 <vmx_launch+0xd09>
    2378:	40 0f b6 f7          	movzbl %dil,%esi
    237c:	ba 10 08 00 00       	mov    $0x810,%edx
    2381:	44 09 e6             	or     %r12d,%esi
    2384:	0f b7 f6             	movzwl %si,%esi
    2387:	48 89 f0             	mov    %rsi,%rax
    238a:	0f 79 d0             	vmwrite %rax,%rdx
    238d:	0f 96 c2             	setbe  %dl
    2390:	84 d2                	test   %dl,%dl
    2392:	0f 85 c2 0e 00 00    	jne    325a <vmx_launch+0x1c5a>
    2398:	ba 14 6c 00 00       	mov    $0x6c14,%edx
    239d:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
    23a1:	52                   	push   %rdx
    23a2:	55                   	push   %rbp
    23a3:	51                   	push   %rcx
    23a4:	51                   	push   %rcx
    23a5:	48 39 a1 80 00 00 00 	cmp    %rsp,0x80(%rcx)
    23ac:	74 0a                	je     23b8 <vmx_launch+0xdb8>
    23ae:	48 89 a1 80 00 00 00 	mov    %rsp,0x80(%rcx)
    23b5:	0f 79 d4             	vmwrite %rsp,%rdx
    23b8:	48 8b 81 10 01 00 00 	mov    0x110(%rcx),%rax
    23bf:	0f 20 d2             	mov    %cr2,%rdx
    23c2:	48 39 c2             	cmp    %rax,%rdx
    23c5:	74 03                	je     23ca <vmx_launch+0xdca>
    23c7:	0f 22 d0             	mov    %rax,%cr2
    23ca:	83 79 18 00          	cmpl   $0x0,0x18(%rcx)
    23ce:	48 8b 81 88 00 00 00 	mov    0x88(%rcx),%rax
    23d5:	48 8b 99 a0 00 00 00 	mov    0xa0(%rcx),%rbx
    23dc:	48 8b 91 98 00 00 00 	mov    0x98(%rcx),%rdx
    23e3:	48 8b b1 b8 00 00 00 	mov    0xb8(%rcx),%rsi
    23ea:	48 8b b9 c0 00 00 00 	mov    0xc0(%rcx),%rdi
    23f1:	48 8b a9 b0 00 00 00 	mov    0xb0(%rcx),%rbp
    23f8:	4c 8b 81 c8 00 00 00 	mov    0xc8(%rcx),%r8
    23ff:	4c 8b 89 d0 00 00 00 	mov    0xd0(%rcx),%r9
    2406:	4c 8b 91 d8 00 00 00 	mov    0xd8(%rcx),%r10
    240d:	4c 8b 99 e0 00 00 00 	mov    0xe0(%rcx),%r11
    2414:	4c 8b a1 e8 00 00 00 	mov    0xe8(%rcx),%r12
    241b:	4c 8b a9 f0 00 00 00 	mov    0xf0(%rcx),%r13
    2422:	4c 8b b1 f8 00 00 00 	mov    0xf8(%rcx),%r14
    2429:	4c 8b b9 00 01 00 00 	mov    0x100(%rcx),%r15
    2430:	48 8b 89 90 00 00 00 	mov    0x90(%rcx),%rcx
    2437:	75 05                	jne    243e <vmx_launch+0xe3e>
    2439:	0f 01 c2             	vmlaunch 
    243c:	eb 03                	jmp    2441 <vmx_launch+0xe41>
    243e:	0f 01 c3             	vmresume 
    2441:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    2446:	59                   	pop    %rcx
    2447:	48 89 81 88 00 00 00 	mov    %rax,0x88(%rcx)
    244e:	48 89 99 a0 00 00 00 	mov    %rbx,0xa0(%rcx)
    2455:	8f 81 90 00 00 00    	popq   0x90(%rcx)
    245b:	48 89 91 98 00 00 00 	mov    %rdx,0x98(%rcx)
    2462:	48 89 b1 b8 00 00 00 	mov    %rsi,0xb8(%rcx)
    2469:	48 89 b9 c0 00 00 00 	mov    %rdi,0xc0(%rcx)
    2470:	48 89 a9 b0 00 00 00 	mov    %rbp,0xb0(%rcx)
    2477:	4c 89 81 c8 00 00 00 	mov    %r8,0xc8(%rcx)
    247e:	4c 89 89 d0 00 00 00 	mov    %r9,0xd0(%rcx)
    2485:	4c 89 91 d8 00 00 00 	mov    %r10,0xd8(%rcx)
    248c:	4c 89 99 e0 00 00 00 	mov    %r11,0xe0(%rcx)
    2493:	4c 89 a1 e8 00 00 00 	mov    %r12,0xe8(%rcx)
    249a:	4c 89 a9 f0 00 00 00 	mov    %r13,0xf0(%rcx)
    24a1:	4c 89 b1 f8 00 00 00 	mov    %r14,0xf8(%rcx)
    24a8:	4c 89 b9 00 01 00 00 	mov    %r15,0x100(%rcx)
    24af:	49 89 c2             	mov    %rax,%r10
    24b2:	49 89 d3             	mov    %rdx,%r11
    24b5:	0f 20 d0             	mov    %cr2,%rax
    24b8:	48 89 81 10 01 00 00 	mov    %rax,0x110(%rcx)
    24bf:	5d                   	pop    %rbp
    24c0:	5a                   	pop    %rdx
    24c1:	0f 96 41 71          	setbe  0x71(%rcx)
    24c5:	48 c7 c0 2b 00 00 00 	mov    $0x2b,%rax
    24cc:	48 8e d8             	mov    %rax,%ds
    24cf:	48 8e c0             	mov    %rax,%es
    24d2:	80 79 71 00          	cmpb   $0x0,0x71(%rcx)
    24d6:	c7 41 18 01 00 00 00 	movl   $0x1,0x18(%rcx)
    24dd:	0f 85 ba 0c 00 00    	jne    319d <vmx_launch+0x1b9d>
    24e3:	ba 02 44 00 00       	mov    $0x4402,%edx
    24e8:	0f 78 d0             	vmread %rdx,%rax
    24eb:	89 c3                	mov    %eax,%ebx
    24ed:	ba 04 44 00 00       	mov    $0x4404,%edx
    24f2:	0f 78 d0             	vmread %rdx,%rax
    24f5:	89 c2                	mov    %eax,%edx
    24f7:	81 e2 00 07 00 00    	and    $0x700,%edx
    24fd:	81 fa 00 02 00 00    	cmp    $0x200,%edx
    2503:	0f 84 fc 0a 00 00    	je     3005 <vmx_launch+0x1a05>
    2509:	89 c2                	mov    %eax,%edx
    250b:	81 e2 00 07 00 80    	and    $0x80000700,%edx
    2511:	81 fa 00 00 00 80    	cmp    $0x80000000,%edx
    2517:	0f 84 9c 0a 00 00    	je     2fb9 <vmx_launch+0x19b9>
    251d:	ff 14 25 00 00 00 00 	callq  *0x0
			2520: R_X86_64_32S	pv_ops+0x130
    2524:	8d 43 f6             	lea    -0xa(%rbx),%eax
    2527:	83 e0 f7             	and    $0xfffffff7,%eax
    252a:	0f 84 9f 08 00 00    	je     2dcf <vmx_launch+0x17cf>
    2530:	83 fb 20             	cmp    $0x20,%ebx
    2533:	0f 84 96 08 00 00    	je     2dcf <vmx_launch+0x17cf>
    2539:	48 8b 7d 80          	mov    -0x80(%rbp),%rdi
    253d:	e8 ce e4 ff ff       	callq  a10 <vmx_put_cpu.isra.9>
    2542:	83 fb 0a             	cmp    $0xa,%ebx
    2545:	0f 84 c9 0a 00 00    	je     3014 <vmx_launch+0x1a14>
    254b:	83 fb 30             	cmp    $0x30,%ebx
    254e:	0f 84 1c 0b 00 00    	je     3070 <vmx_launch+0x1a70>
    2554:	85 db                	test   %ebx,%ebx
    2556:	0f 84 c3 0b 00 00    	je     311f <vmx_launch+0x1b1f>
    255c:	83 fb 20             	cmp    $0x20,%ebx
    255f:	0f 84 04 0d 00 00    	je     3269 <vmx_launch+0x1c69>
    2565:	83 fb 01             	cmp    $0x1,%ebx
    2568:	0f 85 cd 0d 00 00    	jne    333b <vmx_launch+0x1d3b>
    256e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    2572:	8b 80 18 01 00 00    	mov    0x118(%rax),%eax
    2578:	85 c0                	test   %eax,%eax
    257a:	0f 84 5c fc ff ff    	je     21dc <vmx_launch+0xbdc>
    2580:	48 8b 5d 98          	mov    -0x68(%rbp),%rbx
    2584:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2587: R_X86_64_32S	.rodata.str1.8+0x580
    258b:	8b 73 14             	mov    0x14(%rbx),%esi
    258e:	e8 00 00 00 00       	callq  2593 <vmx_launch+0xf93>
			258f: R_X86_64_PC32	printk-0x4
    2593:	48 63 83 1c 01 00 00 	movslq 0x11c(%rbx),%rax
    259a:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
    259e:	48 89 06             	mov    %rax,(%rsi)
    25a1:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
    25a5:	48 8b 83 88 00 00 00 	mov    0x88(%rbx),%rax
    25ac:	48 89 46 08          	mov    %rax,0x8(%rsi)
    25b0:	48 8b 83 a0 00 00 00 	mov    0xa0(%rbx),%rax
    25b7:	48 89 46 10          	mov    %rax,0x10(%rsi)
    25bb:	48 8b 83 90 00 00 00 	mov    0x90(%rbx),%rax
    25c2:	48 89 46 18          	mov    %rax,0x18(%rsi)
    25c6:	48 8b 83 98 00 00 00 	mov    0x98(%rbx),%rax
    25cd:	48 89 46 20          	mov    %rax,0x20(%rsi)
    25d1:	48 8b 83 b8 00 00 00 	mov    0xb8(%rbx),%rax
    25d8:	48 89 46 28          	mov    %rax,0x28(%rsi)
    25dc:	48 8b 83 c0 00 00 00 	mov    0xc0(%rbx),%rax
    25e3:	48 89 46 30          	mov    %rax,0x30(%rsi)
    25e7:	48 8b 83 b0 00 00 00 	mov    0xb0(%rbx),%rax
    25ee:	48 89 46 40          	mov    %rax,0x40(%rsi)
    25f2:	48 8b 83 c8 00 00 00 	mov    0xc8(%rbx),%rax
    25f9:	48 89 46 48          	mov    %rax,0x48(%rsi)
    25fd:	48 8b 83 d0 00 00 00 	mov    0xd0(%rbx),%rax
    2604:	48 89 46 50          	mov    %rax,0x50(%rsi)
    2608:	48 8b 83 d8 00 00 00 	mov    0xd8(%rbx),%rax
    260f:	48 89 46 58          	mov    %rax,0x58(%rsi)
    2613:	48 8b 83 e0 00 00 00 	mov    0xe0(%rbx),%rax
    261a:	48 89 46 60          	mov    %rax,0x60(%rsi)
    261e:	48 8b 83 e8 00 00 00 	mov    0xe8(%rbx),%rax
    2625:	48 89 46 68          	mov    %rax,0x68(%rsi)
    2629:	48 8b 83 f0 00 00 00 	mov    0xf0(%rbx),%rax
    2630:	48 89 46 70          	mov    %rax,0x70(%rsi)
    2634:	48 8b 83 f8 00 00 00 	mov    0xf8(%rbx),%rax
    263b:	48 89 46 78          	mov    %rax,0x78(%rsi)
    263f:	48 8b 83 00 01 00 00 	mov    0x100(%rbx),%rax
    2646:	48 89 86 80 00 00 00 	mov    %rax,0x80(%rsi)
    264d:	b8 1e 68 00 00       	mov    $0x681e,%eax
    2652:	48 89 c2             	mov    %rax,%rdx
    2655:	0f 78 d0             	vmread %rdx,%rax
    2658:	48 89 86 88 00 00 00 	mov    %rax,0x88(%rsi)
    265f:	b8 1c 68 00 00       	mov    $0x681c,%eax
    2664:	48 89 c2             	mov    %rax,%rdx
    2667:	0f 78 d0             	vmread %rdx,%rax
    266a:	48 89 46 38          	mov    %rax,0x38(%rsi)
    266e:	b8 20 68 00 00       	mov    $0x6820,%eax
    2673:	48 89 c2             	mov    %rax,%rdx
    2676:	0f 78 d0             	vmread %rdx,%rax
    2679:	48 89 86 90 00 00 00 	mov    %rax,0x90(%rsi)
    2680:	31 c0                	xor    %eax,%eax
    2682:	e9 87 00 00 00       	jmpq   270e <vmx_launch+0x110e>
    2687:	f6 05 00 00 00 00 80 	testb  $0x80,0x0(%rip)        # 268e <vmx_launch+0x108e>
			2689: R_X86_64_PC32	vmx_capability-0x1
    268e:	0f 84 5b f3 ff ff    	je     19ef <vmx_launch+0x3ef>
    2694:	e9 f1 f2 ff ff       	jmpq   198a <vmx_launch+0x38a>
    2699:	48 89 c6             	mov    %rax,%rsi
    269c:	bf 16 20 00 00       	mov    $0x2016,%edi
    26a1:	e8 9a e0 ff ff       	callq  740 <vmwrite_error>
    26a6:	f6 05 00 00 00 00 01 	testb  $0x1,0x0(%rip)        # 26ad <vmx_launch+0x10ad>
			26a8: R_X86_64_PC32	vmx_capability+0x8
    26ad:	74 1c                	je     26cb <vmx_launch+0x10cb>
    26af:	65 8b 05 00 00 00 00 	mov    %gs:0x0(%rip),%eax        # 26b6 <vmx_launch+0x10b6>
			26b2: R_X86_64_PC32	cpu_number-0x4
    26b6:	48 98                	cltq   
    26b8:	48 8b 1c c5 00 00 00 	mov    0x0(,%rax,8),%rbx
    26bf:	00 
			26bc: R_X86_64_32S	.bss+0x10060
    26c0:	e8 00 00 00 00       	callq  26c5 <vmx_launch+0x10c5>
			26c1: R_X86_64_PC32	dune_apic_id-0x4
    26c5:	89 c0                	mov    %eax,%eax
    26c7:	48 89 43 20          	mov    %rax,0x20(%rbx)
    26cb:	f6 05 00 00 00 00 80 	testb  $0x80,0x0(%rip)        # 26d2 <vmx_launch+0x10d2>
			26cd: R_X86_64_PC32	vmx_capability-0x1
    26d2:	0f 85 ff f2 ff ff    	jne    19d7 <vmx_launch+0x3d7>
    26d8:	e9 12 f3 ff ff       	jmpq   19ef <vmx_launch+0x3ef>
    26dd:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    26e1:	48 8d 78 14          	lea    0x14(%rax),%rdi
    26e5:	e8 46 e3 ff ff       	callq  a30 <vmx_free_vpid.isra.11>
    26ea:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    26ee:	8b 35 00 00 00 00    	mov    0x0(%rip),%esi        # 26f4 <vmx_launch+0x10f4>
			26f0: R_X86_64_PC32	.bss+0x40
    26f4:	48 8b b8 30 02 00 00 	mov    0x230(%rax),%rdi
    26fb:	e8 00 00 00 00       	callq  2700 <vmx_launch+0x1100>
			26fc: R_X86_64_PC32	free_pages-0x4
    2700:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
    2704:	e8 00 00 00 00       	callq  2709 <vmx_launch+0x1109>
			2705: R_X86_64_PC32	kfree-0x4
    2709:	b8 f4 ff ff ff       	mov    $0xfffffff4,%eax
    270e:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    2712:	65 48 33 34 25 28 00 	xor    %gs:0x28,%rsi
    2719:	00 00 
    271b:	0f 85 4a 09 00 00    	jne    306b <vmx_launch+0x1a6b>
    2721:	48 83 c4 68          	add    $0x68,%rsp
    2725:	5b                   	pop    %rbx
    2726:	41 5c                	pop    %r12
    2728:	41 5d                	pop    %r13
    272a:	41 5e                	pop    %r14
    272c:	41 5f                	pop    %r15
    272e:	5d                   	pop    %rbp
    272f:	c3                   	retq   
    2730:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 2736 <vmx_launch+0x1136>
			2732: R_X86_64_PC32	.bss+0x50
    2736:	ba 1e 40 00 00       	mov    $0x401e,%edx
    273b:	0f 79 d0             	vmwrite %rax,%rdx
    273e:	0f 96 c2             	setbe  %dl
    2741:	84 d2                	test   %dl,%dl
    2743:	0f 84 ae f0 ff ff    	je     17f7 <vmx_launch+0x1f7>
    2749:	48 89 c6             	mov    %rax,%rsi
    274c:	bf 1e 40 00 00       	mov    $0x401e,%edi
    2751:	e8 ea df ff ff       	callq  740 <vmwrite_error>
    2756:	e9 9c f0 ff ff       	jmpq   17f7 <vmx_launch+0x1f7>
    275b:	be f2 00 00 00       	mov    $0xf2,%esi
    2760:	bf 02 00 00 00       	mov    $0x2,%edi
    2765:	e8 d6 df ff ff       	callq  740 <vmwrite_error>
    276a:	e9 80 f2 ff ff       	jmpq   19ef <vmx_launch+0x3ef>
    276f:	48 89 c6             	mov    %rax,%rsi
    2772:	bf 12 20 00 00       	mov    $0x2012,%edi
    2777:	e8 c4 df ff ff       	callq  740 <vmwrite_error>
    277c:	f6 05 00 00 00 00 80 	testb  $0x80,0x0(%rip)        # 2783 <vmx_launch+0x1183>
			277e: R_X86_64_PC32	vmx_capability-0x1
    2783:	0f 85 01 f2 ff ff    	jne    198a <vmx_launch+0x38a>
    2789:	f6 05 00 00 00 00 01 	testb  $0x1,0x0(%rip)        # 2790 <vmx_launch+0x1190>
			278b: R_X86_64_PC32	vmx_capability+0x8
    2790:	0f 84 59 f2 ff ff    	je     19ef <vmx_launch+0x3ef>
    2796:	e9 14 ff ff ff       	jmpq   26af <vmx_launch+0x10af>
    279b:	48 89 c6             	mov    %rax,%rsi
    279e:	bf 00 2c 00 00       	mov    $0x2c00,%edi
    27a3:	e8 98 df ff ff       	callq  740 <vmwrite_error>
    27a8:	e9 67 f4 ff ff       	jmpq   1c14 <vmx_launch+0x614>
    27ad:	31 f6                	xor    %esi,%esi
    27af:	bf 06 40 00 00       	mov    $0x4006,%edi
    27b4:	e8 87 df ff ff       	callq  740 <vmwrite_error>
    27b9:	e9 69 f0 ff ff       	jmpq   1827 <vmx_launch+0x227>
    27be:	31 f6                	xor    %esi,%esi
    27c0:	bf 16 40 00 00       	mov    $0x4016,%edi
    27c5:	e8 76 df ff ff       	callq  740 <vmwrite_error>
    27ca:	e9 7f f9 ff ff       	jmpq   214e <vmx_launch+0xb4e>
    27cf:	31 f6                	xor    %esi,%esi
    27d1:	bf 10 40 00 00       	mov    $0x4010,%edi
    27d6:	e8 65 df ff ff       	callq  740 <vmwrite_error>
    27db:	e9 bc f0 ff ff       	jmpq   189c <vmx_launch+0x29c>
    27e0:	31 f6                	xor    %esi,%esi
    27e2:	bf 14 40 00 00       	mov    $0x4014,%edi
    27e7:	e8 54 df ff ff       	callq  740 <vmwrite_error>
    27ec:	e9 c0 f0 ff ff       	jmpq   18b1 <vmx_launch+0x2b1>
    27f1:	48 89 c6             	mov    %rax,%rsi
    27f4:	bf 08 20 00 00       	mov    $0x2008,%edi
    27f9:	e8 42 df ff ff       	callq  740 <vmwrite_error>
    27fe:	e9 eb f0 ff ff       	jmpq   18ee <vmx_launch+0x2ee>
    2803:	48 89 c6             	mov    %rax,%rsi
    2806:	bf 0a 20 00 00       	mov    $0x200a,%edi
    280b:	e8 30 df ff ff       	callq  740 <vmwrite_error>
    2810:	e9 16 f1 ff ff       	jmpq   192b <vmx_launch+0x32b>
    2815:	48 89 c6             	mov    %rax,%rsi
    2818:	bf 02 2c 00 00       	mov    $0x2c02,%edi
    281d:	e8 1e df ff ff       	callq  740 <vmwrite_error>
    2822:	e9 c5 f3 ff ff       	jmpq   1bec <vmx_launch+0x5ec>
    2827:	31 f6                	xor    %esi,%esi
    2829:	bf 08 40 00 00       	mov    $0x4008,%edi
    282e:	e8 0d df ff ff       	callq  740 <vmwrite_error>
    2833:	e9 04 f0 ff ff       	jmpq   183c <vmx_launch+0x23c>
    2838:	31 f6                	xor    %esi,%esi
    283a:	bf 0a 40 00 00       	mov    $0x400a,%edi
    283f:	e8 fc de ff ff       	callq  740 <vmwrite_error>
    2844:	e9 08 f0 ff ff       	jmpq   1851 <vmx_launch+0x251>
    2849:	48 89 c6             	mov    %rax,%rsi
    284c:	bf 00 28 00 00       	mov    $0x2800,%edi
    2851:	e8 ea de ff ff       	callq  740 <vmwrite_error>
    2856:	e9 5f ef ff ff       	jmpq   17ba <vmx_launch+0x1ba>
    285b:	48 89 c6             	mov    %rax,%rsi
    285e:	bf 00 40 00 00       	mov    $0x4000,%edi
    2863:	e8 d8 de ff ff       	callq  740 <vmwrite_error>
    2868:	e9 66 ef ff ff       	jmpq   17d3 <vmx_launch+0x1d3>
    286d:	48 89 c6             	mov    %rax,%rsi
    2870:	31 ff                	xor    %edi,%edi
    2872:	e8 c9 de ff ff       	callq  740 <vmwrite_error>
    2877:	e9 24 ef ff ff       	jmpq   17a0 <vmx_launch+0x1a0>
    287c:	48 89 c6             	mov    %rax,%rsi
    287f:	bf 02 40 00 00       	mov    $0x4002,%edi
    2884:	e8 b7 de ff ff       	callq  740 <vmwrite_error>
    2889:	8b 0d 00 00 00 00    	mov    0x0(%rip),%ecx        # 288f <vmx_launch+0x128f>
			288b: R_X86_64_PC32	.bss+0x4c
    288f:	e9 5b ef ff ff       	jmpq   17ef <vmx_launch+0x1ef>
    2894:	31 f6                	xor    %esi,%esi
    2896:	bf 12 68 00 00       	mov    $0x6812,%edi
    289b:	e8 a0 de ff ff       	callq  740 <vmwrite_error>
    28a0:	e9 a7 f7 ff ff       	jmpq   204c <vmx_launch+0xa4c>
    28a5:	31 f6                	xor    %esi,%esi
    28a7:	bf 0c 48 00 00       	mov    $0x480c,%edi
    28ac:	e8 8f de ff ff       	callq  740 <vmwrite_error>
    28b1:	e9 ab f7 ff ff       	jmpq   2061 <vmx_launch+0xa61>
    28b6:	31 f6                	xor    %esi,%esi
    28b8:	bf 14 68 00 00       	mov    $0x6814,%edi
    28bd:	e8 7e de ff ff       	callq  740 <vmwrite_error>
    28c2:	e9 af f7 ff ff       	jmpq   2076 <vmx_launch+0xa76>
    28c7:	be 8b 00 00 00       	mov    $0x8b,%esi
    28cc:	bf 22 48 00 00       	mov    $0x4822,%edi
    28d1:	e8 6a de ff ff       	callq  740 <vmwrite_error>
    28d6:	e9 b3 f7 ff ff       	jmpq   208e <vmx_launch+0xa8e>
    28db:	be ff 00 00 00       	mov    $0xff,%esi
    28e0:	bf 0e 48 00 00       	mov    $0x480e,%edi
    28e5:	e8 56 de ff ff       	callq  740 <vmwrite_error>
    28ea:	e9 b7 f7 ff ff       	jmpq   20a6 <vmx_launch+0xaa6>
    28ef:	31 f6                	xor    %esi,%esi
    28f1:	bf 2a 48 00 00       	mov    $0x482a,%edi
    28f6:	e8 45 de ff ff       	callq  740 <vmwrite_error>
    28fb:	e9 bb f7 ff ff       	jmpq   20bb <vmx_launch+0xabb>
    2900:	31 f6                	xor    %esi,%esi
    2902:	bf 24 68 00 00       	mov    $0x6824,%edi
    2907:	e8 34 de ff ff       	callq  740 <vmwrite_error>
    290c:	e9 bf f7 ff ff       	jmpq   20d0 <vmx_launch+0xad0>
    2911:	31 f6                	xor    %esi,%esi
    2913:	bf 26 68 00 00       	mov    $0x6826,%edi
    2918:	e8 23 de ff ff       	callq  740 <vmwrite_error>
    291d:	e9 c3 f7 ff ff       	jmpq   20e5 <vmx_launch+0xae5>
    2922:	31 f6                	xor    %esi,%esi
    2924:	bf 26 48 00 00       	mov    $0x4826,%edi
    2929:	e8 12 de ff ff       	callq  740 <vmwrite_error>
    292e:	e9 c7 f7 ff ff       	jmpq   20fa <vmx_launch+0xafa>
    2933:	31 f6                	xor    %esi,%esi
    2935:	bf 24 48 00 00       	mov    $0x4824,%edi
    293a:	e8 01 de ff ff       	callq  740 <vmwrite_error>
    293f:	e9 cb f7 ff ff       	jmpq   210f <vmx_launch+0xb0f>
    2944:	31 f6                	xor    %esi,%esi
    2946:	bf 22 68 00 00       	mov    $0x6822,%edi
    294b:	e8 f0 dd ff ff       	callq  740 <vmwrite_error>
    2950:	e9 cf f7 ff ff       	jmpq   2124 <vmx_launch+0xb24>
    2955:	31 f6                	xor    %esi,%esi
    2957:	bf 02 28 00 00       	mov    $0x2802,%edi
    295c:	e8 df dd ff ff       	callq  740 <vmwrite_error>
    2961:	e9 d3 f7 ff ff       	jmpq   2139 <vmx_launch+0xb39>
    2966:	48 89 c6             	mov    %rax,%rsi
    2969:	bf 04 20 00 00       	mov    $0x2004,%edi
    296e:	e8 cd dd ff ff       	callq  740 <vmwrite_error>
    2973:	e9 0f ef ff ff       	jmpq   1887 <vmx_launch+0x287>
    2978:	48 89 c6             	mov    %rax,%rsi
    297b:	bf 1a 20 00 00       	mov    $0x201a,%edi
    2980:	e8 bb dd ff ff       	callq  740 <vmwrite_error>
    2985:	e9 88 ee ff ff       	jmpq   1812 <vmx_launch+0x212>
    298a:	31 f6                	xor    %esi,%esi
    298c:	bf 16 68 00 00       	mov    $0x6816,%edi
    2991:	e8 aa dd ff ff       	callq  740 <vmwrite_error>
    2996:	e9 e0 f3 ff ff       	jmpq   1d7b <vmx_launch+0x77b>
    299b:	31 f6                	xor    %esi,%esi
    299d:	bf 10 48 00 00       	mov    $0x4810,%edi
    29a2:	e8 99 dd ff ff       	callq  740 <vmwrite_error>
    29a7:	e9 e4 f3 ff ff       	jmpq   1d90 <vmx_launch+0x790>
    29ac:	31 f6                	xor    %esi,%esi
    29ae:	bf 18 68 00 00       	mov    $0x6818,%edi
    29b3:	e8 88 dd ff ff       	callq  740 <vmwrite_error>
    29b8:	e9 e8 f3 ff ff       	jmpq   1da5 <vmx_launch+0x7a5>
    29bd:	31 f6                	xor    %esi,%esi
    29bf:	bf 12 48 00 00       	mov    $0x4812,%edi
    29c4:	e8 77 dd ff ff       	callq  740 <vmwrite_error>
    29c9:	e9 ec f3 ff ff       	jmpq   1dba <vmx_launch+0x7ba>
    29ce:	31 f6                	xor    %esi,%esi
    29d0:	bf 1a 68 00 00       	mov    $0x681a,%edi
    29d5:	e8 66 dd ff ff       	callq  740 <vmwrite_error>
    29da:	e9 f0 f3 ff ff       	jmpq   1dcf <vmx_launch+0x7cf>
    29df:	31 f6                	xor    %esi,%esi
    29e1:	bf 08 68 00 00       	mov    $0x6808,%edi
    29e6:	e8 55 dd ff ff       	callq  740 <vmwrite_error>
    29eb:	e9 f4 f3 ff ff       	jmpq   1de4 <vmx_launch+0x7e4>
    29f0:	31 f6                	xor    %esi,%esi
    29f2:	bf 0c 68 00 00       	mov    $0x680c,%edi
    29f7:	e8 44 dd ff ff       	callq  740 <vmwrite_error>
    29fc:	e9 f8 f3 ff ff       	jmpq   1df9 <vmx_launch+0x7f9>
    2a01:	31 f6                	xor    %esi,%esi
    2a03:	bf 06 68 00 00       	mov    $0x6806,%edi
    2a08:	e8 33 dd ff ff       	callq  740 <vmwrite_error>
    2a0d:	e9 fc f3 ff ff       	jmpq   1e0e <vmx_launch+0x80e>
    2a12:	31 f6                	xor    %esi,%esi
    2a14:	bf 10 68 00 00       	mov    $0x6810,%edi
    2a19:	e8 22 dd ff ff       	callq  740 <vmwrite_error>
    2a1e:	e9 00 f4 ff ff       	jmpq   1e23 <vmx_launch+0x823>
    2a23:	31 f6                	xor    %esi,%esi
    2a25:	bf 0a 68 00 00       	mov    $0x680a,%edi
    2a2a:	e8 11 dd ff ff       	callq  740 <vmwrite_error>
    2a2f:	e9 04 f4 ff ff       	jmpq   1e38 <vmx_launch+0x838>
    2a34:	48 89 c6             	mov    %rax,%rsi
    2a37:	bf 0e 68 00 00       	mov    $0x680e,%edi
    2a3c:	e8 ff dc ff ff       	callq  740 <vmwrite_error>
    2a41:	e9 11 f4 ff ff       	jmpq   1e57 <vmx_launch+0x857>
    2a46:	be 9b a0 00 00       	mov    $0xa09b,%esi
    2a4b:	bf 16 48 00 00       	mov    $0x4816,%edi
    2a50:	e8 eb dc ff ff       	callq  740 <vmwrite_error>
    2a55:	e9 15 f4 ff ff       	jmpq   1e6f <vmx_launch+0x86f>
    2a5a:	be 93 a0 00 00       	mov    $0xa093,%esi
    2a5f:	bf 1a 48 00 00       	mov    $0x481a,%edi
    2a64:	e8 d7 dc ff ff       	callq  740 <vmwrite_error>
    2a69:	e9 19 f4 ff ff       	jmpq   1e87 <vmx_launch+0x887>
    2a6e:	be 93 a0 00 00       	mov    $0xa093,%esi
    2a73:	bf 14 48 00 00       	mov    $0x4814,%edi
    2a78:	e8 c3 dc ff ff       	callq  740 <vmwrite_error>
    2a7d:	e9 1d f4 ff ff       	jmpq   1e9f <vmx_launch+0x89f>
    2a82:	be 93 a0 00 00       	mov    $0xa093,%esi
    2a87:	bf 1c 48 00 00       	mov    $0x481c,%edi
    2a8c:	e8 af dc ff ff       	callq  740 <vmwrite_error>
    2a91:	e9 21 f4 ff ff       	jmpq   1eb7 <vmx_launch+0x8b7>
    2a96:	be 93 a0 00 00       	mov    $0xa093,%esi
    2a9b:	bf 1e 48 00 00       	mov    $0x481e,%edi
    2aa0:	e8 9b dc ff ff       	callq  740 <vmwrite_error>
    2aa5:	e9 25 f4 ff ff       	jmpq   1ecf <vmx_launch+0x8cf>
    2aaa:	be 93 a0 00 00       	mov    $0xa093,%esi
    2aaf:	bf 18 48 00 00       	mov    $0x4818,%edi
    2ab4:	e8 87 dc ff ff       	callq  740 <vmwrite_error>
    2ab9:	e9 29 f4 ff ff       	jmpq   1ee7 <vmx_launch+0x8e7>
    2abe:	48 89 c6             	mov    %rax,%rsi
    2ac1:	bf 02 48 00 00       	mov    $0x4802,%edi
    2ac6:	e8 75 dc ff ff       	callq  740 <vmwrite_error>
    2acb:	e9 2f f4 ff ff       	jmpq   1eff <vmx_launch+0x8ff>
    2ad0:	48 89 c6             	mov    %rax,%rsi
    2ad3:	bf 06 48 00 00       	mov    $0x4806,%edi
    2ad8:	e8 63 dc ff ff       	callq  740 <vmwrite_error>
    2add:	e9 35 f4 ff ff       	jmpq   1f17 <vmx_launch+0x917>
    2ae2:	48 89 c6             	mov    %rax,%rsi
    2ae5:	bf 00 48 00 00       	mov    $0x4800,%edi
    2aea:	e8 51 dc ff ff       	callq  740 <vmwrite_error>
    2aef:	e9 3b f4 ff ff       	jmpq   1f2f <vmx_launch+0x92f>
    2af4:	48 89 c6             	mov    %rax,%rsi
    2af7:	bf 08 48 00 00       	mov    $0x4808,%edi
    2afc:	e8 3f dc ff ff       	callq  740 <vmwrite_error>
    2b01:	e9 41 f4 ff ff       	jmpq   1f47 <vmx_launch+0x947>
    2b06:	48 89 c6             	mov    %rax,%rsi
    2b09:	bf 0a 48 00 00       	mov    $0x480a,%edi
    2b0e:	e8 2d dc ff ff       	callq  740 <vmwrite_error>
    2b13:	e9 47 f4 ff ff       	jmpq   1f5f <vmx_launch+0x95f>
    2b18:	48 89 c6             	mov    %rax,%rsi
    2b1b:	bf 04 48 00 00       	mov    $0x4804,%edi
    2b20:	e8 1b dc ff ff       	callq  740 <vmwrite_error>
    2b25:	e9 4d f4 ff ff       	jmpq   1f77 <vmx_launch+0x977>
    2b2a:	31 f6                	xor    %esi,%esi
    2b2c:	bf 02 08 00 00       	mov    $0x802,%edi
    2b31:	e8 0a dc ff ff       	callq  740 <vmwrite_error>
    2b36:	e9 51 f4 ff ff       	jmpq   1f8c <vmx_launch+0x98c>
    2b3b:	31 f6                	xor    %esi,%esi
    2b3d:	bf 06 08 00 00       	mov    $0x806,%edi
    2b42:	e8 f9 db ff ff       	callq  740 <vmwrite_error>
    2b47:	e9 55 f4 ff ff       	jmpq   1fa1 <vmx_launch+0x9a1>
    2b4c:	31 f6                	xor    %esi,%esi
    2b4e:	bf 00 08 00 00       	mov    $0x800,%edi
    2b53:	e8 e8 db ff ff       	callq  740 <vmwrite_error>
    2b58:	e9 59 f4 ff ff       	jmpq   1fb6 <vmx_launch+0x9b6>
    2b5d:	31 f6                	xor    %esi,%esi
    2b5f:	bf 08 08 00 00       	mov    $0x808,%edi
    2b64:	e8 d7 db ff ff       	callq  740 <vmwrite_error>
    2b69:	e9 5d f4 ff ff       	jmpq   1fcb <vmx_launch+0x9cb>
    2b6e:	31 f6                	xor    %esi,%esi
    2b70:	bf 0a 08 00 00       	mov    $0x80a,%edi
    2b75:	e8 c6 db ff ff       	callq  740 <vmwrite_error>
    2b7a:	e9 61 f4 ff ff       	jmpq   1fe0 <vmx_launch+0x9e0>
    2b7f:	31 f6                	xor    %esi,%esi
    2b81:	bf 04 08 00 00       	mov    $0x804,%edi
    2b86:	e8 b5 db ff ff       	callq  740 <vmwrite_error>
    2b8b:	e9 65 f4 ff ff       	jmpq   1ff5 <vmx_launch+0x9f5>
    2b90:	31 f6                	xor    %esi,%esi
    2b92:	bf 0e 08 00 00       	mov    $0x80e,%edi
    2b97:	e8 a4 db ff ff       	callq  740 <vmwrite_error>
    2b9c:	e9 69 f4 ff ff       	jmpq   200a <vmx_launch+0xa0a>
    2ba1:	31 f6                	xor    %esi,%esi
    2ba3:	bf 0c 08 00 00       	mov    $0x80c,%edi
    2ba8:	e8 93 db ff ff       	callq  740 <vmwrite_error>
    2bad:	e9 6d f4 ff ff       	jmpq   201f <vmx_launch+0xa1f>
    2bb2:	be 82 00 00 00       	mov    $0x82,%esi
    2bb7:	bf 20 48 00 00       	mov    $0x4820,%edi
    2bbc:	e8 7f db ff ff       	callq  740 <vmwrite_error>
    2bc1:	e9 71 f4 ff ff       	jmpq   2037 <vmx_launch+0xa37>
    2bc6:	48 89 c6             	mov    %rax,%rsi
    2bc9:	bf 00 6c 00 00       	mov    $0x6c00,%edi
    2bce:	e8 6d db ff ff       	callq  740 <vmwrite_error>
    2bd3:	e9 d3 ee ff ff       	jmpq   1aab <vmx_launch+0x4ab>
    2bd8:	48 89 c6             	mov    %rax,%rsi
    2bdb:	bf 04 6c 00 00       	mov    $0x6c04,%edi
    2be0:	e8 5b db ff ff       	callq  740 <vmwrite_error>
    2be5:	e9 d7 ee ff ff       	jmpq   1ac1 <vmx_launch+0x4c1>
    2bea:	48 89 c6             	mov    %rax,%rsi
    2bed:	bf 02 6c 00 00       	mov    $0x6c02,%edi
    2bf2:	e8 49 db ff ff       	callq  740 <vmwrite_error>
    2bf7:	e9 df ee ff ff       	jmpq   1adb <vmx_launch+0x4db>
    2bfc:	be 10 00 00 00       	mov    $0x10,%esi
    2c01:	bf 02 0c 00 00       	mov    $0xc02,%edi
    2c06:	e8 35 db ff ff       	callq  740 <vmwrite_error>
    2c0b:	e9 e3 ee ff ff       	jmpq   1af3 <vmx_launch+0x4f3>
    2c10:	be 18 00 00 00       	mov    $0x18,%esi
    2c15:	bf 06 0c 00 00       	mov    $0xc06,%edi
    2c1a:	e8 21 db ff ff       	callq  740 <vmwrite_error>
    2c1f:	e9 e7 ee ff ff       	jmpq   1b0b <vmx_launch+0x50b>
    2c24:	be 18 00 00 00       	mov    $0x18,%esi
    2c29:	bf 00 0c 00 00       	mov    $0xc00,%edi
    2c2e:	e8 0d db ff ff       	callq  740 <vmwrite_error>
    2c33:	e9 eb ee ff ff       	jmpq   1b23 <vmx_launch+0x523>
    2c38:	be 18 00 00 00       	mov    $0x18,%esi
    2c3d:	bf 04 0c 00 00       	mov    $0xc04,%edi
    2c42:	e8 f9 da ff ff       	callq  740 <vmwrite_error>
    2c47:	e9 ef ee ff ff       	jmpq   1b3b <vmx_launch+0x53b>
    2c4c:	be 40 00 00 00       	mov    $0x40,%esi
    2c51:	bf 0c 0c 00 00       	mov    $0xc0c,%edi
    2c56:	e8 e5 da ff ff       	callq  740 <vmwrite_error>
    2c5b:	e9 f3 ee ff ff       	jmpq   1b53 <vmx_launch+0x553>
    2c60:	48 89 c6             	mov    %rax,%rsi
    2c63:	bf 00 60 00 00       	mov    $0x6000,%edi
    2c68:	e8 d3 da ff ff       	callq  740 <vmwrite_error>
    2c6d:	e9 d4 ed ff ff       	jmpq   1a46 <vmx_launch+0x446>
    2c72:	48 89 c6             	mov    %rax,%rsi
    2c75:	bf 02 60 00 00       	mov    $0x6002,%edi
    2c7a:	e8 c1 da ff ff       	callq  740 <vmwrite_error>
    2c7f:	e9 dc ed ff ff       	jmpq   1a60 <vmx_launch+0x460>
    2c84:	31 f6                	xor    %esi,%esi
    2c86:	bf 10 20 00 00       	mov    $0x2010,%edi
    2c8b:	e8 b0 da ff ff       	callq  740 <vmwrite_error>
    2c90:	e9 e0 ed ff ff       	jmpq   1a75 <vmx_launch+0x475>
    2c95:	be 0a 00 00 00       	mov    $0xa,%esi
    2c9a:	bf 04 40 00 00       	mov    $0x4004,%edi
    2c9f:	e8 9c da ff ff       	callq  740 <vmwrite_error>
    2ca4:	e9 e4 ed ff ff       	jmpq   1a8d <vmx_launch+0x48d>
    2ca9:	48 89 c6             	mov    %rax,%rsi
    2cac:	bf 0c 40 00 00       	mov    $0x400c,%edi
    2cb1:	e8 8a da ff ff       	callq  740 <vmwrite_error>
    2cb6:	8b 0d 00 00 00 00    	mov    0x0(%rip),%ecx        # 2cbc <vmx_launch+0x16bc>
			2cb8: R_X86_64_PC32	.bss+0x58
    2cbc:	e9 56 ed ff ff       	jmpq   1a17 <vmx_launch+0x417>
    2cc1:	48 89 c6             	mov    %rax,%rsi
    2cc4:	bf 12 40 00 00       	mov    $0x4012,%edi
    2cc9:	e8 72 da ff ff       	callq  740 <vmwrite_error>
    2cce:	e9 59 ed ff ff       	jmpq   1a2c <vmx_launch+0x42c>
    2cd3:	31 f6                	xor    %esi,%esi
    2cd5:	bf 08 0c 00 00       	mov    $0xc08,%edi
    2cda:	e8 61 da ff ff       	callq  740 <vmwrite_error>
    2cdf:	e9 45 ef ff ff       	jmpq   1c29 <vmx_launch+0x629>
    2ce4:	31 f6                	xor    %esi,%esi
    2ce6:	bf 0a 0c 00 00       	mov    $0xc0a,%edi
    2ceb:	e8 50 da ff ff       	callq  740 <vmwrite_error>
    2cf0:	e9 49 ef ff ff       	jmpq   1c3e <vmx_launch+0x63e>
    2cf5:	48 89 c6             	mov    %rax,%rsi
    2cf8:	bf 06 6c 00 00       	mov    $0x6c06,%edi
    2cfd:	e8 3e da ff ff       	callq  740 <vmwrite_error>
    2d02:	e9 56 ef ff ff       	jmpq   1c5d <vmx_launch+0x65d>
    2d07:	48 89 c6             	mov    %rax,%rsi
    2d0a:	bf 08 6c 00 00       	mov    $0x6c08,%edi
    2d0f:	e8 2c da ff ff       	callq  740 <vmwrite_error>
    2d14:	e9 63 ef ff ff       	jmpq   1c7c <vmx_launch+0x67c>
    2d19:	48 89 c6             	mov    %rax,%rsi
    2d1c:	bf 00 68 00 00       	mov    $0x6800,%edi
    2d21:	e8 1a da ff ff       	callq  740 <vmwrite_error>
    2d26:	e9 c1 ef ff ff       	jmpq   1cec <vmx_launch+0x6ec>
    2d2b:	48 89 c6             	mov    %rax,%rsi
    2d2e:	bf 04 60 00 00       	mov    $0x6004,%edi
    2d33:	e8 08 da ff ff       	callq  740 <vmwrite_error>
    2d38:	e9 c7 ef ff ff       	jmpq   1d04 <vmx_launch+0x704>
    2d3d:	48 89 c6             	mov    %rax,%rsi
    2d40:	bf 02 68 00 00       	mov    $0x6802,%edi
    2d45:	e8 f6 d9 ff ff       	callq  740 <vmwrite_error>
    2d4a:	e9 d3 ef ff ff       	jmpq   1d22 <vmx_launch+0x722>
    2d4f:	48 89 de             	mov    %rbx,%rsi
    2d52:	bf 04 68 00 00       	mov    $0x6804,%edi
    2d57:	e8 e4 d9 ff ff       	callq  740 <vmwrite_error>
    2d5c:	e9 d7 ef ff ff       	jmpq   1d38 <vmx_launch+0x738>
    2d61:	48 89 de             	mov    %rbx,%rsi
    2d64:	bf 06 60 00 00       	mov    $0x6006,%edi
    2d69:	e8 d2 d9 ff ff       	callq  740 <vmwrite_error>
    2d6e:	e9 db ef ff ff       	jmpq   1d4e <vmx_launch+0x74e>
    2d73:	be 01 45 00 00       	mov    $0x4501,%esi
    2d78:	bf 06 28 00 00       	mov    $0x2806,%edi
    2d7d:	e8 be d9 ff ff       	callq  740 <vmwrite_error>
    2d82:	e9 df ef ff ff       	jmpq   1d66 <vmx_launch+0x766>
    2d87:	48 89 c6             	mov    %rax,%rsi
    2d8a:	bf 0e 6c 00 00       	mov    $0x6c0e,%edi
    2d8f:	e8 ac d9 ff ff       	callq  740 <vmwrite_error>
    2d94:	e9 d8 ed ff ff       	jmpq   1b71 <vmx_launch+0x571>
    2d99:	48 89 c6             	mov    %rax,%rsi
    2d9c:	bf 16 6c 00 00       	mov    $0x6c16,%edi
    2da1:	e8 9a d9 ff ff       	callq  740 <vmwrite_error>
    2da6:	e9 e0 ed ff ff       	jmpq   1b8b <vmx_launch+0x58b>
    2dab:	48 89 c6             	mov    %rax,%rsi
    2dae:	bf 00 4c 00 00       	mov    $0x4c00,%edi
    2db3:	e8 88 d9 ff ff       	callq  740 <vmwrite_error>
    2db8:	e9 ef ed ff ff       	jmpq   1bac <vmx_launch+0x5ac>
    2dbd:	48 89 c6             	mov    %rax,%rsi
    2dc0:	bf 12 6c 00 00       	mov    $0x6c12,%edi
    2dc5:	e8 76 d9 ff ff       	callq  740 <vmwrite_error>
    2dca:	e9 fc ed ff ff       	jmpq   1bcb <vmx_launch+0x5cb>
    2dcf:	b9 1e 68 00 00       	mov    $0x681e,%ecx
    2dd4:	48 89 ca             	mov    %rcx,%rdx
    2dd7:	0f 78 d0             	vmread %rdx,%rax
    2dda:	be 0c 44 00 00       	mov    $0x440c,%esi
    2ddf:	48 89 c7             	mov    %rax,%rdi
    2de2:	48 89 f2             	mov    %rsi,%rdx
    2de5:	0f 78 d0             	vmread %rdx,%rax
    2de8:	89 c6                	mov    %eax,%esi
    2dea:	48 89 ca             	mov    %rcx,%rdx
    2ded:	48 01 fe             	add    %rdi,%rsi
    2df0:	48 89 f0             	mov    %rsi,%rax
    2df3:	0f 79 d0             	vmwrite %rax,%rdx
    2df6:	0f 96 c1             	setbe  %cl
    2df9:	84 c9                	test   %cl,%cl
    2dfb:	0f 85 4a 04 00 00    	jne    324b <vmx_launch+0x1c4b>
    2e01:	48 8b 7d 80          	mov    -0x80(%rbp),%rdi
    2e05:	e8 06 dc ff ff       	callq  a10 <vmx_put_cpu.isra.9>
    2e0a:	83 fb 12             	cmp    $0x12,%ebx
    2e0d:	0f 85 2f f7 ff ff    	jne    2542 <vmx_launch+0xf42>
    2e13:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    2e17:	4c 8b 98 88 00 00 00 	mov    0x88(%rax),%r11
    2e1e:	49 81 fb 38 01 00 00 	cmp    $0x138,%r11
    2e25:	0f 87 00 05 00 00    	ja     332b <vmx_launch+0x1d2b>
    2e2b:	49 81 fb 83 00 00 00 	cmp    $0x83,%r11
    2e32:	0f 84 e3 04 00 00    	je     331b <vmx_launch+0x1d1b>
    2e38:	49 81 fb ac 00 00 00 	cmp    $0xac,%r11
    2e3f:	0f 84 d6 04 00 00    	je     331b <vmx_launch+0x1d1b>
    2e45:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
    2e49:	48 8b 81 88 00 00 00 	mov    0x88(%rcx),%rax
    2e50:	48 8b b9 c0 00 00 00 	mov    0xc0(%rcx),%rdi
    2e57:	48 8b b1 b8 00 00 00 	mov    0xb8(%rcx),%rsi
    2e5e:	48 8b 91 98 00 00 00 	mov    0x98(%rcx),%rdx
    2e65:	4c 8b 81 c8 00 00 00 	mov    0xc8(%rcx),%r8
    2e6c:	4c 8b 89 d0 00 00 00 	mov    0xd0(%rcx),%r9
    2e73:	4c 8b 91 38 02 00 00 	mov    0x238(%rcx),%r10
    2e7a:	49 89 cb             	mov    %rcx,%r11
    2e7d:	51                   	push   %rcx
    2e7e:	48 8b 89 d8 00 00 00 	mov    0xd8(%rcx),%rcx
    2e85:	48 c1 e0 03          	shl    $0x3,%rax
    2e89:	4c 01 d0             	add    %r10,%rax
    2e8c:	ff 10                	callq  *(%rax)
    2e8e:	59                   	pop    %rcx
    2e8f:	48 89 81 88 00 00 00 	mov    %rax,0x88(%rcx)
    2e96:	48 8b 81 88 00 00 00 	mov    0x88(%rcx),%rax
    2e9d:	48 3d fc fd ff ff    	cmp    $0xfffffffffffffdfc,%rax
    2ea3:	0f 84 8b 03 00 00    	je     3234 <vmx_launch+0x1c34>
    2ea9:	0f 82 bf f6 ff ff    	jb     256e <vmx_launch+0xf6e>
    2eaf:	48 05 02 02 00 00    	add    $0x202,%rax
    2eb5:	48 83 f8 02          	cmp    $0x2,%rax
    2eb9:	0f 87 af f6 ff ff    	ja     256e <vmx_launch+0xf6e>
    2ebf:	4c 89 99 88 00 00 00 	mov    %r11,0x88(%rcx)
    2ec6:	48 89 cf             	mov    %rcx,%rdi
    2ec9:	e8 b2 de ff ff       	callq  d80 <vmx_get_cpu>
    2ece:	ba 1e 68 00 00       	mov    $0x681e,%edx
    2ed3:	0f 78 d0             	vmread %rdx,%rax
    2ed6:	48 83 e8 03          	sub    $0x3,%rax
    2eda:	0f 79 d0             	vmwrite %rax,%rdx
    2edd:	0f 96 c2             	setbe  %dl
    2ee0:	84 d2                	test   %dl,%dl
    2ee2:	0f 85 21 04 00 00    	jne    3309 <vmx_launch+0x1d09>
    2ee8:	48 8b 7d 80          	mov    -0x80(%rbp),%rdi
    2eec:	e8 1f db ff ff       	callq  a10 <vmx_put_cpu.isra.9>
    2ef1:	e9 78 f6 ff ff       	jmpq   256e <vmx_launch+0xf6e>
    2ef6:	e8 75 d6 ff ff       	callq  570 <arch_local_irq_enable>
    2efb:	48 8b 7d 80          	mov    -0x80(%rbp),%rdi
    2eff:	e8 0c db ff ff       	callq  a10 <vmx_put_cpu.isra.9>
    2f04:	e8 00 00 00 00       	callq  2f09 <vmx_launch+0x1909>
			2f05: R_X86_64_PC32	_cond_resched-0x4
    2f09:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
    2f0d:	e8 6e de ff ff       	callq  d80 <vmx_get_cpu>
    2f12:	f6 05 00 00 00 00 01 	testb  $0x1,0x0(%rip)        # 2f19 <vmx_launch+0x1919>
			2f14: R_X86_64_PC32	vmx_capability+0x8
    2f19:	74 41                	je     2f5c <vmx_launch+0x195c>
    2f1b:	65 8b 05 00 00 00 00 	mov    %gs:0x0(%rip),%eax        # 2f22 <vmx_launch+0x1922>
			2f1e: R_X86_64_PC32	cpu_number-0x4
    2f22:	48 98                	cltq   
    2f24:	be 00 00 00 80       	mov    $0x80000000,%esi
    2f29:	48 03 34 c5 00 00 00 	add    0x0(,%rax,8),%rsi
    2f30:	00 
			2f2d: R_X86_64_32S	.bss+0x10060
    2f31:	0f 82 49 04 00 00    	jb     3380 <vmx_launch+0x1d80>
    2f37:	48 c7 c0 00 00 00 80 	mov    $0xffffffff80000000,%rax
    2f3e:	48 2b 05 00 00 00 00 	sub    0x0(%rip),%rax        # 2f45 <vmx_launch+0x1945>
			2f41: R_X86_64_PC32	page_offset_base-0x4
    2f45:	48 01 c6             	add    %rax,%rsi
    2f48:	4c 89 ea             	mov    %r13,%rdx
    2f4b:	48 89 f0             	mov    %rsi,%rax
    2f4e:	0f 79 d0             	vmwrite %rax,%rdx
    2f51:	0f 96 c0             	setbe  %al
    2f54:	84 c0                	test   %al,%al
    2f56:	0f 85 15 04 00 00    	jne    3371 <vmx_launch+0x1d71>
    2f5c:	f6 05 00 00 00 00 80 	testb  $0x80,0x0(%rip)        # 2f63 <vmx_launch+0x1963>
			2f5e: R_X86_64_PC32	vmx_capability-0x1
    2f63:	0f 84 88 f2 ff ff    	je     21f1 <vmx_launch+0xbf1>
    2f69:	65 8b 05 00 00 00 00 	mov    %gs:0x0(%rip),%eax        # 2f70 <vmx_launch+0x1970>
			2f6c: R_X86_64_PC32	cpu_number-0x4
    2f70:	48 98                	cltq   
    2f72:	be 00 00 00 80       	mov    $0x80000000,%esi
    2f77:	48 03 34 c5 00 00 00 	add    0x0(,%rax,8),%rsi
    2f7e:	00 
			2f7b: R_X86_64_32S	.bss+0x60
    2f7f:	0f 82 78 03 00 00    	jb     32fd <vmx_launch+0x1cfd>
    2f85:	48 c7 c0 00 00 00 80 	mov    $0xffffffff80000000,%rax
    2f8c:	48 2b 05 00 00 00 00 	sub    0x0(%rip),%rax        # 2f93 <vmx_launch+0x1993>
			2f8f: R_X86_64_PC32	page_offset_base-0x4
    2f93:	48 01 c6             	add    %rax,%rsi
    2f96:	4c 89 e2             	mov    %r12,%rdx
    2f99:	48 89 f0             	mov    %rsi,%rax
    2f9c:	0f 79 d0             	vmwrite %rax,%rdx
    2f9f:	0f 96 c0             	setbe  %al
    2fa2:	84 c0                	test   %al,%al
    2fa4:	0f 84 47 f2 ff ff    	je     21f1 <vmx_launch+0xbf1>
    2faa:	bf 16 20 00 00       	mov    $0x2016,%edi
    2faf:	e8 8c d7 ff ff       	callq  740 <vmwrite_error>
    2fb4:	e9 38 f2 ff ff       	jmpq   21f1 <vmx_launch+0xbf1>
    2fb9:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
    2fbd:	0f b6 c8             	movzbl %al,%ecx
    2fc0:	48 89 c8             	mov    %rcx,%rax
    2fc3:	48 c1 e1 04          	shl    $0x4,%rcx
    2fc7:	48 03 8e 50 02 00 00 	add    0x250(%rsi),%rcx
    2fce:	0f b7 51 06          	movzwl 0x6(%rcx),%edx
    2fd2:	8b 71 08             	mov    0x8(%rcx),%esi
    2fd5:	0f b7 09             	movzwl (%rcx),%ecx
    2fd8:	48 c1 e2 10          	shl    $0x10,%rdx
    2fdc:	48 c1 e6 20          	shl    $0x20,%rsi
    2fe0:	48 09 f2             	or     %rsi,%rdx
    2fe3:	48 09 ca             	or     %rcx,%rdx
    2fe6:	3d f2 00 00 00       	cmp    $0xf2,%eax
    2feb:	0f 84 cf 01 00 00    	je     31c0 <vmx_launch+0x1bc0>
    2ff1:	48 89 e0             	mov    %rsp,%rax
    2ff4:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    2ff8:	6a 18                	pushq  $0x18
    2ffa:	50                   	push   %rax
    2ffb:	9c                   	pushfq 
    2ffc:	6a 10                	pushq  $0x10
    2ffe:	ff d2                	callq  *%rdx
    3000:	e9 18 f5 ff ff       	jmpq   251d <vmx_launch+0xf1d>
    3005:	85 c0                	test   %eax,%eax
    3007:	0f 89 fc f4 ff ff    	jns    2509 <vmx_launch+0xf09>
    300d:	cd 02                	int    $0x2
    300f:	e9 f5 f4 ff ff       	jmpq   2509 <vmx_launch+0xf09>
    3014:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
    3018:	48 8b 86 88 00 00 00 	mov    0x88(%rsi),%rax
    301f:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    3026:	48 8b 86 90 00 00 00 	mov    0x90(%rsi),%rax
    302d:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    3034:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
    303a:	8b 8d 70 ff ff ff    	mov    -0x90(%rbp),%ecx
    3040:	0f a2                	cpuid  
    3042:	89 c0                	mov    %eax,%eax
    3044:	48 89 86 88 00 00 00 	mov    %rax,0x88(%rsi)
    304b:	89 d8                	mov    %ebx,%eax
    304d:	48 89 86 a0 00 00 00 	mov    %rax,0xa0(%rsi)
    3054:	89 c8                	mov    %ecx,%eax
    3056:	48 89 86 90 00 00 00 	mov    %rax,0x90(%rsi)
    305d:	89 d0                	mov    %edx,%eax
    305f:	48 89 86 98 00 00 00 	mov    %rax,0x98(%rsi)
    3066:	e9 03 f5 ff ff       	jmpq   256e <vmx_launch+0xf6e>
    306b:	e8 00 00 00 00       	callq  3070 <vmx_launch+0x1a70>
			306c: R_X86_64_PC32	__stack_chk_fail-0x4
    3070:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
    3074:	e8 07 dd ff ff       	callq  d80 <vmx_get_cpu>
    3079:	ba 00 64 00 00       	mov    $0x6400,%edx
    307e:	0f 78 d0             	vmread %rdx,%rax
    3081:	ba 0a 64 00 00       	mov    $0x640a,%edx
    3086:	49 89 c4             	mov    %rax,%r12
    3089:	0f 78 d0             	vmread %rdx,%rax
    308c:	ba 00 24 00 00       	mov    $0x2400,%edx
    3091:	49 89 c5             	mov    %rax,%r13
    3094:	0f 78 d0             	vmread %rdx,%rax
    3097:	48 8b 7d 80          	mov    -0x80(%rbp),%rdi
    309b:	48 89 c3             	mov    %rax,%rbx
    309e:	e8 6d d9 ff ff       	callq  a10 <vmx_put_cpu.isra.9>
    30a3:	41 f6 c4 40          	test   $0x40,%r12b
    30a7:	0f 85 f3 02 00 00    	jne    33a0 <vmx_launch+0x1da0>
    30ad:	41 f6 c4 80          	test   $0x80,%r12b
    30b1:	0f 84 d5 02 00 00    	je     338c <vmx_launch+0x1d8c>
    30b7:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
    30bb:	44 89 e1             	mov    %r12d,%ecx
    30be:	4c 89 ea             	mov    %r13,%rdx
    30c1:	48 89 de             	mov    %rbx,%rsi
    30c4:	e8 00 00 00 00       	callq  30c9 <vmx_launch+0x1ac9>
			30c5: R_X86_64_PC32	vmx_do_ept_fault-0x4
    30c9:	85 c0                	test   %eax,%eax
    30cb:	0f 84 9d f4 ff ff    	je     256e <vmx_launch+0xf6e>
    30d1:	4c 89 ea             	mov    %r13,%rdx
    30d4:	48 89 de             	mov    %rbx,%rsi
    30d7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			30da: R_X86_64_32S	.rodata.str1.8+0x4e8
    30de:	e8 00 00 00 00       	callq  30e3 <vmx_launch+0x1ae3>
			30df: R_X86_64_PC32	printk-0x4
    30e3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    30e7:	c7 80 1c 01 00 00 02 	movl   $0x2,0x11c(%rax)
    30ee:	00 00 00 
    30f1:	48 89 c7             	mov    %rax,%rdi
    30f4:	e8 00 00 00 00       	callq  30f9 <vmx_launch+0x1af9>
			30f5: R_X86_64_PC32	.text.unlikely-0x4
    30f9:	e9 82 f4 ff ff       	jmpq   2580 <vmx_launch+0xf80>
    30fe:	e8 6d d4 ff ff       	callq  570 <arch_local_irq_enable>
    3103:	48 8b 7d 80          	mov    -0x80(%rbp),%rdi
    3107:	e8 04 d9 ff ff       	callq  a10 <vmx_put_cpu.isra.9>
    310c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    3110:	c7 80 1c 01 00 00 04 	movl   $0x4,0x11c(%rax)
    3117:	00 00 00 
    311a:	e9 61 f4 ff ff       	jmpq   2580 <vmx_launch+0xf80>
    311f:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
    3123:	e8 58 dc ff ff       	callq  d80 <vmx_get_cpu>
    3128:	ba 04 44 00 00       	mov    $0x4404,%edx
    312d:	0f 78 d0             	vmread %rdx,%rax
    3130:	48 8b 7d 80          	mov    -0x80(%rbp),%rdi
    3134:	48 89 c3             	mov    %rax,%rbx
    3137:	e8 d4 d8 ff ff       	callq  a10 <vmx_put_cpu.isra.9>
    313c:	89 d8                	mov    %ebx,%eax
    313e:	25 00 07 00 00       	and    $0x700,%eax
    3143:	3d 00 02 00 00       	cmp    $0x200,%eax
    3148:	0f 84 20 f4 ff ff    	je     256e <vmx_launch+0xf6e>
    314e:	89 de                	mov    %ebx,%esi
    3150:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3153: R_X86_64_32S	.rodata.str1.8+0x520
    3157:	e8 00 00 00 00       	callq  315c <vmx_launch+0x1b5c>
			3158: R_X86_64_PC32	printk-0x4
    315c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    3160:	48 8b 90 40 02 00 00 	mov    0x240(%rax),%rdx
    3167:	c7 80 1c 01 00 00 03 	movl   $0x3,0x11c(%rax)
    316e:	00 00 00 
    3171:	89 d8                	mov    %ebx,%eax
    3173:	25 ff 00 00 00       	and    $0xff,%eax
    3178:	48 89 82 a0 00 00 00 	mov    %rax,0xa0(%rdx)
    317f:	e9 fc f3 ff ff       	jmpq   2580 <vmx_launch+0xf80>
    3184:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    3188:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			318b: R_X86_64_32S	.rodata.str1.1+0xc4
    318f:	c6 40 70 01          	movb   $0x1,0x70(%rax)
    3193:	e8 00 00 00 00       	callq  3198 <vmx_launch+0x1b98>
			3194: R_X86_64_PC32	printk-0x4
    3198:	e9 e3 ef ff ff       	jmpq   2180 <vmx_launch+0xb80>
    319d:	b8 00 44 00 00       	mov    $0x4400,%eax
    31a2:	48 89 c2             	mov    %rax,%rdx
    31a5:	0f 78 d0             	vmread %rdx,%rax
    31a8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			31ab: R_X86_64_32S	.rodata.str1.8+0x448
    31af:	89 c6                	mov    %eax,%esi
    31b1:	bb 00 00 00 80       	mov    $0x80000000,%ebx
    31b6:	e8 00 00 00 00       	callq  31bb <vmx_launch+0x1bbb>
			31b7: R_X86_64_PC32	printk-0x4
    31bb:	e9 2d f3 ff ff       	jmpq   24ed <vmx_launch+0xeed>
    31c0:	e8 00 00 00 00       	callq  31c5 <vmx_launch+0x1bc5>
			31c1: R_X86_64_PC32	dune_apic_write_eoi-0x4
    31c5:	e9 53 f3 ff ff       	jmpq   251d <vmx_launch+0xf1d>
    31ca:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 31d1 <vmx_launch+0x1bd1>
			31cd: R_X86_64_PC32	phys_base-0x4
    31d1:	e9 3f e7 ff ff       	jmpq   1915 <vmx_launch+0x315>
    31d6:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 31dd <vmx_launch+0x1bdd>
			31d9: R_X86_64_PC32	phys_base-0x4
    31dd:	e9 8f e6 ff ff       	jmpq   1871 <vmx_launch+0x271>
    31e2:	48 89 c6             	mov    %rax,%rsi
    31e5:	bf 10 40 00 00       	mov    $0x4010,%edi
    31ea:	e8 51 d5 ff ff       	callq  740 <vmwrite_error>
    31ef:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    31f3:	8b 80 20 01 00 00    	mov    0x120(%rax),%eax
    31f9:	e9 51 f0 ff ff       	jmpq   224f <vmx_launch+0xc4f>
    31fe:	48 89 c6             	mov    %rax,%rsi
    3201:	bf 14 40 00 00       	mov    $0x4014,%edi
    3206:	e8 35 d5 ff ff       	callq  740 <vmwrite_error>
    320b:	e9 52 f0 ff ff       	jmpq   2262 <vmx_launch+0xc62>
    3210:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3217 <vmx_launch+0x1c17>
			3213: R_X86_64_PC32	phys_base-0x4
    3217:	e9 bc e6 ff ff       	jmpq   18d8 <vmx_launch+0x2d8>
    321c:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3223 <vmx_launch+0x1c23>
			321f: R_X86_64_PC32	phys_base-0x4
    3223:	e9 8c e7 ff ff       	jmpq   19b4 <vmx_launch+0x3b4>
    3228:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 322f <vmx_launch+0x1c2f>
			322b: R_X86_64_PC32	phys_base-0x4
    322f:	e9 33 e7 ff ff       	jmpq   1967 <vmx_launch+0x367>
    3234:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    3238:	48 c7 80 88 00 00 00 	movq   $0xdb,0x88(%rax)
    323f:	db 00 00 00 
    3243:	48 89 c7             	mov    %rax,%rdi
    3246:	e9 7e fc ff ff       	jmpq   2ec9 <vmx_launch+0x18c9>
    324b:	bf 1e 68 00 00       	mov    $0x681e,%edi
    3250:	e8 eb d4 ff ff       	callq  740 <vmwrite_error>
    3255:	e9 a7 fb ff ff       	jmpq   2e01 <vmx_launch+0x1801>
    325a:	bf 10 08 00 00       	mov    $0x810,%edi
    325f:	e8 dc d4 ff ff       	callq  740 <vmwrite_error>
    3264:	e9 2f f1 ff ff       	jmpq   2398 <vmx_launch+0xd98>
    3269:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    326d:	81 b8 90 00 00 00 30 	cmpl   $0x830,0x90(%rax)
    3274:	08 00 00 
    3277:	0f 85 03 f3 ff ff    	jne    2580 <vmx_launch+0xf80>
    327d:	f6 05 00 00 00 00 80 	testb  $0x80,0x0(%rip)        # 3284 <vmx_launch+0x1c84>
			327f: R_X86_64_PC32	vmx_capability-0x1
    3284:	0f 84 e4 f2 ff ff    	je     256e <vmx_launch+0xf6e>
    328a:	8b 98 88 00 00 00    	mov    0x88(%rax),%ebx
    3290:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
    3297:	48 8d 75 a4          	lea    -0x5c(%rbp),%rsi
    329b:	c6 45 a4 00          	movb   $0x0,-0x5c(%rbp)
    329f:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    32a6:	48 c1 e0 20          	shl    $0x20,%rax
    32aa:	48 09 c3             	or     %rax,%rbx
    32ad:	49 89 dc             	mov    %rbx,%r12
    32b0:	49 c1 ec 20          	shr    $0x20,%r12
    32b4:	44 89 e7             	mov    %r12d,%edi
    32b7:	e8 00 00 00 00       	callq  32bc <vmx_launch+0x1cbc>
			32b8: R_X86_64_PC32	dune_apic_get_cpu_id_for_apic-0x4
    32bc:	80 7d a4 00          	cmpb   $0x0,-0x5c(%rbp)
    32c0:	0f 85 a8 f2 ff ff    	jne    256e <vmx_launch+0xf6e>
    32c6:	89 c0                	mov    %eax,%eax
    32c8:	0f b6 db             	movzbl %bl,%ebx
    32cb:	48 8b 04 c5 00 00 00 	mov    0x0(,%rax,8),%rax
    32d2:	00 
			32cf: R_X86_64_32S	.bss+0x60
    32d3:	f0 48 0f ab 18       	lock bts %rbx,(%rax)
    32d8:	0f 82 90 f2 ff ff    	jb     256e <vmx_launch+0xf6e>
    32de:	f0 48 0f ba 68 20 00 	lock btsq $0x0,0x20(%rax)
    32e5:	0f 82 83 f2 ff ff    	jb     256e <vmx_launch+0xf6e>
    32eb:	44 89 e6             	mov    %r12d,%esi
    32ee:	bf f2 00 00 00       	mov    $0xf2,%edi
    32f3:	e8 00 00 00 00       	callq  32f8 <vmx_launch+0x1cf8>
			32f4: R_X86_64_PC32	dune_apic_send_ipi-0x4
    32f8:	e9 71 f2 ff ff       	jmpq   256e <vmx_launch+0xf6e>
    32fd:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3304 <vmx_launch+0x1d04>
			3300: R_X86_64_PC32	phys_base-0x4
    3304:	e9 8a fc ff ff       	jmpq   2f93 <vmx_launch+0x1993>
    3309:	48 89 c6             	mov    %rax,%rsi
    330c:	bf 1e 68 00 00       	mov    $0x681e,%edi
    3311:	e8 2a d4 ff ff       	callq  740 <vmwrite_error>
    3316:	e9 cd fb ff ff       	jmpq   2ee8 <vmx_launch+0x18e8>
    331b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			331e: R_X86_64_32S	.rodata.str1.8+0x470
    3322:	e8 00 00 00 00       	callq  3327 <vmx_launch+0x1d27>
			3323: R_X86_64_PC32	printk-0x4
    3327:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    332b:	48 c7 80 88 00 00 00 	movq   $0xffffffffffffffea,0x88(%rax)
    3332:	ea ff ff ff 
    3336:	e9 33 f2 ff ff       	jmpq   256e <vmx_launch+0xf6e>
    333b:	b8 00 64 00 00       	mov    $0x6400,%eax
    3340:	48 89 c2             	mov    %rax,%rdx
    3343:	0f 78 d0             	vmread %rdx,%rax
    3346:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3349: R_X86_64_32S	.rodata.str1.8+0x548
    334d:	89 c2                	mov    %eax,%edx
    334f:	89 de                	mov    %ebx,%esi
    3351:	e8 00 00 00 00       	callq  3356 <vmx_launch+0x1d56>
			3352: R_X86_64_PC32	printk-0x4
    3356:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    335a:	c7 80 1c 01 00 00 05 	movl   $0x5,0x11c(%rax)
    3361:	00 00 00 
    3364:	48 89 c7             	mov    %rax,%rdi
    3367:	e8 00 00 00 00       	callq  336c <vmx_launch+0x1d6c>
			3368: R_X86_64_PC32	.text.unlikely-0x4
    336c:	e9 0f f2 ff ff       	jmpq   2580 <vmx_launch+0xf80>
    3371:	bf 12 20 00 00       	mov    $0x2012,%edi
    3376:	e8 c5 d3 ff ff       	callq  740 <vmwrite_error>
    337b:	e9 dc fb ff ff       	jmpq   2f5c <vmx_launch+0x195c>
    3380:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3387 <vmx_launch+0x1d87>
			3383: R_X86_64_PC32	phys_base-0x4
    3387:	e9 b9 fb ff ff       	jmpq   2f45 <vmx_launch+0x1945>
    338c:	48 89 de             	mov    %rbx,%rsi
    338f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3392: R_X86_64_32S	.rodata.str1.8+0x4b0
    3396:	e8 00 00 00 00       	callq  339b <vmx_launch+0x1d9b>
			3397: R_X86_64_PC32	printk-0x4
    339b:	e9 e0 f1 ff ff       	jmpq   2580 <vmx_launch+0xf80>
    33a0:	48 89 de             	mov    %rbx,%rsi
    33a3:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33a6: R_X86_64_32S	.rodata.str1.8+0x490
    33aa:	e8 00 00 00 00       	callq  33af <vmx_launch+0x1daf>
			33ab: R_X86_64_PC32	printk-0x4
    33af:	e9 cc f1 ff ff       	jmpq   2580 <vmx_launch+0xf80>
    33b4:	66 90                	xchg   %ax,%ax
    33b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    33bd:	00 00 00 

00000000000033c0 <vmx_exit>:
vmx_exit():
    33c0:	e8 00 00 00 00       	callq  33c5 <vmx_exit+0x5>
			33c1: R_X86_64_PC32	__fentry__-0x4
    33c5:	55                   	push   %rbp
    33c6:	48 89 e5             	mov    %rsp,%rbp
    33c9:	e8 00 00 00 00       	callq  33ce <vmx_exit+0xe>
			33ca: R_X86_64_PC32	vmx_cleanup-0x4
    33ce:	ba 01 00 00 00       	mov    $0x1,%edx
    33d3:	31 f6                	xor    %esi,%esi
    33d5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			33d8: R_X86_64_32S	.text+0xc50
    33dc:	e8 00 00 00 00       	callq  33e1 <vmx_exit+0x21>
			33dd: R_X86_64_PC32	on_each_cpu-0x4
    33e1:	e8 aa d5 ff ff       	callq  990 <vmx_free_vmxon_areas>
    33e6:	e8 00 00 00 00       	callq  33eb <vmx_exit+0x2b>
			33e7: R_X86_64_PC32	dune_apic_free-0x4
    33eb:	e8 30 d5 ff ff       	callq  920 <free_virtual_apic_pages>
    33f0:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 33f7 <vmx_exit+0x37>
			33f3: R_X86_64_PC32	.bss+0x2005c
    33f7:	31 f6                	xor    %esi,%esi
    33f9:	e8 00 00 00 00       	callq  33fe <vmx_exit+0x3e>
			33fa: R_X86_64_PC32	free_pages-0x4
    33fe:	5d                   	pop    %rbp
    33ff:	c3                   	retq   

0000000000003400 <ept_mmu_notifier_invalidate_range_end>:
ept_mmu_notifier_invalidate_range_end():
    3400:	e8 00 00 00 00       	callq  3405 <ept_mmu_notifier_invalidate_range_end+0x5>
			3401: R_X86_64_PC32	__fentry__-0x4
    3405:	55                   	push   %rbp
    3406:	48 89 e5             	mov    %rsp,%rbp
    3409:	5d                   	pop    %rbp
    340a:	c3                   	retq   
    340b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003410 <ept_lookup_gpa.isra.4>:
ept_lookup_gpa.isra.4():
    3410:	e8 00 00 00 00       	callq  3415 <ept_lookup_gpa.isra.4+0x5>
			3411: R_X86_64_PC32	__fentry__-0x4
    3415:	55                   	push   %rbp
    3416:	48 89 e5             	mov    %rsp,%rbp
    3419:	41 57                	push   %r15
    341b:	41 56                	push   %r14
    341d:	41 55                	push   %r13
    341f:	41 54                	push   %r12
    3421:	49 89 f7             	mov    %rsi,%r15
    3424:	53                   	push   %rbx
    3425:	41 89 d4             	mov    %edx,%r12d
    3428:	bb 03 00 00 00       	mov    $0x3,%ebx
    342d:	48 83 ec 10          	sub    $0x10,%rsp
    3431:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 3438 <ept_lookup_gpa.isra.4+0x28>
			3434: R_X86_64_PC32	page_offset_base-0x4
    3438:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
    343b:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
    343f:	48 8d 04 37          	lea    (%rdi,%rsi,1),%rax
    3443:	8d 4c db 0c          	lea    0xc(%rbx,%rbx,8),%ecx
    3447:	4c 89 fa             	mov    %r15,%rdx
    344a:	48 d3 ea             	shr    %cl,%rdx
    344d:	48 89 d7             	mov    %rdx,%rdi
    3450:	48 89 d1             	mov    %rdx,%rcx
    3453:	81 e7 ff 01 00 00    	and    $0x1ff,%edi
    3459:	4c 8d 34 f8          	lea    (%rax,%rdi,8),%r14
    345d:	49 8b 3e             	mov    (%r14),%rdi
    3460:	49 89 fd             	mov    %rdi,%r13
    3463:	41 83 e5 07          	and    $0x7,%r13d
    3467:	74 35                	je     349e <ept_lookup_gpa.isra.4+0x8e>
    3469:	40 f6 c7 80          	test   $0x80,%dil
    346d:	0f 84 ad 00 00 00    	je     3520 <ept_lookup_gpa.isra.4+0x110>
    3473:	83 fb 03             	cmp    $0x3,%ebx
    3476:	0f 84 f2 00 00 00    	je     356e <ept_lookup_gpa.isra.4+0x15e>
    347c:	81 e1 ff 01 00 00    	and    $0x1ff,%ecx
    3482:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    3486:	48 8d 04 c8          	lea    (%rax,%rcx,8),%rax
    348a:	48 89 03             	mov    %rax,(%rbx)
    348d:	31 c0                	xor    %eax,%eax
    348f:	48 83 c4 10          	add    $0x10,%rsp
    3493:	5b                   	pop    %rbx
    3494:	41 5c                	pop    %r12
    3496:	41 5d                	pop    %r13
    3498:	41 5e                	pop    %r14
    349a:	41 5f                	pop    %r15
    349c:	5d                   	pop    %rbp
    349d:	c3                   	retq   
    349e:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    34a1:	85 c0                	test   %eax,%eax
    34a3:	0f 84 9d 00 00 00    	je     3546 <ept_lookup_gpa.isra.4+0x136>
    34a9:	31 f6                	xor    %esi,%esi
    34ab:	bf 20 0a 00 00       	mov    $0xa20,%edi
    34b0:	e8 00 00 00 00       	callq  34b5 <ept_lookup_gpa.isra.4+0xa5>
			34b1: R_X86_64_PC32	__get_free_pages-0x4
    34b5:	48 85 c0             	test   %rax,%rax
    34b8:	48 89 c6             	mov    %rax,%rsi
    34bb:	0f 84 99 00 00 00    	je     355a <ept_lookup_gpa.isra.4+0x14a>
    34c1:	48 8d 78 08          	lea    0x8(%rax),%rdi
    34c5:	48 89 c1             	mov    %rax,%rcx
    34c8:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    34cf:	48 c7 80 f8 0f 00 00 	movq   $0x0,0xff8(%rax)
    34d6:	00 00 00 00 
    34da:	4c 89 e8             	mov    %r13,%rax
    34dd:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    34e1:	48 29 f9             	sub    %rdi,%rcx
    34e4:	81 c1 00 10 00 00    	add    $0x1000,%ecx
    34ea:	c1 e9 03             	shr    $0x3,%ecx
    34ed:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    34f0:	b8 00 00 00 80       	mov    $0x80000000,%eax
    34f5:	48 01 c6             	add    %rax,%rsi
    34f8:	72 7e                	jb     3578 <ept_lookup_gpa.isra.4+0x168>
    34fa:	48 c7 c7 00 00 00 80 	mov    $0xffffffff80000000,%rdi
    3501:	48 2b 3d 00 00 00 00 	sub    0x0(%rip),%rdi        # 3508 <ept_lookup_gpa.isra.4+0xf8>
			3504: R_X86_64_PC32	page_offset_base-0x4
    3508:	48 01 f7             	add    %rsi,%rdi
    350b:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    3512:	48 83 cf 07          	or     $0x7,%rdi
    3516:	49 89 3e             	mov    %rdi,(%r14)
    3519:	48 8b 35 00 00 00 00 	mov    0x0(%rip),%rsi        # 3520 <ept_lookup_gpa.isra.4+0x110>
			351c: R_X86_64_PC32	page_offset_base-0x4
    3520:	83 eb 01             	sub    $0x1,%ebx
    3523:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    352a:	44 39 e3             	cmp    %r12d,%ebx
    352d:	48 8d 04 37          	lea    (%rdi,%rsi,1),%rax
    3531:	0f 85 0c ff ff ff    	jne    3443 <ept_lookup_gpa.isra.4+0x33>
    3537:	8d 4c db 0c          	lea    0xc(%rbx,%rbx,8),%ecx
    353b:	49 d3 ef             	shr    %cl,%r15
    353e:	4c 89 f9             	mov    %r15,%rcx
    3541:	e9 36 ff ff ff       	jmpq   347c <ept_lookup_gpa.isra.4+0x6c>
    3546:	48 83 c4 10          	add    $0x10,%rsp
    354a:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    354f:	5b                   	pop    %rbx
    3550:	41 5c                	pop    %r12
    3552:	41 5d                	pop    %r13
    3554:	41 5e                	pop    %r14
    3556:	41 5f                	pop    %r15
    3558:	5d                   	pop    %rbp
    3559:	c3                   	retq   
    355a:	48 83 c4 10          	add    $0x10,%rsp
    355e:	b8 f4 ff ff ff       	mov    $0xfffffff4,%eax
    3563:	5b                   	pop    %rbx
    3564:	41 5c                	pop    %r12
    3566:	41 5d                	pop    %r13
    3568:	41 5e                	pop    %r14
    356a:	41 5f                	pop    %r15
    356c:	5d                   	pop    %rbp
    356d:	c3                   	retq   
    356e:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    3573:	e9 17 ff ff ff       	jmpq   348f <ept_lookup_gpa.isra.4+0x7f>
    3578:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 357f <ept_lookup_gpa.isra.4+0x16f>
			357b: R_X86_64_PC32	phys_base-0x4
    357f:	eb 87                	jmp    3508 <ept_lookup_gpa.isra.4+0xf8>
    3581:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3586:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    358d:	00 00 00 

0000000000003590 <hva_to_gpa.isra.5>:
hva_to_gpa.isra.5():
    3590:	e8 00 00 00 00       	callq  3595 <hva_to_gpa.isra.5+0x5>
			3591: R_X86_64_PC32	__fentry__-0x4
    3595:	0f b6 0d 00 00 00 00 	movzbl 0x0(%rip),%ecx        # 359c <hva_to_gpa.isra.5+0xc>
			3598: R_X86_64_PC32	boot_cpu_data+0x5
    359c:	b8 01 00 00 00       	mov    $0x1,%eax
    35a1:	48 d3 e0             	shl    %cl,%rax
    35a4:	48 85 ff             	test   %rdi,%rdi
    35a7:	0f 84 b4 00 00 00    	je     3661 <hva_to_gpa.isra.5+0xd1>
    35ad:	48 8b 97 30 01 00 00 	mov    0x130(%rdi),%rdx
    35b4:	49 89 c0             	mov    %rax,%r8
    35b7:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
    35bb:	48 81 c2 ff ff ff 3f 	add    $0x3fffffff,%rdx
    35c2:	48 81 e2 00 00 00 c0 	and    $0xffffffffc0000000,%rdx
    35c9:	48 81 ea 00 00 00 40 	sub    $0x40000000,%rdx
    35d0:	48 39 f2             	cmp    %rsi,%rdx
    35d3:	76 4b                	jbe    3620 <hva_to_gpa.isra.5+0x90>
    35d5:	48 81 c1 ff ff ff 3f 	add    $0x3fffffff,%rcx
    35dc:	48 b8 00 00 00 40 f0 	movabs $0xfffffff040000000,%rax
    35e3:	ff ff ff 
    35e6:	48 81 e1 00 00 00 c0 	and    $0xffffffffc0000000,%rcx
    35ed:	48 01 c1             	add    %rax,%rcx
    35f0:	48 39 f1             	cmp    %rsi,%rcx
    35f3:	77 4f                	ja     3644 <hva_to_gpa.isra.5+0xb4>
    35f5:	48 29 ce             	sub    %rcx,%rsi
    35f8:	48 ba ff ff ff bf 0f 	movabs $0xfbfffffff,%rdx
    35ff:	00 00 00 
    3602:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    3609:	48 39 d6             	cmp    %rdx,%rsi
    360c:	77 51                	ja     365f <hva_to_gpa.isra.5+0xcf>
    360e:	48 ba 00 00 00 00 f0 	movabs $0xfffffff000000000,%rdx
    3615:	ff ff ff 
    3618:	49 8d 04 10          	lea    (%r8,%rdx,1),%rax
    361c:	48 01 f0             	add    %rsi,%rax
    361f:	c3                   	retq   
    3620:	48 29 d6             	sub    %rdx,%rsi
    3623:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    362a:	48 89 f2             	mov    %rsi,%rdx
    362d:	48 89 c6             	mov    %rax,%rsi
    3630:	49 8d 84 10 00 00 00 	lea    -0x40000000(%r8,%rdx,1),%rax
    3637:	c0 
    3638:	48 81 fa 00 00 00 40 	cmp    $0x40000000,%rdx
    363f:	48 0f 43 c6          	cmovae %rsi,%rax
    3643:	c3                   	retq   
    3644:	48 b8 00 00 00 00 f0 	movabs $0xfffffff000000000,%rax
    364b:	ff ff ff 
    364e:	4c 01 c0             	add    %r8,%rax
    3651:	48 39 c6             	cmp    %rax,%rsi
    3654:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    365b:	48 0f 42 c6          	cmovb  %rsi,%rax
    365f:	f3 c3                	repz retq 
    3661:	55                   	push   %rbp
    3662:	48 89 e5             	mov    %rsp,%rbp
    3665:	0f 0b                	ud2    
    3667:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    366e:	00 00 

0000000000003670 <ept_check_page_accessed.constprop.7>:
ept_check_page_accessed.constprop.7():
    3670:	e8 00 00 00 00       	callq  3675 <ept_check_page_accessed.constprop.7+0x5>
			3671: R_X86_64_PC32	__fentry__-0x4
    3675:	55                   	push   %rbp
    3676:	48 89 e5             	mov    %rsp,%rbp
    3679:	41 55                	push   %r13
    367b:	41 54                	push   %r12
    367d:	53                   	push   %rbx
    367e:	49 89 fd             	mov    %rdi,%r13
    3681:	48 89 f7             	mov    %rsi,%rdi
    3684:	48 89 d6             	mov    %rdx,%rsi
    3687:	48 89 d3             	mov    %rdx,%rbx
    368a:	48 83 ec 10          	sub    $0x10,%rsp
    368e:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
    3695:	00 00 
    3697:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    369b:	31 c0                	xor    %eax,%eax
    369d:	e8 ee fe ff ff       	callq  3590 <hva_to_gpa.isra.5>
    36a2:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    36a6:	74 68                	je     3710 <ept_check_page_accessed.constprop.7+0xa0>
    36a8:	49 8d 5d 58          	lea    0x58(%r13),%rbx
    36ac:	49 89 c4             	mov    %rax,%r12
    36af:	48 89 df             	mov    %rbx,%rdi
    36b2:	e8 00 00 00 00       	callq  36b7 <ept_check_page_accessed.constprop.7+0x47>
			36b3: R_X86_64_PC32	_raw_spin_lock-0x4
    36b7:	49 8b 7d 60          	mov    0x60(%r13),%rdi
    36bb:	4c 8d 45 d8          	lea    -0x28(%rbp),%r8
    36bf:	31 c9                	xor    %ecx,%ecx
    36c1:	31 d2                	xor    %edx,%edx
    36c3:	4c 89 e6             	mov    %r12,%rsi
    36c6:	e8 45 fd ff ff       	callq  3410 <ept_lookup_gpa.isra.4>
    36cb:	85 c0                	test   %eax,%eax
    36cd:	75 33                	jne    3702 <ept_check_page_accessed.constprop.7+0x92>
    36cf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    36d3:	48 89 df             	mov    %rbx,%rdi
    36d6:	48 8b 10             	mov    (%rax),%rdx
    36d9:	81 e2 00 01 00 00    	and    $0x100,%edx
    36df:	ff 14 25 00 00 00 00 	callq  *0x0
			36e2: R_X86_64_32S	pv_ops+0x298
    36e6:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    36ea:	65 48 33 0c 25 28 00 	xor    %gs:0x28,%rcx
    36f1:	00 00 
    36f3:	89 d0                	mov    %edx,%eax
    36f5:	75 2c                	jne    3723 <ept_check_page_accessed.constprop.7+0xb3>
    36f7:	48 83 c4 10          	add    $0x10,%rsp
    36fb:	5b                   	pop    %rbx
    36fc:	41 5c                	pop    %r12
    36fe:	41 5d                	pop    %r13
    3700:	5d                   	pop    %rbp
    3701:	c3                   	retq   
    3702:	48 89 df             	mov    %rbx,%rdi
    3705:	ff 14 25 00 00 00 00 	callq  *0x0
			3708: R_X86_64_32S	pv_ops+0x298
    370c:	31 d2                	xor    %edx,%edx
    370e:	eb d6                	jmp    36e6 <ept_check_page_accessed.constprop.7+0x76>
    3710:	48 89 de             	mov    %rbx,%rsi
    3713:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3716: R_X86_64_32S	.rodata.str1.8+0x5d0
    371a:	e8 00 00 00 00       	callq  371f <ept_check_page_accessed.constprop.7+0xaf>
			371b: R_X86_64_PC32	printk-0x4
    371f:	31 d2                	xor    %edx,%edx
    3721:	eb c3                	jmp    36e6 <ept_check_page_accessed.constprop.7+0x76>
    3723:	e8 00 00 00 00       	callq  3728 <ept_check_page_accessed.constprop.7+0xb8>
			3724: R_X86_64_PC32	__stack_chk_fail-0x4
    3728:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    372f:	00 

0000000000003730 <ept_mmu_notifier_test_young>:
ept_mmu_notifier_test_young():
    3730:	e8 00 00 00 00       	callq  3735 <ept_mmu_notifier_test_young+0x5>
			3731: R_X86_64_PC32	__fentry__-0x4
    3735:	55                   	push   %rbp
    3736:	48 89 e5             	mov    %rsp,%rbp
    3739:	41 55                	push   %r13
    373b:	41 54                	push   %r12
    373d:	53                   	push   %rbx
    373e:	48 89 fb             	mov    %rdi,%rbx
    3741:	49 89 f5             	mov    %rsi,%r13
    3744:	49 89 d4             	mov    %rdx,%r12
    3747:	48 83 ec 10          	sub    $0x10,%rsp
    374b:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
    3752:	00 00 
    3754:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3758:	31 c0                	xor    %eax,%eax
    375a:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    375f:	80 7b 50 00          	cmpb   $0x0,0x50(%rbx)
    3763:	74 42                	je     37a7 <ept_mmu_notifier_test_young+0x77>
    3765:	48 8d 7b e0          	lea    -0x20(%rbx),%rdi
    3769:	4c 89 e2             	mov    %r12,%rdx
    376c:	4c 89 ee             	mov    %r13,%rsi
    376f:	e8 fc fe ff ff       	callq  3670 <ept_check_page_accessed.constprop.7>
    3774:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    3778:	65 48 33 0c 25 28 00 	xor    %gs:0x28,%rcx
    377f:	00 00 
    3781:	75 6d                	jne    37f0 <ept_mmu_notifier_test_young+0xc0>
    3783:	48 83 c4 10          	add    $0x10,%rsp
    3787:	5b                   	pop    %rbx
    3788:	41 5c                	pop    %r12
    378a:	41 5d                	pop    %r13
    378c:	5d                   	pop    %rbp
    378d:	c3                   	retq   
    378e:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			3791: R_X86_64_32S	.rodata.str1.1+0xe0
    3795:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3798: R_X86_64_32S	__verbose
    379c:	e8 00 00 00 00       	callq  37a1 <ept_mmu_notifier_test_young+0x71>
			379d: R_X86_64_PC32	__dynamic_pr_debug-0x4
    37a1:	80 7b 50 00          	cmpb   $0x0,0x50(%rbx)
    37a5:	75 be                	jne    3765 <ept_mmu_notifier_test_young+0x35>
    37a7:	4c 89 ef             	mov    %r13,%rdi
    37aa:	4c 89 e6             	mov    %r12,%rsi
    37ad:	e8 de fd ff ff       	callq  3590 <hva_to_gpa.isra.5>
    37b2:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    37b6:	49 89 c5             	mov    %rax,%r13
    37b9:	74 3a                	je     37f5 <ept_mmu_notifier_test_young+0xc5>
    37bb:	4c 8d 63 38          	lea    0x38(%rbx),%r12
    37bf:	4c 89 e7             	mov    %r12,%rdi
    37c2:	e8 00 00 00 00       	callq  37c7 <ept_mmu_notifier_test_young+0x97>
			37c3: R_X86_64_PC32	_raw_spin_lock-0x4
    37c7:	48 8b 7b 40          	mov    0x40(%rbx),%rdi
    37cb:	4c 8d 45 d8          	lea    -0x28(%rbp),%r8
    37cf:	31 d2                	xor    %edx,%edx
    37d1:	31 c9                	xor    %ecx,%ecx
    37d3:	4c 89 ee             	mov    %r13,%rsi
    37d6:	e8 35 fc ff ff       	callq  3410 <ept_lookup_gpa.isra.4>
    37db:	4c 89 e7             	mov    %r12,%rdi
    37de:	89 c2                	mov    %eax,%edx
    37e0:	ff 14 25 00 00 00 00 	callq  *0x0
			37e3: R_X86_64_32S	pv_ops+0x298
    37e7:	31 c0                	xor    %eax,%eax
    37e9:	85 d2                	test   %edx,%edx
    37eb:	0f 94 c0             	sete   %al
    37ee:	eb 84                	jmp    3774 <ept_mmu_notifier_test_young+0x44>
    37f0:	e8 00 00 00 00       	callq  37f5 <ept_mmu_notifier_test_young+0xc5>
			37f1: R_X86_64_PC32	__stack_chk_fail-0x4
    37f5:	4c 89 e6             	mov    %r12,%rsi
    37f8:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			37fb: R_X86_64_32S	.rodata.str1.8+0x5d0
    37ff:	e8 00 00 00 00       	callq  3804 <ept_mmu_notifier_test_young+0xd4>
			3800: R_X86_64_PC32	printk-0x4
    3804:	31 c0                	xor    %eax,%eax
    3806:	e9 69 ff ff ff       	jmpq   3774 <ept_mmu_notifier_test_young+0x44>
    380b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003810 <ept_mmu_notifier_release>:
ept_mmu_notifier_release():
    3810:	e8 00 00 00 00       	callq  3815 <ept_mmu_notifier_release+0x5>
			3811: R_X86_64_PC32	__fentry__-0x4
    3815:	55                   	push   %rbp
    3816:	48 89 e5             	mov    %rsp,%rbp
    3819:	5d                   	pop    %rbp
    381a:	c3                   	retq   
    381b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003820 <free_ept_page_lock>:
free_ept_page_lock():
    3820:	e8 00 00 00 00       	callq  3825 <free_ept_page_lock+0x5>
			3821: R_X86_64_PC32	__fentry__-0x4
    3825:	f7 c7 00 04 00 00    	test   $0x400,%edi
    382b:	75 63                	jne    3890 <free_ept_page_lock+0x70>
    382d:	55                   	push   %rbp
    382e:	48 89 e5             	mov    %rsp,%rbp
    3831:	53                   	push   %rbx
    3832:	48 89 fb             	mov    %rdi,%rbx
    3835:	48 c1 eb 0c          	shr    $0xc,%rbx
    3839:	48 c1 e3 06          	shl    $0x6,%rbx
    383d:	48 03 1d 00 00 00 00 	add    0x0(%rip),%rbx        # 3844 <free_ept_page_lock+0x24>
			3840: R_X86_64_PC32	vmemmap_base-0x4
    3844:	83 e7 02             	and    $0x2,%edi
    3847:	75 49                	jne    3892 <free_ept_page_lock+0x72>
    3849:	48 8b 43 08          	mov    0x8(%rbx),%rax
    384d:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    3851:	a8 01                	test   $0x1,%al
    3853:	48 0f 45 da          	cmovne %rdx,%rbx
    3857:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    385c:	f0 ff 4b 34          	lock decl 0x34(%rbx)
    3860:	74 3a                	je     389c <free_ept_page_lock+0x7c>
    3862:	5b                   	pop    %rbx
    3863:	5d                   	pop    %rbp
    3864:	c3                   	retq   
    3865:	48 8b 03             	mov    (%rbx),%rax
    3868:	48 c1 e8 33          	shr    $0x33,%rax
    386c:	83 e0 07             	and    $0x7,%eax
    386f:	83 f8 04             	cmp    $0x4,%eax
    3872:	75 e8                	jne    385c <free_ept_page_lock+0x3c>
    3874:	48 8b 43 08          	mov    0x8(%rbx),%rax
    3878:	8b 80 d0 00 00 00    	mov    0xd0(%rax),%eax
    387e:	83 e8 01             	sub    $0x1,%eax
    3881:	83 f8 01             	cmp    $0x1,%eax
    3884:	77 d6                	ja     385c <free_ept_page_lock+0x3c>
    3886:	48 89 df             	mov    %rbx,%rdi
    3889:	e8 00 00 00 00       	callq  388e <free_ept_page_lock+0x6e>
			388a: R_X86_64_PC32	__put_devmap_managed_page-0x4
    388e:	eb d2                	jmp    3862 <free_ept_page_lock+0x42>
    3890:	f3 c3                	repz retq 
    3892:	48 89 df             	mov    %rbx,%rdi
    3895:	e8 00 00 00 00       	callq  389a <free_ept_page_lock+0x7a>
			3896: R_X86_64_PC32	set_page_dirty_lock-0x4
    389a:	eb ad                	jmp    3849 <free_ept_page_lock+0x29>
    389c:	48 89 df             	mov    %rbx,%rdi
    389f:	e8 00 00 00 00       	callq  38a4 <free_ept_page_lock+0x84>
			38a0: R_X86_64_PC32	__put_page-0x4
    38a4:	5b                   	pop    %rbx
    38a5:	5d                   	pop    %rbp
    38a6:	c3                   	retq   
    38a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    38ae:	00 00 

00000000000038b0 <vmx_free_ept>:
vmx_free_ept():
    38b0:	e8 00 00 00 00       	callq  38b5 <vmx_free_ept+0x5>
			38b1: R_X86_64_PC32	__fentry__-0x4
    38b5:	55                   	push   %rbp
    38b6:	48 89 e5             	mov    %rsp,%rbp
    38b9:	41 57                	push   %r15
    38bb:	41 56                	push   %r14
    38bd:	41 55                	push   %r13
    38bf:	41 54                	push   %r12
    38c1:	53                   	push   %rbx
    38c2:	48 83 ec 38          	sub    $0x38,%rsp
    38c6:	4c 8b 2d 00 00 00 00 	mov    0x0(%rip),%r13        # 38cd <vmx_free_ept+0x1d>
			38c9: R_X86_64_PC32	page_offset_base-0x4
    38cd:	49 8d 44 3d 00       	lea    0x0(%r13,%rdi,1),%rax
    38d2:	48 8d 90 00 10 00 00 	lea    0x1000(%rax),%rdx
    38d9:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    38dd:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    38e1:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    38e5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    38e9:	48 8b 00             	mov    (%rax),%rax
    38ec:	48 89 c2             	mov    %rax,%rdx
    38ef:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    38f6:	a8 07                	test   $0x7,%al
    38f8:	4a 8d 0c 2a          	lea    (%rdx,%r13,1),%rcx
    38fc:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
    3900:	0f 84 ee 00 00 00    	je     39f4 <vmx_free_ept+0x144>
    3906:	48 89 c8             	mov    %rcx,%rax
    3909:	48 8d 89 00 10 00 00 	lea    0x1000(%rcx),%rcx
    3910:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    3914:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
    3918:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    391c:	48 8b 38             	mov    (%rax),%rdi
    391f:	40 f6 c7 07          	test   $0x7,%dil
    3923:	0f 84 91 00 00 00    	je     39ba <vmx_free_ept+0x10a>
    3929:	40 f6 c7 80          	test   $0x80,%dil
    392d:	0f 85 a2 00 00 00    	jne    39d5 <vmx_free_ept+0x125>
    3933:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    393a:	4e 8d 24 2f          	lea    (%rdi,%r13,1),%r12
    393e:	4d 8d b4 24 00 10 00 	lea    0x1000(%r12),%r14
    3945:	00 
    3946:	4c 89 65 b0          	mov    %r12,-0x50(%rbp)
    394a:	49 8b 3c 24          	mov    (%r12),%rdi
    394e:	40 f6 c7 07          	test   $0x7,%dil
    3952:	74 3b                	je     398f <vmx_free_ept+0xdf>
    3954:	40 f6 c7 80          	test   $0x80,%dil
    3958:	75 47                	jne    39a1 <vmx_free_ept+0xf1>
    395a:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    3961:	49 01 fd             	add    %rdi,%r13
    3964:	49 8d 9d 00 10 00 00 	lea    0x1000(%r13),%rbx
    396b:	4d 89 ef             	mov    %r13,%r15
    396e:	49 8b 3f             	mov    (%r15),%rdi
    3971:	40 f6 c7 07          	test   $0x7,%dil
    3975:	74 05                	je     397c <vmx_free_ept+0xcc>
    3977:	e8 a4 fe ff ff       	callq  3820 <free_ept_page_lock>
    397c:	49 83 c7 08          	add    $0x8,%r15
    3980:	4c 39 fb             	cmp    %r15,%rbx
    3983:	75 e9                	jne    396e <vmx_free_ept+0xbe>
    3985:	31 f6                	xor    %esi,%esi
    3987:	4c 89 ef             	mov    %r13,%rdi
    398a:	e8 00 00 00 00       	callq  398f <vmx_free_ept+0xdf>
			398b: R_X86_64_PC32	free_pages-0x4
    398f:	49 83 c4 08          	add    $0x8,%r12
    3993:	4d 39 e6             	cmp    %r12,%r14
    3996:	74 17                	je     39af <vmx_free_ept+0xff>
    3998:	4c 8b 2d 00 00 00 00 	mov    0x0(%rip),%r13        # 399f <vmx_free_ept+0xef>
			399b: R_X86_64_PC32	page_offset_base-0x4
    399f:	eb a9                	jmp    394a <vmx_free_ept+0x9a>
    39a1:	49 83 c4 08          	add    $0x8,%r12
    39a5:	e8 76 fe ff ff       	callq  3820 <free_ept_page_lock>
    39aa:	4d 39 e6             	cmp    %r12,%r14
    39ad:	75 e9                	jne    3998 <vmx_free_ept+0xe8>
    39af:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
    39b3:	31 f6                	xor    %esi,%esi
    39b5:	e8 00 00 00 00       	callq  39ba <vmx_free_ept+0x10a>
			39b6: R_X86_64_PC32	free_pages-0x4
    39ba:	48 83 45 c8 08       	addq   $0x8,-0x38(%rbp)
    39bf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    39c3:	48 39 45 a0          	cmp    %rax,-0x60(%rbp)
    39c7:	74 20                	je     39e9 <vmx_free_ept+0x139>
    39c9:	4c 8b 2d 00 00 00 00 	mov    0x0(%rip),%r13        # 39d0 <vmx_free_ept+0x120>
			39cc: R_X86_64_PC32	page_offset_base-0x4
    39d0:	e9 43 ff ff ff       	jmpq   3918 <vmx_free_ept+0x68>
    39d5:	e8 46 fe ff ff       	callq  3820 <free_ept_page_lock>
    39da:	48 83 45 c8 08       	addq   $0x8,-0x38(%rbp)
    39df:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    39e3:	48 39 45 a0          	cmp    %rax,-0x60(%rbp)
    39e7:	75 e0                	jne    39c9 <vmx_free_ept+0x119>
    39e9:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
    39ed:	31 f6                	xor    %esi,%esi
    39ef:	e8 00 00 00 00       	callq  39f4 <vmx_free_ept+0x144>
			39f0: R_X86_64_PC32	free_pages-0x4
    39f4:	48 83 45 d0 08       	addq   $0x8,-0x30(%rbp)
    39f9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    39fd:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)
    3a01:	74 0c                	je     3a0f <vmx_free_ept+0x15f>
    3a03:	4c 8b 2d 00 00 00 00 	mov    0x0(%rip),%r13        # 3a0a <vmx_free_ept+0x15a>
			3a06: R_X86_64_PC32	page_offset_base-0x4
    3a0a:	e9 d6 fe ff ff       	jmpq   38e5 <vmx_free_ept+0x35>
    3a0f:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
    3a13:	31 f6                	xor    %esi,%esi
    3a15:	e8 00 00 00 00       	callq  3a1a <vmx_free_ept+0x16a>
			3a16: R_X86_64_PC32	free_pages-0x4
    3a1a:	48 83 c4 38          	add    $0x38,%rsp
    3a1e:	5b                   	pop    %rbx
    3a1f:	41 5c                	pop    %r12
    3a21:	41 5d                	pop    %r13
    3a23:	41 5e                	pop    %r14
    3a25:	41 5f                	pop    %r15
    3a27:	5d                   	pop    %rbp
    3a28:	c3                   	retq   
    3a29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003a30 <free_ept_page>:
free_ept_page():
    3a30:	e8 00 00 00 00       	callq  3a35 <free_ept_page+0x5>
			3a31: R_X86_64_PC32	__fentry__-0x4
    3a35:	f7 c7 00 04 00 00    	test   $0x400,%edi
    3a3b:	75 63                	jne    3aa0 <free_ept_page+0x70>
    3a3d:	55                   	push   %rbp
    3a3e:	48 89 e5             	mov    %rsp,%rbp
    3a41:	53                   	push   %rbx
    3a42:	48 89 fb             	mov    %rdi,%rbx
    3a45:	48 c1 eb 0c          	shr    $0xc,%rbx
    3a49:	48 c1 e3 06          	shl    $0x6,%rbx
    3a4d:	48 03 1d 00 00 00 00 	add    0x0(%rip),%rbx        # 3a54 <free_ept_page+0x24>
			3a50: R_X86_64_PC32	vmemmap_base-0x4
    3a54:	83 e7 02             	and    $0x2,%edi
    3a57:	75 49                	jne    3aa2 <free_ept_page+0x72>
    3a59:	48 8b 43 08          	mov    0x8(%rbx),%rax
    3a5d:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    3a61:	a8 01                	test   $0x1,%al
    3a63:	48 0f 45 da          	cmovne %rdx,%rbx
    3a67:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3a6c:	f0 ff 4b 34          	lock decl 0x34(%rbx)
    3a70:	74 3a                	je     3aac <free_ept_page+0x7c>
    3a72:	5b                   	pop    %rbx
    3a73:	5d                   	pop    %rbp
    3a74:	c3                   	retq   
    3a75:	48 8b 03             	mov    (%rbx),%rax
    3a78:	48 c1 e8 33          	shr    $0x33,%rax
    3a7c:	83 e0 07             	and    $0x7,%eax
    3a7f:	83 f8 04             	cmp    $0x4,%eax
    3a82:	75 e8                	jne    3a6c <free_ept_page+0x3c>
    3a84:	48 8b 43 08          	mov    0x8(%rbx),%rax
    3a88:	8b 80 d0 00 00 00    	mov    0xd0(%rax),%eax
    3a8e:	83 e8 01             	sub    $0x1,%eax
    3a91:	83 f8 01             	cmp    $0x1,%eax
    3a94:	77 d6                	ja     3a6c <free_ept_page+0x3c>
    3a96:	48 89 df             	mov    %rbx,%rdi
    3a99:	e8 00 00 00 00       	callq  3a9e <free_ept_page+0x6e>
			3a9a: R_X86_64_PC32	__put_devmap_managed_page-0x4
    3a9e:	eb d2                	jmp    3a72 <free_ept_page+0x42>
    3aa0:	f3 c3                	repz retq 
    3aa2:	48 89 df             	mov    %rbx,%rdi
    3aa5:	e8 00 00 00 00       	callq  3aaa <free_ept_page+0x7a>
			3aa6: R_X86_64_PC32	set_page_dirty-0x4
    3aaa:	eb ad                	jmp    3a59 <free_ept_page+0x29>
    3aac:	48 89 df             	mov    %rbx,%rdi
    3aaf:	e8 00 00 00 00       	callq  3ab4 <free_ept_page+0x84>
			3ab0: R_X86_64_PC32	__put_page-0x4
    3ab4:	5b                   	pop    %rbx
    3ab5:	5d                   	pop    %rbp
    3ab6:	c3                   	retq   
    3ab7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3abe:	00 00 

0000000000003ac0 <ept_mmu_notifier_invalidate_range_start>:
ept_mmu_notifier_invalidate_range_start():
    3ac0:	e8 00 00 00 00       	callq  3ac5 <ept_mmu_notifier_invalidate_range_start+0x5>
			3ac1: R_X86_64_PC32	__fentry__-0x4
    3ac5:	55                   	push   %rbp
    3ac6:	48 89 e5             	mov    %rsp,%rbp
    3ac9:	41 57                	push   %r15
    3acb:	41 56                	push   %r14
    3acd:	41 55                	push   %r13
    3acf:	41 54                	push   %r12
    3ad1:	49 89 fe             	mov    %rdi,%r14
    3ad4:	53                   	push   %rbx
    3ad5:	49 89 f4             	mov    %rsi,%r12
    3ad8:	48 83 ec 18          	sub    $0x18,%rsp
    3adc:	48 8b 5e 10          	mov    0x10(%rsi),%rbx
    3ae0:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
    3ae7:	00 00 
    3ae9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    3aed:	31 c0                	xor    %eax,%eax
    3aef:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3af4:	49 8d 46 38          	lea    0x38(%r14),%rax
    3af8:	45 31 ff             	xor    %r15d,%r15d
    3afb:	48 89 c7             	mov    %rax,%rdi
    3afe:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    3b02:	e8 00 00 00 00       	callq  3b07 <ept_mmu_notifier_invalidate_range_start+0x47>
			3b03: R_X86_64_PC32	_raw_spin_lock-0x4
    3b07:	49 39 5c 24 18       	cmp    %rbx,0x18(%r12)
    3b0c:	76 67                	jbe    3b75 <ept_mmu_notifier_invalidate_range_start+0xb5>
    3b0e:	4d 8b 6c 24 08       	mov    0x8(%r12),%r13
    3b13:	48 89 de             	mov    %rbx,%rsi
    3b16:	4c 89 ef             	mov    %r13,%rdi
    3b19:	e8 72 fa ff ff       	callq  3590 <hva_to_gpa.isra.5>
    3b1e:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    3b22:	0f 84 8b 00 00 00    	je     3bb3 <ept_mmu_notifier_invalidate_range_start+0xf3>
    3b28:	49 8b 7e 40          	mov    0x40(%r14),%rdi
    3b2c:	4c 8d 45 c8          	lea    -0x38(%rbp),%r8
    3b30:	31 c9                	xor    %ecx,%ecx
    3b32:	31 d2                	xor    %edx,%edx
    3b34:	48 89 c6             	mov    %rax,%rsi
    3b37:	e8 d4 f8 ff ff       	callq  3410 <ept_lookup_gpa.isra.4>
    3b3c:	85 c0                	test   %eax,%eax
    3b3e:	41 89 c5             	mov    %eax,%r13d
    3b41:	0f 85 98 00 00 00    	jne    3bdf <ept_mmu_notifier_invalidate_range_start+0x11f>
    3b47:	4c 8b 7d c8          	mov    -0x38(%rbp),%r15
    3b4b:	49 8b 3f             	mov    (%r15),%rdi
    3b4e:	40 f6 c7 80          	test   $0x80,%dil
    3b52:	0f 85 93 00 00 00    	jne    3beb <ept_mmu_notifier_invalidate_range_start+0x12b>
    3b58:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
    3b5f:	48 85 ff             	test   %rdi,%rdi
    3b62:	0f 85 8a 00 00 00    	jne    3bf2 <ept_mmu_notifier_invalidate_range_start+0x132>
    3b68:	49 39 5c 24 18       	cmp    %rbx,0x18(%r12)
    3b6d:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    3b73:	77 99                	ja     3b0e <ept_mmu_notifier_invalidate_range_start+0x4e>
    3b75:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
    3b79:	ff 14 25 00 00 00 00 	callq  *0x0
			3b7c: R_X86_64_32S	pv_ops+0x298
    3b80:	45 84 ff             	test   %r15b,%r15b
    3b83:	74 09                	je     3b8e <ept_mmu_notifier_invalidate_range_start+0xce>
    3b85:	49 8d 7e e0          	lea    -0x20(%r14),%rdi
    3b89:	e8 00 00 00 00       	callq  3b8e <ept_mmu_notifier_invalidate_range_start+0xce>
			3b8a: R_X86_64_PC32	vmx_ept_sync_vcpu-0x4
    3b8e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    3b92:	65 48 33 14 25 28 00 	xor    %gs:0x28,%rdx
    3b99:	00 00 
    3b9b:	44 89 e8             	mov    %r13d,%eax
    3b9e:	0f 85 84 00 00 00    	jne    3c28 <ept_mmu_notifier_invalidate_range_start+0x168>
    3ba4:	48 83 c4 18          	add    $0x18,%rsp
    3ba8:	5b                   	pop    %rbx
    3ba9:	41 5c                	pop    %r12
    3bab:	41 5d                	pop    %r13
    3bad:	41 5e                	pop    %r14
    3baf:	41 5f                	pop    %r15
    3bb1:	5d                   	pop    %rbp
    3bb2:	c3                   	retq   
    3bb3:	48 89 de             	mov    %rbx,%rsi
    3bb6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3bb9: R_X86_64_32S	.rodata.str1.8+0x620
    3bbd:	e8 00 00 00 00       	callq  3bc2 <ept_mmu_notifier_invalidate_range_start+0x102>
			3bbe: R_X86_64_PC32	printk-0x4
    3bc2:	49 8b 95 30 01 00 00 	mov    0x130(%r13),%rdx
    3bc9:	49 8b 75 20          	mov    0x20(%r13),%rsi
    3bcd:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3bd0: R_X86_64_32S	.rodata.str1.8+0x640
    3bd4:	41 bd ea ff ff ff    	mov    $0xffffffea,%r13d
    3bda:	e8 00 00 00 00       	callq  3bdf <ept_mmu_notifier_invalidate_range_start+0x11f>
			3bdb: R_X86_64_PC32	printk-0x4
    3bdf:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
    3be6:	e9 1c ff ff ff       	jmpq   3b07 <ept_mmu_notifier_invalidate_range_start+0x47>
    3beb:	48 81 c3 00 00 20 00 	add    $0x200000,%rbx
    3bf2:	e8 39 fe ff ff       	callq  3a30 <free_ept_page>
    3bf7:	49 c7 07 00 00 00 00 	movq   $0x0,(%r15)
    3bfe:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    3c04:	e9 fe fe ff ff       	jmpq   3b07 <ept_mmu_notifier_invalidate_range_start+0x47>
    3c09:	48 8b 4e 18          	mov    0x18(%rsi),%rcx
    3c0d:	48 89 da             	mov    %rbx,%rdx
    3c10:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			3c13: R_X86_64_32S	.rodata.str1.8+0x5f0
    3c17:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3c1a: R_X86_64_32S	__verbose+0xa8
    3c1e:	e8 00 00 00 00       	callq  3c23 <ept_mmu_notifier_invalidate_range_start+0x163>
			3c1f: R_X86_64_PC32	__dynamic_pr_debug-0x4
    3c23:	e9 cc fe ff ff       	jmpq   3af4 <ept_mmu_notifier_invalidate_range_start+0x34>
    3c28:	e8 00 00 00 00       	callq  3c2d <ept_mmu_notifier_invalidate_range_start+0x16d>
			3c29: R_X86_64_PC32	__stack_chk_fail-0x4
    3c2d:	0f 1f 00             	nopl   (%rax)

0000000000003c30 <ept_invalidate_page>:
ept_invalidate_page():
    3c30:	e8 00 00 00 00       	callq  3c35 <ept_invalidate_page+0x5>
			3c31: R_X86_64_PC32	__fentry__-0x4
    3c35:	55                   	push   %rbp
    3c36:	48 89 e5             	mov    %rsp,%rbp
    3c39:	41 57                	push   %r15
    3c3b:	41 56                	push   %r14
    3c3d:	41 55                	push   %r13
    3c3f:	41 54                	push   %r12
    3c41:	49 89 fe             	mov    %rdi,%r14
    3c44:	53                   	push   %rbx
    3c45:	48 89 f7             	mov    %rsi,%rdi
    3c48:	48 89 d6             	mov    %rdx,%rsi
    3c4b:	48 89 d3             	mov    %rdx,%rbx
    3c4e:	48 83 ec 10          	sub    $0x10,%rsp
    3c52:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
    3c59:	00 00 
    3c5b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    3c5f:	31 c0                	xor    %eax,%eax
    3c61:	e8 2a f9 ff ff       	callq  3590 <hva_to_gpa.isra.5>
    3c66:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    3c6a:	0f 84 9b 00 00 00    	je     3d0b <ept_invalidate_page+0xdb>
    3c70:	49 8d 5e 58          	lea    0x58(%r14),%rbx
    3c74:	49 89 c5             	mov    %rax,%r13
    3c77:	48 89 df             	mov    %rbx,%rdi
    3c7a:	e8 00 00 00 00       	callq  3c7f <ept_invalidate_page+0x4f>
			3c7b: R_X86_64_PC32	_raw_spin_lock-0x4
    3c7f:	49 8b 7e 60          	mov    0x60(%r14),%rdi
    3c83:	4c 8d 45 c8          	lea    -0x38(%rbp),%r8
    3c87:	31 c9                	xor    %ecx,%ecx
    3c89:	31 d2                	xor    %edx,%edx
    3c8b:	4c 89 ee             	mov    %r13,%rsi
    3c8e:	e8 7d f7 ff ff       	callq  3410 <ept_lookup_gpa.isra.4>
    3c93:	85 c0                	test   %eax,%eax
    3c95:	41 89 c4             	mov    %eax,%r12d
    3c98:	75 3c                	jne    3cd6 <ept_invalidate_page+0xa6>
    3c9a:	4c 8b 7d c8          	mov    -0x38(%rbp),%r15
    3c9e:	49 8b 3f             	mov    (%r15),%rdi
    3ca1:	48 85 ff             	test   %rdi,%rdi
    3ca4:	75 4c                	jne    3cf2 <ept_invalidate_page+0xc2>
    3ca6:	48 89 df             	mov    %rbx,%rdi
    3ca9:	ff 14 25 00 00 00 00 	callq  *0x0
			3cac: R_X86_64_32S	pv_ops+0x298
    3cb0:	45 85 e4             	test   %r12d,%r12d
    3cb3:	75 30                	jne    3ce5 <ept_invalidate_page+0xb5>
    3cb5:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    3cb9:	65 48 33 0c 25 28 00 	xor    %gs:0x28,%rcx
    3cc0:	00 00 
    3cc2:	44 89 e0             	mov    %r12d,%eax
    3cc5:	75 3f                	jne    3d06 <ept_invalidate_page+0xd6>
    3cc7:	48 83 c4 10          	add    $0x10,%rsp
    3ccb:	5b                   	pop    %rbx
    3ccc:	41 5c                	pop    %r12
    3cce:	41 5d                	pop    %r13
    3cd0:	41 5e                	pop    %r14
    3cd2:	41 5f                	pop    %r15
    3cd4:	5d                   	pop    %rbp
    3cd5:	c3                   	retq   
    3cd6:	48 89 df             	mov    %rbx,%rdi
    3cd9:	ff 14 25 00 00 00 00 	callq  *0x0
			3cdc: R_X86_64_32S	pv_ops+0x298
    3ce0:	45 31 e4             	xor    %r12d,%r12d
    3ce3:	eb d0                	jmp    3cb5 <ept_invalidate_page+0x85>
    3ce5:	4c 89 ee             	mov    %r13,%rsi
    3ce8:	4c 89 f7             	mov    %r14,%rdi
    3ceb:	e8 00 00 00 00       	callq  3cf0 <ept_invalidate_page+0xc0>
			3cec: R_X86_64_PC32	vmx_ept_sync_individual_addr-0x4
    3cf0:	eb c3                	jmp    3cb5 <ept_invalidate_page+0x85>
    3cf2:	e8 39 fd ff ff       	callq  3a30 <free_ept_page>
    3cf7:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    3cfd:	49 c7 07 00 00 00 00 	movq   $0x0,(%r15)
    3d04:	eb a0                	jmp    3ca6 <ept_invalidate_page+0x76>
    3d06:	e8 00 00 00 00       	callq  3d0b <ept_invalidate_page+0xdb>
			3d07: R_X86_64_PC32	__stack_chk_fail-0x4
    3d0b:	48 89 de             	mov    %rbx,%rsi
    3d0e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3d11: R_X86_64_32S	.rodata.str1.8+0x5d0
    3d15:	45 31 e4             	xor    %r12d,%r12d
    3d18:	e8 00 00 00 00       	callq  3d1d <ept_invalidate_page+0xed>
			3d19: R_X86_64_PC32	printk-0x4
    3d1d:	eb 96                	jmp    3cb5 <ept_invalidate_page+0x85>
    3d1f:	90                   	nop

0000000000003d20 <ept_mmu_notifier_change_pte>:
ept_mmu_notifier_change_pte():
    3d20:	e8 00 00 00 00       	callq  3d25 <ept_mmu_notifier_change_pte+0x5>
			3d21: R_X86_64_PC32	__fentry__-0x4
    3d25:	55                   	push   %rbp
    3d26:	48 89 e5             	mov    %rsp,%rbp
    3d29:	41 55                	push   %r13
    3d2b:	41 54                	push   %r12
    3d2d:	49 89 f5             	mov    %rsi,%r13
    3d30:	53                   	push   %rbx
    3d31:	49 89 d4             	mov    %rdx,%r12
    3d34:	48 8d 5f e0          	lea    -0x20(%rdi),%rbx
    3d38:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3d3d:	4c 89 e2             	mov    %r12,%rdx
    3d40:	4c 89 ee             	mov    %r13,%rsi
    3d43:	48 89 df             	mov    %rbx,%rdi
    3d46:	e8 e5 fe ff ff       	callq  3c30 <ept_invalidate_page>
    3d4b:	5b                   	pop    %rbx
    3d4c:	41 5c                	pop    %r12
    3d4e:	41 5d                	pop    %r13
    3d50:	5d                   	pop    %rbp
    3d51:	c3                   	retq   
    3d52:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 3d59 <ept_mmu_notifier_change_pte+0x39>
			3d55: R_X86_64_PC32	physical_mask-0x4
    3d59:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			3d5c: R_X86_64_32S	.rodata.str1.8+0x668
    3d60:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3d63: R_X86_64_32S	__verbose+0x70
    3d67:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    3d6d:	48 f7 d0             	not    %rax
    3d70:	48 21 c1             	and    %rax,%rcx
    3d73:	e8 00 00 00 00       	callq  3d78 <ept_mmu_notifier_change_pte+0x58>
			3d74: R_X86_64_PC32	__dynamic_pr_debug-0x4
    3d78:	eb c3                	jmp    3d3d <ept_mmu_notifier_change_pte+0x1d>
    3d7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000003d80 <ept_mmu_notifier_clear_flush_young>:
ept_mmu_notifier_clear_flush_young():
    3d80:	e8 00 00 00 00       	callq  3d85 <ept_mmu_notifier_clear_flush_young+0x5>
			3d81: R_X86_64_PC32	__fentry__-0x4
    3d85:	55                   	push   %rbp
    3d86:	48 89 e5             	mov    %rsp,%rbp
    3d89:	41 57                	push   %r15
    3d8b:	41 56                	push   %r14
    3d8d:	49 89 f7             	mov    %rsi,%r15
    3d90:	41 55                	push   %r13
    3d92:	4c 8d 77 e0          	lea    -0x20(%rdi),%r14
    3d96:	41 54                	push   %r12
    3d98:	49 89 cd             	mov    %rcx,%r13
    3d9b:	53                   	push   %rbx
    3d9c:	49 89 fc             	mov    %rdi,%r12
    3d9f:	48 89 d3             	mov    %rdx,%rbx
    3da2:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3da7:	41 80 7c 24 50 00    	cmpb   $0x0,0x50(%r12)
    3dad:	41 bc 00 00 00 00    	mov    $0x0,%r12d
    3db3:	74 30                	je     3de5 <ept_mmu_notifier_clear_flush_young+0x65>
    3db5:	4c 39 eb             	cmp    %r13,%rbx
    3db8:	73 1d                	jae    3dd7 <ept_mmu_notifier_clear_flush_young+0x57>
    3dba:	48 89 da             	mov    %rbx,%rdx
    3dbd:	4c 89 fe             	mov    %r15,%rsi
    3dc0:	4c 89 f7             	mov    %r14,%rdi
    3dc3:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
    3dca:	e8 a1 f8 ff ff       	callq  3670 <ept_check_page_accessed.constprop.7>
    3dcf:	41 09 c4             	or     %eax,%r12d
    3dd2:	49 39 dd             	cmp    %rbx,%r13
    3dd5:	77 e3                	ja     3dba <ept_mmu_notifier_clear_flush_young+0x3a>
    3dd7:	5b                   	pop    %rbx
    3dd8:	44 89 e0             	mov    %r12d,%eax
    3ddb:	41 5c                	pop    %r12
    3ddd:	41 5d                	pop    %r13
    3ddf:	41 5e                	pop    %r14
    3de1:	41 5f                	pop    %r15
    3de3:	5d                   	pop    %rbp
    3de4:	c3                   	retq   
    3de5:	4c 39 eb             	cmp    %r13,%rbx
    3de8:	73 ed                	jae    3dd7 <ept_mmu_notifier_clear_flush_young+0x57>
    3dea:	48 89 da             	mov    %rbx,%rdx
    3ded:	4c 89 fe             	mov    %r15,%rsi
    3df0:	4c 89 f7             	mov    %r14,%rdi
    3df3:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
    3dfa:	e8 31 fe ff ff       	callq  3c30 <ept_invalidate_page>
    3dff:	41 09 c4             	or     %eax,%r12d
    3e02:	49 39 dd             	cmp    %rbx,%r13
    3e05:	77 e3                	ja     3dea <ept_mmu_notifier_clear_flush_young+0x6a>
    3e07:	eb ce                	jmp    3dd7 <ept_mmu_notifier_clear_flush_young+0x57>
    3e09:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			3e0c: R_X86_64_32S	.rodata.str1.8+0x690
    3e10:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3e13: R_X86_64_32S	__verbose+0x38
    3e17:	e8 00 00 00 00       	callq  3e1c <ept_mmu_notifier_clear_flush_young+0x9c>
			3e18: R_X86_64_PC32	__dynamic_pr_debug-0x4
    3e1c:	eb 89                	jmp    3da7 <ept_mmu_notifier_clear_flush_young+0x27>
    3e1e:	66 90                	xchg   %ax,%ax

0000000000003e20 <vmx_do_ept_fault>:
vmx_do_ept_fault():
    3e20:	e8 00 00 00 00       	callq  3e25 <vmx_do_ept_fault+0x5>
			3e21: R_X86_64_PC32	__fentry__-0x4
    3e25:	55                   	push   %rbp
    3e26:	41 89 c9             	mov    %ecx,%r9d
    3e29:	48 89 e5             	mov    %rsp,%rbp
    3e2c:	41 57                	push   %r15
    3e2e:	41 56                	push   %r14
    3e30:	41 55                	push   %r13
    3e32:	41 54                	push   %r12
    3e34:	49 89 f4             	mov    %rsi,%r12
    3e37:	53                   	push   %rbx
    3e38:	49 89 ff             	mov    %rdi,%r15
    3e3b:	65 48 8b 34 25 00 00 	mov    %gs:0x0,%rsi
    3e42:	00 00 
			3e40: R_X86_64_32S	current_task
    3e44:	48 83 ec 58          	sub    $0x58,%rsp
    3e48:	0f b6 0d 00 00 00 00 	movzbl 0x0(%rip),%ecx        # 3e4f <vmx_do_ept_fault+0x2f>
			3e4b: R_X86_64_PC32	boot_cpu_data+0x5
    3e4f:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
    3e56:	00 00 
    3e58:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    3e5c:	31 c0                	xor    %eax,%eax
    3e5e:	b8 01 00 00 00       	mov    $0x1,%eax
    3e63:	48 d3 e0             	shl    %cl,%rax
    3e66:	48 b9 00 00 00 00 f0 	movabs $0xfffffff000000000,%rcx
    3e6d:	ff ff ff 
    3e70:	48 01 c1             	add    %rax,%rcx
    3e73:	49 39 cc             	cmp    %rcx,%r12
    3e76:	0f 82 af 01 00 00    	jb     402b <vmx_do_ept_fault+0x20b>
    3e7c:	48 8d 88 00 00 00 c0 	lea    -0x40000000(%rax),%rcx
    3e83:	48 8b b6 18 08 00 00 	mov    0x818(%rsi),%rsi
    3e8a:	49 39 cc             	cmp    %rcx,%r12
    3e8d:	0f 82 73 01 00 00    	jb     4006 <vmx_do_ept_fault+0x1e6>
    3e93:	49 39 c4             	cmp    %rax,%r12
    3e96:	0f 83 a9 03 00 00    	jae    4245 <vmx_do_ept_fault+0x425>
    3e9c:	48 8b 9e 30 01 00 00 	mov    0x130(%rsi),%rbx
    3ea3:	4c 89 e6             	mov    %r12,%rsi
    3ea6:	48 29 c6             	sub    %rax,%rsi
    3ea9:	48 81 c3 ff ff ff 3f 	add    $0x3fffffff,%rbx
    3eb0:	48 81 e3 00 00 00 c0 	and    $0xffffffffc0000000,%rbx
    3eb7:	48 01 f3             	add    %rsi,%rbx
    3eba:	45 89 cd             	mov    %r9d,%r13d
    3ebd:	41 d1 fd             	sar    %r13d
    3ec0:	41 83 e5 01          	and    $0x1,%r13d
    3ec4:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    3ec8:	44 89 6d b0          	mov    %r13d,-0x50(%rbp)
    3ecc:	0f 84 73 03 00 00    	je     4245 <vmx_do_ept_fault+0x425>
    3ed2:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3ed7:	8b 55 b0             	mov    -0x50(%rbp),%edx
    3eda:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
    3ede:	be 01 00 00 00       	mov    $0x1,%esi
    3ee3:	48 89 df             	mov    %rbx,%rdi
    3ee6:	e8 00 00 00 00       	callq  3eeb <vmx_do_ept_fault+0xcb>
			3ee7: R_X86_64_PC32	get_user_pages_fast-0x4
    3eeb:	83 f8 01             	cmp    $0x1,%eax
    3eee:	0f 84 6e 01 00 00    	je     4062 <vmx_do_ept_fault+0x242>
    3ef4:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
    3efb:	00 00 
			3ef9: R_X86_64_32S	current_task
    3efd:	4c 8b b0 18 08 00 00 	mov    0x818(%rax),%r14
    3f04:	49 8d 46 78          	lea    0x78(%r14),%rax
    3f08:	48 89 c7             	mov    %rax,%rdi
    3f0b:	49 89 c5             	mov    %rax,%r13
    3f0e:	e8 00 00 00 00       	callq  3f13 <vmx_do_ept_fault+0xf3>
			3f0f: R_X86_64_PC32	down_read-0x4
    3f13:	48 89 de             	mov    %rbx,%rsi
    3f16:	4c 89 f7             	mov    %r14,%rdi
    3f19:	e8 00 00 00 00       	callq  3f1e <vmx_do_ept_fault+0xfe>
			3f1a: R_X86_64_PC32	find_vma-0x4
    3f1e:	48 85 c0             	test   %rax,%rax
    3f21:	0f 84 fd 03 00 00    	je     4324 <vmx_do_ept_fault+0x504>
    3f27:	48 f7 40 50 00 44 00 	testq  $0x4400,0x50(%rax)
    3f2e:	00 
    3f2f:	0f 84 ef 03 00 00    	je     4324 <vmx_do_ept_fault+0x504>
    3f35:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
    3f39:	48 89 de             	mov    %rbx,%rsi
    3f3c:	48 89 c7             	mov    %rax,%rdi
    3f3f:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    3f43:	e8 00 00 00 00       	callq  3f48 <vmx_do_ept_fault+0x128>
			3f44: R_X86_64_PC32	follow_pfn-0x4
    3f48:	85 c0                	test   %eax,%eax
    3f4a:	41 89 c6             	mov    %eax,%r14d
    3f4d:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
    3f51:	0f 85 d2 02 00 00    	jne    4229 <vmx_do_ept_fault+0x409>
    3f57:	48 8b 41 48          	mov    0x48(%rcx),%rax
    3f5b:	c7 45 a8 06 00 00 00 	movl   $0x6,-0x58(%rbp)
    3f62:	25 98 00 00 00       	and    $0x98,%eax
    3f67:	0f 85 86 03 00 00    	jne    42f3 <vmx_do_ept_fault+0x4d3>
    3f6d:	4c 89 ef             	mov    %r13,%rdi
    3f70:	e8 00 00 00 00       	callq  3f75 <vmx_do_ept_fault+0x155>
			3f71: R_X86_64_PC32	up_read-0x4
    3f75:	4d 8d 4f 58          	lea    0x58(%r15),%r9
    3f79:	4c 89 cf             	mov    %r9,%rdi
    3f7c:	4c 89 4d a0          	mov    %r9,-0x60(%rbp)
    3f80:	e8 00 00 00 00       	callq  3f85 <vmx_do_ept_fault+0x165>
			3f81: R_X86_64_PC32	_raw_spin_lock-0x4
    3f85:	49 8b 7f 60          	mov    0x60(%r15),%rdi
    3f89:	4c 8d 45 c0          	lea    -0x40(%rbp),%r8
    3f8d:	31 d2                	xor    %edx,%edx
    3f8f:	b9 01 00 00 00       	mov    $0x1,%ecx
    3f94:	4c 89 e6             	mov    %r12,%rsi
    3f97:	e8 74 f4 ff ff       	callq  3410 <ept_lookup_gpa.isra.4>
    3f9c:	85 c0                	test   %eax,%eax
    3f9e:	41 89 c6             	mov    %eax,%r14d
    3fa1:	4c 8b 4d a0          	mov    -0x60(%rbp),%r9
    3fa5:	0f 85 2c 04 00 00    	jne    43d7 <vmx_do_ept_fault+0x5b7>
    3fab:	4c 8b 65 c0          	mov    -0x40(%rbp),%r12
    3faf:	8b 55 a8             	mov    -0x58(%rbp),%edx
    3fb2:	8b 75 b0             	mov    -0x50(%rbp),%esi
    3fb5:	41 0f b6 47 70       	movzbl 0x70(%r15),%eax
    3fba:	49 8b 3c 24          	mov    (%r12),%rdi
    3fbe:	c1 e2 03             	shl    $0x3,%edx
    3fc1:	48 89 f9             	mov    %rdi,%rcx
    3fc4:	83 e1 07             	and    $0x7,%ecx
    3fc7:	85 f6                	test   %esi,%esi
    3fc9:	0f 84 bc 01 00 00    	je     418b <vmx_do_ept_fault+0x36b>
    3fcf:	84 c0                	test   %al,%al
    3fd1:	0f 85 45 02 00 00    	jne    421c <vmx_do_ept_fault+0x3fc>
    3fd7:	89 d3                	mov    %edx,%ebx
    3fd9:	81 cb 43 04 00 00    	or     $0x443,%ebx
    3fdf:	48 85 c9             	test   %rcx,%rcx
    3fe2:	0f 84 c0 01 00 00    	je     41a8 <vmx_do_ept_fault+0x388>
    3fe8:	4c 89 4d b0          	mov    %r9,-0x50(%rbp)
    3fec:	e8 3f fa ff ff       	callq  3a30 <free_ept_page>
    3ff1:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
    3ff8:	00 
    3ff9:	4c 8b 4d b0          	mov    -0x50(%rbp),%r9
    3ffd:	4c 8b 65 c0          	mov    -0x40(%rbp),%r12
    4001:	e9 a2 01 00 00       	jmpq   41a8 <vmx_do_ept_fault+0x388>
    4006:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    400a:	4c 89 e6             	mov    %r12,%rsi
    400d:	48 29 c6             	sub    %rax,%rsi
    4010:	48 81 c1 ff ff ff 3f 	add    $0x3fffffff,%rcx
    4017:	48 81 e1 00 00 00 c0 	and    $0xffffffffc0000000,%rcx
    401e:	48 8d 9c 31 00 00 00 	lea    0x40000000(%rcx,%rsi,1),%rbx
    4025:	40 
    4026:	e9 8f fe ff ff       	jmpq   3eba <vmx_do_ept_fault+0x9a>
    402b:	45 89 cd             	mov    %r9d,%r13d
    402e:	4c 89 e3             	mov    %r12,%rbx
    4031:	41 d1 fd             	sar    %r13d
    4034:	41 83 e5 01          	and    $0x1,%r13d
    4038:	44 89 6d b0          	mov    %r13d,-0x50(%rbp)
    403c:	e9 91 fe ff ff       	jmpq   3ed2 <vmx_do_ept_fault+0xb2>
    4041:	48 89 d1             	mov    %rdx,%rcx
    4044:	49 89 d8             	mov    %rbx,%r8
    4047:	4c 89 e2             	mov    %r12,%rdx
    404a:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			404d: R_X86_64_32S	.rodata.str1.8+0x6e8
    4051:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4054: R_X86_64_32S	__verbose+0xe0
    4058:	e8 00 00 00 00       	callq  405d <vmx_do_ept_fault+0x23d>
			4059: R_X86_64_PC32	__dynamic_pr_debug-0x4
    405d:	e9 75 fe ff ff       	jmpq   3ed7 <vmx_do_ept_fault+0xb7>
    4062:	49 8d 47 58          	lea    0x58(%r15),%rax
    4066:	48 89 c7             	mov    %rax,%rdi
    4069:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    406d:	e8 00 00 00 00       	callq  4072 <vmx_do_ept_fault+0x252>
			406e: R_X86_64_PC32	_raw_spin_lock-0x4
    4072:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4076:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%rbp)
    407d:	48 8b 50 08          	mov    0x8(%rax),%rdx
    4081:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
    4085:	83 e2 01             	and    $0x1,%edx
    4088:	48 0f 45 c1          	cmovne %rcx,%rax
    408c:	48 8b 10             	mov    (%rax),%rdx
    408f:	f7 c2 00 00 01 00    	test   $0x10000,%edx
    4095:	0f 85 4b 01 00 00    	jne    41e6 <vmx_do_ept_fault+0x3c6>
    409b:	49 8b 7f 60          	mov    0x60(%r15),%rdi
    409f:	8b 55 a8             	mov    -0x58(%rbp),%edx
    40a2:	4c 8d 45 c8          	lea    -0x38(%rbp),%r8
    40a6:	b9 01 00 00 00       	mov    $0x1,%ecx
    40ab:	4c 89 e6             	mov    %r12,%rsi
    40ae:	e8 5d f3 ff ff       	callq  3410 <ept_lookup_gpa.isra.4>
    40b3:	85 c0                	test   %eax,%eax
    40b5:	41 89 c6             	mov    %eax,%r14d
    40b8:	0f 85 34 03 00 00    	jne    43f2 <vmx_do_ept_fault+0x5d2>
    40be:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    40c2:	48 8b 38             	mov    (%rax),%rdi
    40c5:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    40c9:	40 f6 c7 07          	test   $0x7,%dil
    40cd:	74 1a                	je     40e9 <vmx_do_ept_fault+0x2c9>
    40cf:	40 f6 c7 80          	test   $0x80,%dil
    40d3:	0f 84 b9 01 00 00    	je     4292 <vmx_do_ept_fault+0x472>
    40d9:	e8 52 f9 ff ff       	callq  3a30 <free_ept_page>
    40de:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    40e2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    40e9:	41 0f b6 47 70       	movzbl 0x70(%r15),%eax
    40ee:	8b 55 b0             	mov    -0x50(%rbp),%edx
    40f1:	3c 01                	cmp    $0x1,%al
    40f3:	48 19 db             	sbb    %rbx,%rbx
    40f6:	85 d2                	test   %edx,%edx
    40f8:	0f 84 10 01 00 00    	je     420e <vmx_do_ept_fault+0x3ee>
    40fe:	48 81 e3 00 fd ff ff 	and    $0xfffffffffffffd00,%rbx
    4105:	48 81 c3 77 03 00 00 	add    $0x377,%rbx
    410c:	8b 45 a8             	mov    -0x58(%rbp),%eax
    410f:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
    4113:	85 c0                	test   %eax,%eax
    4115:	74 4b                	je     4162 <vmx_do_ept_fault+0x342>
    4117:	48 8b 57 08          	mov    0x8(%rdi),%rdx
    411b:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
    411f:	83 e2 01             	and    $0x1,%edx
    4122:	48 0f 44 c7          	cmove  %rdi,%rax
    4126:	48 8b 50 08          	mov    0x8(%rax),%rdx
    412a:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    412e:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
    4132:	83 e2 01             	and    $0x1,%edx
    4135:	48 0f 45 c1          	cmovne %rcx,%rax
    4139:	f0 ff 40 34          	lock incl 0x34(%rax)
    413d:	48 8b 47 08          	mov    0x8(%rdi),%rax
    4141:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    4145:	a8 01                	test   $0x1,%al
    4147:	48 0f 45 fa          	cmovne %rdx,%rdi
    414b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4150:	f0 ff 4f 34          	lock decl 0x34(%rdi)
    4154:	75 05                	jne    415b <vmx_do_ept_fault+0x33b>
    4156:	e8 00 00 00 00       	callq  415b <vmx_do_ept_fault+0x33b>
			4157: R_X86_64_PC32	__put_page-0x4
    415b:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
    415f:	80 cb 80             	or     $0x80,%bl
    4162:	48 89 f8             	mov    %rdi,%rax
    4165:	48 2b 05 00 00 00 00 	sub    0x0(%rip),%rax        # 416c <vmx_do_ept_fault+0x34c>
			4168: R_X86_64_PC32	vmemmap_base-0x4
    416c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4170:	48 8b 7d 90          	mov    -0x70(%rbp),%rdi
    4174:	48 c1 f8 06          	sar    $0x6,%rax
    4178:	48 c1 e0 0c          	shl    $0xc,%rax
    417c:	48 09 d8             	or     %rbx,%rax
    417f:	48 89 02             	mov    %rax,(%rdx)
    4182:	ff 14 25 00 00 00 00 	callq  *0x0
			4185: R_X86_64_32S	pv_ops+0x298
    4189:	eb 36                	jmp    41c1 <vmx_do_ept_fault+0x3a1>
    418b:	89 d3                	mov    %edx,%ebx
    418d:	81 ca 41 04 00 00    	or     $0x441,%edx
    4193:	81 cb 41 05 00 00    	or     $0x541,%ebx
    4199:	84 c0                	test   %al,%al
    419b:	48 0f 44 da          	cmove  %rdx,%rbx
    419f:	48 85 c9             	test   %rcx,%rcx
    41a2:	0f 85 40 fe ff ff    	jne    3fe8 <vmx_do_ept_fault+0x1c8>
    41a8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    41ac:	4c 89 cf             	mov    %r9,%rdi
    41af:	48 c1 e2 0c          	shl    $0xc,%rdx
    41b3:	48 09 da             	or     %rbx,%rdx
    41b6:	49 89 14 24          	mov    %rdx,(%r12)
    41ba:	ff 14 25 00 00 00 00 	callq  *0x0
			41bd: R_X86_64_32S	pv_ops+0x298
    41c1:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    41c5:	65 48 33 34 25 28 00 	xor    %gs:0x28,%rsi
    41cc:	00 00 
    41ce:	44 89 f0             	mov    %r14d,%eax
    41d1:	0f 85 7f 02 00 00    	jne    4456 <vmx_do_ept_fault+0x636>
    41d7:	48 83 c4 58          	add    $0x58,%rsp
    41db:	5b                   	pop    %rbx
    41dc:	41 5c                	pop    %r12
    41de:	41 5d                	pop    %r13
    41e0:	41 5e                	pop    %r14
    41e2:	41 5f                	pop    %r15
    41e4:	5d                   	pop    %rbp
    41e5:	c3                   	retq   
    41e6:	0f b6 40 51          	movzbl 0x51(%rax),%eax
    41ea:	c7 45 a8 02 00 00 00 	movl   $0x2,-0x58(%rbp)
    41f1:	83 c0 0c             	add    $0xc,%eax
    41f4:	83 f8 1e             	cmp    $0x1e,%eax
    41f7:	0f 84 9e fe ff ff    	je     409b <vmx_do_ept_fault+0x27b>
    41fd:	83 f8 15             	cmp    $0x15,%eax
    4200:	0f 94 c0             	sete   %al
    4203:	0f b6 c0             	movzbl %al,%eax
    4206:	89 45 a8             	mov    %eax,-0x58(%rbp)
    4209:	e9 8d fe ff ff       	jmpq   409b <vmx_do_ept_fault+0x27b>
    420e:	30 db                	xor    %bl,%bl
    4210:	48 81 c3 75 01 00 00 	add    $0x175,%rbx
    4217:	e9 f0 fe ff ff       	jmpq   410c <vmx_do_ept_fault+0x2ec>
    421c:	89 d3                	mov    %edx,%ebx
    421e:	81 cb 43 07 00 00    	or     $0x743,%ebx
    4224:	e9 76 ff ff ff       	jmpq   419f <vmx_do_ept_fault+0x37f>
    4229:	4c 89 ef             	mov    %r13,%rdi
    422c:	e8 00 00 00 00       	callq  4231 <vmx_do_ept_fault+0x411>
			422d: R_X86_64_PC32	up_read-0x4
    4231:	48 89 de             	mov    %rbx,%rsi
    4234:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4237: R_X86_64_32S	.rodata.str1.8+0x748
    423b:	e8 00 00 00 00       	callq  4240 <vmx_do_ept_fault+0x420>
			423c: R_X86_64_PC32	printk-0x4
    4240:	e9 7c ff ff ff       	jmpq   41c1 <vmx_do_ept_fault+0x3a1>
    4245:	4c 89 e6             	mov    %r12,%rsi
    4248:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			424b: R_X86_64_32S	.rodata.str1.8+0x6c0
    424f:	41 be ea ff ff ff    	mov    $0xffffffea,%r14d
    4255:	e8 00 00 00 00       	callq  425a <vmx_do_ept_fault+0x43a>
			4256: R_X86_64_PC32	printk-0x4
    425a:	e9 62 ff ff ff       	jmpq   41c1 <vmx_do_ept_fault+0x3a1>
    425f:	48 8b 07             	mov    (%rdi),%rax
    4262:	48 c1 e8 33          	shr    $0x33,%rax
    4266:	83 e0 07             	and    $0x7,%eax
    4269:	83 f8 04             	cmp    $0x4,%eax
    426c:	0f 85 de fe ff ff    	jne    4150 <vmx_do_ept_fault+0x330>
    4272:	48 8b 47 08          	mov    0x8(%rdi),%rax
    4276:	8b 80 d0 00 00 00    	mov    0xd0(%rax),%eax
    427c:	83 e8 01             	sub    $0x1,%eax
    427f:	83 f8 01             	cmp    $0x1,%eax
    4282:	0f 87 c8 fe ff ff    	ja     4150 <vmx_do_ept_fault+0x330>
    4288:	e8 00 00 00 00       	callq  428d <vmx_do_ept_fault+0x46d>
			4289: R_X86_64_PC32	__put_devmap_managed_page-0x4
    428d:	e9 c9 fe ff ff       	jmpq   415b <vmx_do_ept_fault+0x33b>
    4292:	83 7d a8 02          	cmpl   $0x2,-0x58(%rbp)
    4296:	0f 84 9b 00 00 00    	je     4337 <vmx_do_ept_fault+0x517>
    429c:	83 7d a8 01          	cmpl   $0x1,-0x58(%rbp)
    42a0:	0f 85 33 fe ff ff    	jne    40d9 <vmx_do_ept_fault+0x2b9>
    42a6:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    42ad:	48 03 3d 00 00 00 00 	add    0x0(%rip),%rdi        # 42b4 <vmx_do_ept_fault+0x494>
			42b0: R_X86_64_PC32	page_offset_base-0x4
    42b4:	48 8d 9f 00 10 00 00 	lea    0x1000(%rdi),%rbx
    42bb:	49 89 fd             	mov    %rdi,%r13
    42be:	49 89 fc             	mov    %rdi,%r12
    42c1:	49 8b 3c 24          	mov    (%r12),%rdi
    42c5:	40 f6 c7 07          	test   $0x7,%dil
    42c9:	74 05                	je     42d0 <vmx_do_ept_fault+0x4b0>
    42cb:	e8 60 f7 ff ff       	callq  3a30 <free_ept_page>
    42d0:	49 83 c4 08          	add    $0x8,%r12
    42d4:	4c 39 e3             	cmp    %r12,%rbx
    42d7:	75 e8                	jne    42c1 <vmx_do_ept_fault+0x4a1>
    42d9:	31 f6                	xor    %esi,%esi
    42db:	4c 89 ef             	mov    %r13,%rdi
    42de:	e8 00 00 00 00       	callq  42e3 <vmx_do_ept_fault+0x4c3>
			42df: R_X86_64_PC32	free_pages-0x4
    42e3:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    42e7:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    42ee:	e9 f6 fd ff ff       	jmpq   40e9 <vmx_do_ept_fault+0x2c9>
    42f3:	48 89 c2             	mov    %rax,%rdx
    42f6:	48 c1 e8 05          	shr    $0x5,%rax
    42fa:	48 c1 ea 03          	shr    $0x3,%rdx
    42fe:	83 e2 03             	and    $0x3,%edx
    4301:	48 09 d0             	or     %rdx,%rax
    4304:	0f b6 80 00 00 00 00 	movzbl 0x0(%rax),%eax
			4307: R_X86_64_32S	__pte2cachemode_tbl
    430b:	85 c0                	test   %eax,%eax
    430d:	0f 84 5a fc ff ff    	je     3f6d <vmx_do_ept_fault+0x14d>
    4313:	83 f8 01             	cmp    $0x1,%eax
    4316:	0f 94 c0             	sete   %al
    4319:	0f b6 c0             	movzbl %al,%eax
    431c:	89 45 a8             	mov    %eax,-0x58(%rbp)
    431f:	e9 49 fc ff ff       	jmpq   3f6d <vmx_do_ept_fault+0x14d>
    4324:	4c 89 ef             	mov    %r13,%rdi
    4327:	41 be f2 ff ff ff    	mov    $0xfffffff2,%r14d
    432d:	e8 00 00 00 00       	callq  4332 <vmx_do_ept_fault+0x512>
			432e: R_X86_64_PC32	up_read-0x4
    4332:	e9 fa fe ff ff       	jmpq   4231 <vmx_do_ept_fault+0x411>
    4337:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 433e <vmx_do_ept_fault+0x51e>
			433a: R_X86_64_PC32	page_offset_base-0x4
    433e:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    4345:	4c 8d 24 07          	lea    (%rdi,%rax,1),%r12
    4349:	49 8d b4 24 00 10 00 	lea    0x1000(%r12),%rsi
    4350:	00 
    4351:	4c 89 65 80          	mov    %r12,-0x80(%rbp)
    4355:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    4359:	49 8b 3c 24          	mov    (%r12),%rdi
    435d:	40 f6 c7 07          	test   $0x7,%dil
    4361:	74 3f                	je     43a2 <vmx_do_ept_fault+0x582>
    4363:	40 f6 c7 80          	test   $0x80,%dil
    4367:	75 4c                	jne    43b5 <vmx_do_ept_fault+0x595>
    4369:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    4370:	4c 8d 2c 07          	lea    (%rdi,%rax,1),%r13
    4374:	49 8d 9d 00 10 00 00 	lea    0x1000(%r13),%rbx
    437b:	4c 89 6d 98          	mov    %r13,-0x68(%rbp)
    437f:	49 8b 7d 00          	mov    0x0(%r13),%rdi
    4383:	40 f6 c7 07          	test   $0x7,%dil
    4387:	74 05                	je     438e <vmx_do_ept_fault+0x56e>
    4389:	e8 a2 f6 ff ff       	callq  3a30 <free_ept_page>
    438e:	49 83 c5 08          	add    $0x8,%r13
    4392:	4c 39 eb             	cmp    %r13,%rbx
    4395:	75 e8                	jne    437f <vmx_do_ept_fault+0x55f>
    4397:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
    439b:	31 f6                	xor    %esi,%esi
    439d:	e8 00 00 00 00       	callq  43a2 <vmx_do_ept_fault+0x582>
			439e: R_X86_64_PC32	free_pages-0x4
    43a2:	49 83 c4 08          	add    $0x8,%r12
    43a6:	4c 39 65 a0          	cmp    %r12,-0x60(%rbp)
    43aa:	74 10                	je     43bc <vmx_do_ept_fault+0x59c>
    43ac:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 43b3 <vmx_do_ept_fault+0x593>
			43af: R_X86_64_PC32	page_offset_base-0x4
    43b3:	eb a4                	jmp    4359 <vmx_do_ept_fault+0x539>
    43b5:	e8 76 f6 ff ff       	callq  3a30 <free_ept_page>
    43ba:	eb e6                	jmp    43a2 <vmx_do_ept_fault+0x582>
    43bc:	48 8b 7d 80          	mov    -0x80(%rbp),%rdi
    43c0:	31 f6                	xor    %esi,%esi
    43c2:	e8 00 00 00 00       	callq  43c7 <vmx_do_ept_fault+0x5a7>
			43c3: R_X86_64_PC32	free_pages-0x4
    43c7:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    43cb:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    43d2:	e9 12 fd ff ff       	jmpq   40e9 <vmx_do_ept_fault+0x2c9>
    43d7:	4c 89 cf             	mov    %r9,%rdi
    43da:	ff 14 25 00 00 00 00 	callq  *0x0
			43dd: R_X86_64_32S	pv_ops+0x298
    43e1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			43e4: R_X86_64_32S	.rodata.str1.8+0x720
    43e8:	e8 00 00 00 00       	callq  43ed <vmx_do_ept_fault+0x5cd>
			43e9: R_X86_64_PC32	printk-0x4
    43ed:	e9 3f fe ff ff       	jmpq   4231 <vmx_do_ept_fault+0x411>
    43f2:	48 8b 7d 90          	mov    -0x70(%rbp),%rdi
    43f6:	ff 14 25 00 00 00 00 	callq  *0x0
			43f9: R_X86_64_32S	pv_ops+0x298
    43fd:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
    4401:	48 8b 47 08          	mov    0x8(%rdi),%rax
    4405:	a8 01                	test   $0x1,%al
    4407:	74 04                	je     440d <vmx_do_ept_fault+0x5ed>
    4409:	48 8d 78 ff          	lea    -0x1(%rax),%rdi
    440d:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4412:	f0 ff 4f 34          	lock decl 0x34(%rdi)
    4416:	75 05                	jne    441d <vmx_do_ept_fault+0x5fd>
    4418:	e8 00 00 00 00       	callq  441d <vmx_do_ept_fault+0x5fd>
			4419: R_X86_64_PC32	__put_page-0x4
    441d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4420: R_X86_64_32S	.rodata.str1.8+0x720
    4424:	e8 00 00 00 00       	callq  4429 <vmx_do_ept_fault+0x609>
			4425: R_X86_64_PC32	printk-0x4
    4429:	e9 93 fd ff ff       	jmpq   41c1 <vmx_do_ept_fault+0x3a1>
    442e:	48 8b 07             	mov    (%rdi),%rax
    4431:	48 c1 e8 33          	shr    $0x33,%rax
    4435:	83 e0 07             	and    $0x7,%eax
    4438:	83 f8 04             	cmp    $0x4,%eax
    443b:	75 d5                	jne    4412 <vmx_do_ept_fault+0x5f2>
    443d:	48 8b 47 08          	mov    0x8(%rdi),%rax
    4441:	8b 80 d0 00 00 00    	mov    0xd0(%rax),%eax
    4447:	83 e8 01             	sub    $0x1,%eax
    444a:	83 f8 01             	cmp    $0x1,%eax
    444d:	77 c3                	ja     4412 <vmx_do_ept_fault+0x5f2>
    444f:	e8 00 00 00 00       	callq  4454 <vmx_do_ept_fault+0x634>
			4450: R_X86_64_PC32	__put_devmap_managed_page-0x4
    4454:	eb c7                	jmp    441d <vmx_do_ept_fault+0x5fd>
    4456:	e8 00 00 00 00       	callq  445b <vmx_do_ept_fault+0x63b>
			4457: R_X86_64_PC32	__stack_chk_fail-0x4
    445b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004460 <vmx_init_ept>:
vmx_init_ept():
    4460:	e8 00 00 00 00       	callq  4465 <vmx_init_ept+0x5>
			4461: R_X86_64_PC32	__fentry__-0x4
    4465:	55                   	push   %rbp
    4466:	31 f6                	xor    %esi,%esi
    4468:	48 89 e5             	mov    %rsp,%rbp
    446b:	53                   	push   %rbx
    446c:	48 89 fb             	mov    %rdi,%rbx
    446f:	bf c0 0c 00 00       	mov    $0xcc0,%edi
    4474:	e8 00 00 00 00       	callq  4479 <vmx_init_ept+0x19>
			4475: R_X86_64_PC32	__get_free_pages-0x4
    4479:	48 85 c0             	test   %rax,%rax
    447c:	74 55                	je     44d3 <vmx_init_ept+0x73>
    447e:	48 8d 78 08          	lea    0x8(%rax),%rdi
    4482:	48 89 c1             	mov    %rax,%rcx
    4485:	48 89 c2             	mov    %rax,%rdx
    4488:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    448f:	48 c7 80 f8 0f 00 00 	movq   $0x0,0xff8(%rax)
    4496:	00 00 00 00 
    449a:	31 c0                	xor    %eax,%eax
    449c:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    44a0:	48 29 f9             	sub    %rdi,%rcx
    44a3:	81 c1 00 10 00 00    	add    $0x1000,%ecx
    44a9:	c1 e9 03             	shr    $0x3,%ecx
    44ac:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    44af:	b8 00 00 00 80       	mov    $0x80000000,%eax
    44b4:	48 01 c2             	add    %rax,%rdx
    44b7:	72 21                	jb     44da <vmx_init_ept+0x7a>
    44b9:	48 c7 c0 00 00 00 80 	mov    $0xffffffff80000000,%rax
    44c0:	48 2b 05 00 00 00 00 	sub    0x0(%rip),%rax        # 44c7 <vmx_init_ept+0x67>
			44c3: R_X86_64_PC32	page_offset_base-0x4
    44c7:	48 01 c2             	add    %rax,%rdx
    44ca:	31 c0                	xor    %eax,%eax
    44cc:	48 89 53 60          	mov    %rdx,0x60(%rbx)
    44d0:	5b                   	pop    %rbx
    44d1:	5d                   	pop    %rbp
    44d2:	c3                   	retq   
    44d3:	b8 f4 ff ff ff       	mov    $0xfffffff4,%eax
    44d8:	eb f6                	jmp    44d0 <vmx_init_ept+0x70>
    44da:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 44e1 <vmx_init_ept+0x81>
			44dd: R_X86_64_PC32	phys_base-0x4
    44e1:	eb e4                	jmp    44c7 <vmx_init_ept+0x67>
    44e3:	0f 1f 00             	nopl   (%rax)
    44e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    44ed:	00 00 00 

00000000000044f0 <vmx_create_ept>:
vmx_create_ept():
    44f0:	e8 00 00 00 00       	callq  44f5 <vmx_create_ept+0x5>
			44f1: R_X86_64_PC32	__fentry__-0x4
    44f5:	55                   	push   %rbp
    44f6:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
    44fd:	00 00 
			44fb: R_X86_64_32S	current_task
    44ff:	48 89 e5             	mov    %rsp,%rbp
    4502:	53                   	push   %rbx
    4503:	48 89 fb             	mov    %rdi,%rbx
    4506:	48 83 c7 20          	add    $0x20,%rdi
    450a:	48 83 ec 08          	sub    $0x8,%rsp
    450e:	48 c7 47 10 00 00 00 	movq   $0x0,0x10(%rdi)
    4515:	00 
			4512: R_X86_64_32S	.rodata+0x200
    4516:	48 8b b0 18 08 00 00 	mov    0x818(%rax),%rsi
    451d:	e8 00 00 00 00       	callq  4522 <vmx_create_ept+0x32>
			451e: R_X86_64_PC32	mmu_notifier_register-0x4
    4522:	85 c0                	test   %eax,%eax
    4524:	74 0f                	je     4535 <vmx_create_ept+0x45>
    4526:	48 8b 7b 60          	mov    0x60(%rbx),%rdi
    452a:	89 45 f4             	mov    %eax,-0xc(%rbp)
    452d:	e8 7e f3 ff ff       	callq  38b0 <vmx_free_ept>
    4532:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4535:	48 83 c4 08          	add    $0x8,%rsp
    4539:	5b                   	pop    %rbx
    453a:	5d                   	pop    %rbp
    453b:	c3                   	retq   
    453c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004540 <vmx_destroy_ept>:
vmx_destroy_ept():
    4540:	e8 00 00 00 00       	callq  4545 <vmx_destroy_ept+0x5>
			4541: R_X86_64_PC32	__fentry__-0x4
    4545:	55                   	push   %rbp
    4546:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
    454d:	00 00 
			454b: R_X86_64_32S	current_task
    454f:	48 89 e5             	mov    %rsp,%rbp
    4552:	53                   	push   %rbx
    4553:	48 83 b8 18 08 00 00 	cmpq   $0x0,0x818(%rax)
    455a:	00 
    455b:	48 89 fb             	mov    %rdi,%rbx
    455e:	74 10                	je     4570 <vmx_destroy_ept+0x30>
    4560:	48 8b b0 18 08 00 00 	mov    0x818(%rax),%rsi
    4567:	48 8d 7f 20          	lea    0x20(%rdi),%rdi
    456b:	e8 00 00 00 00       	callq  4570 <vmx_destroy_ept+0x30>
			456c: R_X86_64_PC32	mmu_notifier_unregister-0x4
    4570:	48 8b 7b 60          	mov    0x60(%rbx),%rdi
    4574:	e8 37 f3 ff ff       	callq  38b0 <vmx_free_ept>
    4579:	5b                   	pop    %rbx
    457a:	5d                   	pop    %rbp
    457b:	c3                   	retq   
    457c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004580 <notifier_sched_out>:
notifier_sched_out():
    4580:	e8 00 00 00 00       	callq  4585 <notifier_sched_out+0x5>
			4581: R_X86_64_PC32	__fentry__-0x4
    4585:	55                   	push   %rbp
    4586:	48 89 e5             	mov    %rsp,%rbp
    4589:	5d                   	pop    %rbp
    458a:	c3                   	retq   
    458b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004590 <notifier_sched_in.part.1>:
notifier_sched_in.part.1():
    4590:	e8 00 00 00 00       	callq  4595 <notifier_sched_in.part.1+0x5>
			4591: R_X86_64_PC32	__fentry__-0x4
    4595:	55                   	push   %rbp
    4596:	65 48 8b 14 25 00 00 	mov    %gs:0x0,%rdx
    459d:	00 00 
			459b: R_X86_64_32S	current_task
    459f:	48 89 e5             	mov    %rsp,%rbp
    45a2:	53                   	push   %rbx
    45a3:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    45aa:	c6 05 00 00 00 00 00 	movb   $0x0,0x0(%rip)        # 45b1 <notifier_sched_in.part.1+0x21>
			45ac: R_X86_64_PC32	.bss+0x2209c
    45b1:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
    45b8:	00 00 
    45ba:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    45be:	31 c0                	xor    %eax,%eax
    45c0:	48 8b 42 18          	mov    0x18(%rdx),%rax
    45c4:	48 8d 98 58 3f 00 00 	lea    0x3f58(%rax),%rbx
    45cb:	48 8b 4b 50          	mov    0x50(%rbx),%rcx
    45cf:	48 89 8d 60 ff ff ff 	mov    %rcx,-0xa0(%rbp)
    45d6:	48 8b 4b 28          	mov    0x28(%rbx),%rcx
    45da:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
    45e1:	48 8b 4b 58          	mov    0x58(%rbx),%rcx
    45e5:	48 89 8d 70 ff ff ff 	mov    %rcx,-0x90(%rbp)
    45ec:	48 8b 4b 60          	mov    0x60(%rbx),%rcx
    45f0:	48 89 8d 78 ff ff ff 	mov    %rcx,-0x88(%rbp)
    45f7:	48 8b 4b 68          	mov    0x68(%rbx),%rcx
    45fb:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
    45ff:	48 8b 4b 70          	mov    0x70(%rbx),%rcx
    4603:	48 89 4d 88          	mov    %rcx,-0x78(%rbp)
    4607:	48 8b 8b 98 00 00 00 	mov    0x98(%rbx),%rcx
    460e:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
    4612:	48 8b 4b 20          	mov    0x20(%rbx),%rcx
    4616:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
    461a:	48 8b 4b 48          	mov    0x48(%rbx),%rcx
    461e:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
    4622:	48 8b 4b 40          	mov    0x40(%rbx),%rcx
    4626:	48 89 4d a8          	mov    %rcx,-0x58(%rbp)
    462a:	48 8b 4b 38          	mov    0x38(%rbx),%rcx
    462e:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    4632:	48 8b 4b 30          	mov    0x30(%rbx),%rcx
    4636:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
    463a:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    463e:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    4642:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    4646:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
    464a:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
    464e:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    4652:	48 8b 80 58 3f 00 00 	mov    0x3f58(%rax),%rax
    4659:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    465d:	48 8b 83 80 00 00 00 	mov    0x80(%rbx),%rax
    4664:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4668:	48 8b 83 90 00 00 00 	mov    0x90(%rbx),%rax
    466f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4673:	80 e4 fe             	and    $0xfe,%ah
    4676:	48 89 83 90 00 00 00 	mov    %rax,0x90(%rbx)
    467d:	f0 80 22 ef          	lock andb $0xef,(%rdx)
    4681:	48 81 3d 00 00 00 00 	cmpq   $0x90,0x0(%rip)        # 468c <notifier_sched_in.part.1+0xfc>
    4688:	90 00 00 00 
			4684: R_X86_64_PC32	.bss+0x220d0
    468c:	74 19                	je     46a7 <notifier_sched_in.part.1+0x117>
    468e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4692:	65 48 33 04 25 28 00 	xor    %gs:0x28,%rax
    4699:	00 00 
    469b:	75 50                	jne    46ed <notifier_sched_in.part.1+0x15d>
    469d:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
    46a4:	5b                   	pop    %rbx
    46a5:	5d                   	pop    %rbp
    46a6:	c3                   	retq   
    46a7:	48 8b 3d 00 00 00 00 	mov    0x0(%rip),%rdi        # 46ae <notifier_sched_in.part.1+0x11e>
			46aa: R_X86_64_PC32	.bss+0x220cc
    46ae:	48 8d b5 60 ff ff ff 	lea    -0xa0(%rbp),%rsi
    46b5:	ba 90 00 00 00       	mov    $0x90,%edx
    46ba:	e8 00 00 00 00       	callq  46bf <notifier_sched_in.part.1+0x12f>
			46bb: R_X86_64_PC32	_copy_to_user-0x4
    46bf:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 46c6 <notifier_sched_in.part.1+0x136>
			46c2: R_X86_64_PC32	.bss+0x220c4
    46c6:	48 83 83 98 00 00 00 	addq   $0xffffffffffffff80,0x98(%rbx)
    46cd:	80 
    46ce:	48 89 83 80 00 00 00 	mov    %rax,0x80(%rbx)
    46d5:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 46dc <notifier_sched_in.part.1+0x14c>
			46d8: R_X86_64_PC32	.bss+0x220cc
    46dc:	48 89 43 70          	mov    %rax,0x70(%rbx)
    46e0:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 46e7 <notifier_sched_in.part.1+0x157>
			46e3: R_X86_64_PC32	.bss+0x220dc
    46e7:	48 89 43 68          	mov    %rax,0x68(%rbx)
    46eb:	eb a1                	jmp    468e <notifier_sched_in.part.1+0xfe>
    46ed:	e8 00 00 00 00       	callq  46f2 <notifier_sched_in.part.1+0x162>
			46ee: R_X86_64_PC32	__stack_chk_fail-0x4
    46f2:	0f 1f 40 00          	nopl   0x0(%rax)
    46f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    46fd:	00 00 00 

0000000000004700 <notifier_sched_in>:
notifier_sched_in():
    4700:	e8 00 00 00 00       	callq  4705 <notifier_sched_in+0x5>
			4701: R_X86_64_PC32	__fentry__-0x4
    4705:	80 3d 00 00 00 00 00 	cmpb   $0x0,0x0(%rip)        # 470c <notifier_sched_in+0xc>
			4707: R_X86_64_PC32	.bss+0x2209c
    470c:	55                   	push   %rbp
    470d:	48 89 e5             	mov    %rsp,%rbp
    4710:	75 1f                	jne    4731 <notifier_sched_in+0x31>
    4712:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
    4719:	00 00 
			4717: R_X86_64_32S	current_task
    471b:	48 8b 40 18          	mov    0x18(%rax),%rax
    471f:	48 8b 0d 00 00 00 00 	mov    0x0(%rip),%rcx        # 4726 <notifier_sched_in+0x26>
			4722: R_X86_64_PC32	.bss+0x220bc
    4726:	48 39 88 d8 3f 00 00 	cmp    %rcx,0x3fd8(%rax)
    472d:	74 1d                	je     474c <notifier_sched_in+0x4c>
    472f:	5d                   	pop    %rbp
    4730:	c3                   	retq   
    4731:	0f b6 05 00 00 00 00 	movzbl 0x0(%rip),%eax        # 4738 <notifier_sched_in+0x38>
			4734: R_X86_64_PC32	.bss+0x2209e
    4738:	8d 50 ff             	lea    -0x1(%rax),%edx
    473b:	84 c0                	test   %al,%al
    473d:	88 15 00 00 00 00    	mov    %dl,0x0(%rip)        # 4743 <notifier_sched_in+0x43>
			473f: R_X86_64_PC32	.bss+0x2209e
    4743:	75 ea                	jne    472f <notifier_sched_in+0x2f>
    4745:	e8 46 fe ff ff       	callq  4590 <notifier_sched_in.part.1>
    474a:	5d                   	pop    %rbp
    474b:	c3                   	retq   
    474c:	c6 05 00 00 00 00 01 	movb   $0x1,0x0(%rip)        # 4753 <notifier_sched_in+0x53>
			474e: R_X86_64_PC32	.bss+0x2209c
    4753:	0f b6 05 00 00 00 00 	movzbl 0x0(%rip),%eax        # 475a <notifier_sched_in+0x5a>
			4756: R_X86_64_PC32	.bss+0x220e4
    475a:	eb dc                	jmp    4738 <notifier_sched_in+0x38>
    475c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004760 <dune_trap_enable>:
dune_trap_enable():
    4760:	e8 00 00 00 00       	callq  4765 <dune_trap_enable+0x5>
			4761: R_X86_64_PC32	__fentry__-0x4
    4765:	55                   	push   %rbp
    4766:	48 89 fe             	mov    %rdi,%rsi
    4769:	ba 29 00 00 00       	mov    $0x29,%edx
    476e:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4771: R_X86_64_32S	.bss+0x220c0
    4775:	48 89 e5             	mov    %rsp,%rbp
    4778:	e8 00 00 00 00       	callq  477d <dune_trap_enable+0x1d>
			4779: R_X86_64_PC32	_copy_from_user-0x4
    477d:	48 85 c0             	test   %rax,%rax
    4780:	48 c7 c2 fb ff ff ff 	mov    $0xfffffffffffffffb,%rdx
    4787:	75 15                	jne    479e <dune_trap_enable+0x3e>
    4789:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			478c: R_X86_64_32S	.data+0x90
    4790:	e8 00 00 00 00       	callq  4795 <dune_trap_enable+0x35>
			4791: R_X86_64_PC32	preempt_notifier_register-0x4
    4795:	c6 05 00 00 00 00 01 	movb   $0x1,0x0(%rip)        # 479c <dune_trap_enable+0x3c>
			4797: R_X86_64_PC32	.bss+0x2209b
    479c:	31 d2                	xor    %edx,%edx
    479e:	48 89 d0             	mov    %rdx,%rax
    47a1:	5d                   	pop    %rbp
    47a2:	c3                   	retq   
    47a3:	0f 1f 00             	nopl   (%rax)
    47a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    47ad:	00 00 00 

00000000000047b0 <dune_trap_disable>:
dune_trap_disable():
    47b0:	e8 00 00 00 00       	callq  47b5 <dune_trap_disable+0x5>
			47b1: R_X86_64_PC32	__fentry__-0x4
    47b5:	80 3d 00 00 00 00 00 	cmpb   $0x0,0x0(%rip)        # 47bc <dune_trap_disable+0xc>
			47b7: R_X86_64_PC32	.bss+0x2209b
    47bc:	75 0a                	jne    47c8 <dune_trap_disable+0x18>
    47be:	c6 05 00 00 00 00 00 	movb   $0x0,0x0(%rip)        # 47c5 <dune_trap_disable+0x15>
			47c0: R_X86_64_PC32	.bss+0x2209b
    47c5:	31 c0                	xor    %eax,%eax
    47c7:	c3                   	retq   
    47c8:	55                   	push   %rbp
    47c9:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			47cc: R_X86_64_32S	.data+0x90
    47d0:	48 89 e5             	mov    %rsp,%rbp
    47d3:	e8 00 00 00 00       	callq  47d8 <dune_trap_disable+0x28>
			47d4: R_X86_64_PC32	preempt_notifier_unregister-0x4
    47d8:	31 c0                	xor    %eax,%eax
    47da:	c6 05 00 00 00 00 00 	movb   $0x0,0x0(%rip)        # 47e1 <dune_trap_disable+0x31>
			47dc: R_X86_64_PC32	.bss+0x2209b
    47e1:	5d                   	pop    %rbp
    47e2:	c3                   	retq   

Déassemblage de la section .altinstr_replacement :

0000000000000000 <.altinstr_replacement>:
   0:	87 3c 25 10 d3 5f ff 	xchg   %edi,0xffffffffff5fd310
   7:	87 14 25 00 d3 5f ff 	xchg   %edx,0xffffffffff5fd300
   e:	e9 00 00 00 00       	jmpq   13 <.altinstr_replacement+0x13>
			f: R_X86_64_PC32	.text+0x138b
  13:	e9 00 00 00 00       	jmpq   18 <.altinstr_replacement+0x18>
			14: R_X86_64_PC32	.text+0x13c9
  18:	48 0f c7 1f          	xrstors64 (%rdi)

Déassemblage de la section .init.text :

0000000000000000 <init_module>:
dune_init():
   0:	e8 00 00 00 00       	callq  5 <init_module+0x5>
			1: R_X86_64_PC32	__fentry__-0x4
   5:	55                   	push   %rbp
   6:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			9: R_X86_64_32S	.data+0x60
   d:	48 89 e5             	mov    %rsp,%rbp
  10:	53                   	push   %rbx
  11:	e8 00 00 00 00       	callq  16 <init_module+0x16>
			12: R_X86_64_PC32	perf_register_guest_info_callbacks-0x4
  16:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			19: R_X86_64_32S	.rodata.str1.1+0x9
  1d:	e8 00 00 00 00       	callq  22 <init_module+0x22>
			1e: R_X86_64_PC32	printk-0x4
  22:	e8 00 00 00 00       	callq  27 <init_module+0x27>
			23: R_X86_64_PC32	vmx_init-0x4
  27:	85 c0                	test   %eax,%eax
  29:	74 10                	je     3b <init_module+0x3b>
  2b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2e: R_X86_64_32S	.rodata.str1.8
  32:	89 c3                	mov    %eax,%ebx
  34:	e8 00 00 00 00       	callq  39 <init_module+0x39>
			35: R_X86_64_PC32	printk-0x4
  39:	eb 23                	jmp    5e <init_module+0x5e>
  3b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			3e: R_X86_64_32S	.data
  42:	e8 00 00 00 00       	callq  47 <init_module+0x47>
			43: R_X86_64_PC32	misc_register-0x4
  47:	85 c0                	test   %eax,%eax
  49:	89 c3                	mov    %eax,%ebx
  4b:	74 11                	je     5e <init_module+0x5e>
  4d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			50: R_X86_64_32S	.rodata.str1.8+0x28
  54:	e8 00 00 00 00       	callq  59 <init_module+0x59>
			55: R_X86_64_PC32	printk-0x4
  59:	e8 00 00 00 00       	callq  5e <init_module+0x5e>
			5a: R_X86_64_PC32	vmx_exit-0x4
  5e:	89 d8                	mov    %ebx,%eax
  60:	5b                   	pop    %rbx
  61:	5d                   	pop    %rbp
  62:	c3                   	retq   

0000000000000063 <adjust_vmx_controls>:
adjust_vmx_controls():
  63:	e8 00 00 00 00       	callq  68 <adjust_vmx_controls+0x5>
			64: R_X86_64_PC32	__fentry__-0x4
  68:	55                   	push   %rbp
  69:	09 fe                	or     %edi,%esi
  6b:	48 89 e5             	mov    %rsp,%rbp
  6e:	41 55                	push   %r13
  70:	41 54                	push   %r12
  72:	49 89 cd             	mov    %rcx,%r13
  75:	53                   	push   %rbx
  76:	41 89 fc             	mov    %edi,%r12d
  79:	89 f3                	mov    %esi,%ebx
  7b:	89 d7                	mov    %edx,%edi
  7d:	ff 14 25 00 00 00 00 	callq  *0x0
			80: R_X86_64_32S	pv_ops+0xc8
  84:	48 89 c7             	mov    %rax,%rdi
  87:	48 c1 ef 20          	shr    $0x20,%rdi
  8b:	21 fb                	and    %edi,%ebx
  8d:	09 c3                	or     %eax,%ebx
  8f:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax
  94:	89 da                	mov    %ebx,%edx
  96:	f7 d2                	not    %edx
  98:	44 85 e2             	test   %r12d,%edx
  9b:	75 06                	jne    a3 <adjust_vmx_controls+0x40>
  9d:	41 89 5d 00          	mov    %ebx,0x0(%r13)
  a1:	31 c0                	xor    %eax,%eax
  a3:	5b                   	pop    %rbx
  a4:	41 5c                	pop    %r12
  a6:	41 5d                	pop    %r13
  a8:	5d                   	pop    %rbp
  a9:	c3                   	retq   

00000000000000aa <allow_1_setting>:
allow_1_setting():
  aa:	e8 00 00 00 00       	callq  af <allow_1_setting+0x5>
			ab: R_X86_64_PC32	__fentry__-0x4
  af:	55                   	push   %rbp
  b0:	89 ff                	mov    %edi,%edi
  b2:	48 89 e5             	mov    %rsp,%rbp
  b5:	53                   	push   %rbx
  b6:	89 f3                	mov    %esi,%ebx
  b8:	ff 14 25 00 00 00 00 	callq  *0x0
			bb: R_X86_64_32S	pv_ops+0xc8
  bf:	48 c1 e8 20          	shr    $0x20,%rax
  c3:	85 c3                	test   %eax,%ebx
  c5:	0f 95 c0             	setne  %al
  c8:	5b                   	pop    %rbx
  c9:	5d                   	pop    %rbp
  ca:	c3                   	retq   

00000000000000cb <vmx_enable>:
vmx_enable():
  cb:	e8 00 00 00 00       	callq  d0 <vmx_enable+0x5>
			cc: R_X86_64_PC32	__fentry__-0x4
  d0:	55                   	push   %rbp
  d1:	ba 00 00 00 80       	mov    $0x80000000,%edx
  d6:	48 89 e5             	mov    %rsp,%rbp
  d9:	41 54                	push   %r12
  db:	53                   	push   %rbx
  dc:	48 83 ec 20          	sub    $0x20,%rsp
  e0:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
  e7:	00 00 
  e9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  ed:	31 c0                	xor    %eax,%eax
  ef:	65 4c 8b 25 00 00 00 	mov    %gs:0x0(%rip),%r12        # f7 <vmx_enable+0x2c>
  f6:	00 
			f3: R_X86_64_PC32	.data..percpu+0x14
  f7:	49 01 d4             	add    %rdx,%r12
  fa:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 101 <vmx_enable+0x36>
			fd: R_X86_64_PC32	phys_base-0x4
 101:	72 0e                	jb     111 <vmx_enable+0x46>
 103:	48 c7 c0 00 00 00 80 	mov    $0xffffffff80000000,%rax
 10a:	48 2b 05 00 00 00 00 	sub    0x0(%rip),%rax        # 111 <vmx_enable+0x46>
			10d: R_X86_64_PC32	page_offset_base-0x4
 111:	49 01 c4             	add    %rax,%r12
 114:	0f 20 e0             	mov    %cr4,%rax
 117:	0f ba e0 0d          	bt     $0xd,%eax
 11b:	73 1d                	jae    13a <vmx_enable+0x6f>
 11d:	f0 ff 05 00 00 00 00 	lock incl 0x0(%rip)        # 124 <vmx_enable+0x59>
			120: R_X86_64_PC32	.bss+0x2207c
 124:	be f0 ff ff ff       	mov    $0xfffffff0,%esi
 129:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12c: R_X86_64_32S	.rodata.str1.8+0xd0
 130:	e8 00 00 00 00       	callq  135 <vmx_enable+0x6a>
			131: R_X86_64_PC32	printk-0x4
 135:	e9 13 01 00 00       	jmpq   24d <vmx_enable+0x182>
 13a:	bb 3a 00 00 00       	mov    $0x3a,%ebx
 13f:	48 89 df             	mov    %rbx,%rdi
 142:	ff 14 25 00 00 00 00 	callq  *0x0
			145: R_X86_64_32S	pv_ops+0xc8
 149:	48 83 3d 00 00 00 00 	cmpq   $0x1,0x0(%rip)        # 151 <vmx_enable+0x86>
 150:	01 
			14c: R_X86_64_PC32	tboot-0x5
 151:	48 89 c1             	mov    %rax,%rcx
 154:	48 19 d2             	sbb    %rdx,%rdx
 157:	48 83 e2 fe          	and    $0xfffffffffffffffe,%rdx
 15b:	48 83 c2 07          	add    $0x7,%rdx
 15f:	48 21 d1             	and    %rdx,%rcx
 162:	48 39 ca             	cmp    %rcx,%rdx
 165:	74 13                	je     17a <vmx_enable+0xaf>
 167:	48 09 c2             	or     %rax,%rdx
 16a:	48 89 df             	mov    %rbx,%rdi
 16d:	89 d6                	mov    %edx,%esi
 16f:	48 c1 ea 20          	shr    $0x20,%rdx
 173:	ff 14 25 00 00 00 00 	callq  *0x0
			176: R_X86_64_32S	pv_ops+0xd0
 17a:	ff 14 25 00 00 00 00 	callq  *0x0
			17d: R_X86_64_32S	pv_ops+0x118
 181:	48 89 c3             	mov    %rax,%rbx
 184:	ff 14 25 00 00 00 00 	callq  *0x0
			187: R_X86_64_32S	pv_ops+0x128
 18b:	65 48 8b 05 00 00 00 	mov    %gs:0x0(%rip),%rax        # 193 <vmx_enable+0xc8>
 192:	00 
			18f: R_X86_64_PC32	cpu_tlbstate+0x14
 193:	48 89 c7             	mov    %rax,%rdi
 196:	48 81 cf 00 20 00 00 	or     $0x2000,%rdi
 19d:	48 39 f8             	cmp    %rdi,%rax
 1a0:	74 0f                	je     1b1 <vmx_enable+0xe6>
 1a2:	65 48 89 3d 00 00 00 	mov    %rdi,%gs:0x0(%rip)        # 1aa <vmx_enable+0xdf>
 1a9:	00 
			1a6: R_X86_64_PC32	cpu_tlbstate+0x14
 1aa:	ff 14 25 00 00 00 00 	callq  *0x0
			1ad: R_X86_64_32S	pv_ops+0x40
 1b1:	48 89 df             	mov    %rbx,%rdi
 1b4:	ff 14 25 00 00 00 00 	callq  *0x0
			1b7: R_X86_64_32S	pv_ops+0x120
 1bb:	4c 89 65 d0          	mov    %r12,-0x30(%rbp)
 1bf:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
 1c3:	f3 0f c7 30          	vmxon  (%rax)
 1c7:	f6 05 00 00 00 00 04 	testb  $0x4,0x0(%rip)        # 1ce <vmx_enable+0x103>
			1c9: R_X86_64_PC32	vmx_capability+0x10
 1ce:	74 22                	je     1f2 <vmx_enable+0x127>
 1d0:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
 1d7:	00 
 1d8:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
 1df:	00 
 1e0:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
 1e4:	b9 02 00 00 00       	mov    $0x2,%ecx
 1e9:	66 0f 38 81 08       	invvpid (%rax),%rcx
 1ee:	77 02                	ja     1f2 <vmx_enable+0x127>
 1f0:	0f 0b                	ud2    
 1f2:	f6 05 00 00 00 00 04 	testb  $0x4,0x0(%rip)        # 1f9 <vmx_enable+0x12e>
			1f4: R_X86_64_PC32	vmx_capability+0xe
 1f9:	74 22                	je     21d <vmx_enable+0x152>
 1fb:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
 202:	00 
 203:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
 20a:	00 
 20b:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
 20f:	b9 02 00 00 00       	mov    $0x2,%ecx
 214:	66 0f 38 80 08       	invept (%rax),%rcx
 219:	77 02                	ja     21d <vmx_enable+0x152>
 21b:	0f 0b                	ud2    
 21d:	65 c7 05 00 00 00 00 	movl   $0x1,%gs:0x0(%rip)        # 228 <vmx_enable+0x15d>
 224:	01 00 00 00 
			220: R_X86_64_PC32	.data..percpu-0x8
 228:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
			22b: R_X86_64_32S	.data..percpu+0x8
 22f:	65 48 03 05 00 00 00 	add    %gs:0x0(%rip),%rax        # 237 <vmx_enable+0x16c>
 236:	00 
			233: R_X86_64_PC32	this_cpu_off-0x4
 237:	0f 01 00             	sgdt   (%rax)
 23a:	65 8b 35 00 00 00 00 	mov    %gs:0x0(%rip),%esi        # 241 <vmx_enable+0x176>
			23d: R_X86_64_PC32	cpu_number-0x4
 241:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			244: R_X86_64_32S	.rodata.str1.1+0x42
 248:	e8 00 00 00 00       	callq  24d <vmx_enable+0x182>
			249: R_X86_64_PC32	printk-0x4
 24d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 251:	65 48 33 04 25 28 00 	xor    %gs:0x28,%rax
 258:	00 00 
 25a:	74 05                	je     261 <vmx_enable+0x196>
 25c:	e8 00 00 00 00       	callq  261 <vmx_enable+0x196>
			25d: R_X86_64_PC32	__stack_chk_fail-0x4
 261:	48 83 c4 20          	add    $0x20,%rsp
 265:	5b                   	pop    %rbx
 266:	41 5c                	pop    %r12
 268:	5d                   	pop    %rbp
 269:	c3                   	retq   

000000000000026a <vmx_init>:
vmx_init():
 26a:	e8 00 00 00 00       	callq  26f <vmx_init+0x5>
			26b: R_X86_64_PC32	__fentry__-0x4
 26f:	55                   	push   %rbp
 270:	48 89 e5             	mov    %rsp,%rbp
 273:	41 57                	push   %r15
 275:	41 56                	push   %r14
 277:	4c 8d 75 c8          	lea    -0x38(%rbp),%r14
 27b:	41 55                	push   %r13
 27d:	4c 8d 6d c4          	lea    -0x3c(%rbp),%r13
 281:	41 54                	push   %r12
 283:	4c 8d 65 c0          	lea    -0x40(%rbp),%r12
 287:	53                   	push   %rbx
 288:	48 8d 5d bc          	lea    -0x44(%rbp),%rbx
 28c:	4c 89 ea             	mov    %r13,%rdx
 28f:	4c 89 f1             	mov    %r14,%rcx
 292:	48 83 ec 20          	sub    $0x20,%rsp
 296:	4c 89 e6             	mov    %r12,%rsi
 299:	c7 45 bc 01 00 00 00 	movl   $0x1,-0x44(%rbp)
 2a0:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
 2a7:	00 00 
 2a9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 2ad:	31 c0                	xor    %eax,%eax
 2af:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
 2b6:	48 89 df             	mov    %rbx,%rdi
 2b9:	ff 14 25 00 00 00 00 	callq  *0x0
			2bc: R_X86_64_32S	pv_ops+0xc0
 2c0:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 2c3:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 2c7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 2cb:	a8 20                	test   $0x20,%al
 2cd:	75 16                	jne    2e5 <vmx_init+0x7b>
 2cf:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2d2: R_X86_64_32S	.rodata.str1.8+0x2d8
 2d6:	bb fb ff ff ff       	mov    $0xfffffffb,%ebx
 2db:	e8 00 00 00 00       	callq  2e0 <vmx_init+0x76>
			2dc: R_X86_64_PC32	printk-0x4
 2e0:	e9 d8 04 00 00       	jmpq   7bd <vmx_init+0x553>
 2e5:	48 c7 c6 c0 13 00 82 	mov    $0xffffffff820013c0,%rsi
 2ec:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			2ef: R_X86_64_32S	.data..cacheline_aligned
 2f3:	b9 70 02 00 00       	mov    $0x270,%ecx
 2f8:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
 2fa:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
 2fe:	ba 81 04 00 00       	mov    $0x481,%edx
 303:	be a0 00 00 00       	mov    $0xa0,%esi
 308:	bf 09 00 00 00       	mov    $0x9,%edi
 30d:	48 c7 05 00 00 00 00 	movq   $0x0,0x0(%rip)        # 318 <vmx_init+0xae>
 314:	00 00 00 00 
			310: R_X86_64_PC32	.data..cacheline_aligned+0x1d8
			314: R_X86_64_32S	.text+0x5f0
 318:	48 c7 05 00 00 00 00 	movq   $0x0,0x0(%rip)        # 323 <vmx_init+0xb9>
 31f:	00 00 00 00 
			31b: R_X86_64_PC32	.data..cacheline_aligned+0x730
			31f: R_X86_64_32S	.text+0x630
 323:	48 c7 05 00 00 00 00 	movq   $0x0,0x0(%rip)        # 32e <vmx_init+0xc4>
 32a:	00 00 00 00 
			326: R_X86_64_PC32	.data..cacheline_aligned+0x1b8
			32a: R_X86_64_32S	.text+0x1280
 32e:	48 c7 05 00 00 00 00 	movq   $0x0,0x0(%rip)        # 339 <vmx_init+0xcf>
 335:	00 00 00 00 
			331: R_X86_64_PC32	.data..cacheline_aligned+0x1c0
			335: R_X86_64_32S	.text+0x1210
 339:	48 c7 05 00 00 00 00 	movq   $0x0,0x0(%rip)        # 344 <vmx_init+0xda>
 340:	00 00 00 00 
			33c: R_X86_64_PC32	.data..cacheline_aligned+0x1c8
			340: R_X86_64_32S	.text+0x11a0
 344:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
 34b:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%rbp)
 352:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)
 359:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
 360:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%rbp)
 367:	e8 f7 fc ff ff       	callq  63 <adjust_vmx_controls>
 36c:	85 c0                	test   %eax,%eax
 36e:	0f 88 e3 01 00 00    	js     557 <vmx_init+0x2ed>
 374:	bf 81 04 00 00       	mov    $0x481,%edi
 379:	ff 14 25 00 00 00 00 	callq  *0x0
			37c: R_X86_64_32S	pv_ops+0xc8
 380:	48 0f ba e0 37       	bt     $0x37,%rax
 385:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 38c <vmx_init+0x122>
			388: R_X86_64_PC32	vmx_capability-0x4
 38c:	73 13                	jae    3a1 <vmx_init+0x137>
 38e:	bf 8d 04 00 00       	mov    $0x48d,%edi
 393:	ff 14 25 00 00 00 00 	callq  *0x0
			396: R_X86_64_32S	pv_ops+0xc8
 39a:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 3a1 <vmx_init+0x137>
			39d: R_X86_64_PC32	vmx_capability-0x4
 3a1:	48 89 d9             	mov    %rbx,%rcx
 3a4:	ba 82 04 00 00       	mov    $0x482,%edx
 3a9:	be 00 00 20 90       	mov    $0x90200000,%esi
 3ae:	bf 08 82 99 00       	mov    $0x998208,%edi
 3b3:	e8 ab fc ff ff       	callq  63 <adjust_vmx_controls>
 3b8:	85 c0                	test   %eax,%eax
 3ba:	0f 88 97 01 00 00    	js     557 <vmx_init+0x2ed>
 3c0:	8b 45 bc             	mov    -0x44(%rbp),%eax
 3c3:	0f ba e0 15          	bt     $0x15,%eax
 3c7:	73 08                	jae    3d1 <vmx_init+0x167>
 3c9:	25 ff ff e7 ff       	and    $0xffe7ffff,%eax
 3ce:	89 45 bc             	mov    %eax,-0x44(%rbp)
 3d1:	83 7d bc 00          	cmpl   $0x0,-0x44(%rbp)
 3d5:	78 2b                	js     402 <vmx_init+0x198>
 3d7:	f6 45 c0 02          	testb  $0x2,-0x40(%rbp)
 3db:	74 43                	je     420 <vmx_init+0x1b6>
 3dd:	81 65 bc ff 7d fe ff 	andl   $0xfffe7dff,-0x44(%rbp)
 3e4:	bf 8c 04 00 00       	mov    $0x48c,%edi
 3e9:	ff 14 25 00 00 00 00 	callq  *0x0
			3ec: R_X86_64_32S	pv_ops+0xc8
 3f0:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 3f6 <vmx_init+0x18c>
			3f2: R_X86_64_PC32	vmx_capability+0xc
 3f6:	48 c1 e8 20          	shr    $0x20,%rax
 3fa:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 400 <vmx_init+0x196>
			3fc: R_X86_64_PC32	vmx_capability+0x10
 400:	eb 1e                	jmp    420 <vmx_init+0x1b6>
 402:	31 ff                	xor    %edi,%edi
 404:	4c 89 e1             	mov    %r12,%rcx
 407:	ba 8b 04 00 00       	mov    $0x48b,%edx
 40c:	be 7a 13 00 00       	mov    $0x137a,%esi
 411:	e8 4d fc ff ff       	callq  63 <adjust_vmx_controls>
 416:	85 c0                	test   %eax,%eax
 418:	0f 88 39 01 00 00    	js     557 <vmx_init+0x2ed>
 41e:	eb b7                	jmp    3d7 <vmx_init+0x16d>
 420:	bf 8b 04 00 00       	mov    $0x48b,%edi
 425:	ff 14 25 00 00 00 00 	callq  *0x0
			428: R_X86_64_32S	pv_ops+0xc8
 42c:	ba 83 04 00 00       	mov    $0x483,%edx
 431:	4c 89 e9             	mov    %r13,%rcx
 434:	be 00 80 00 00       	mov    $0x8000,%esi
 439:	bf 00 02 00 00       	mov    $0x200,%edi
 43e:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 445 <vmx_init+0x1db>
			441: R_X86_64_PC32	vmx_capability+0x4
 445:	e8 19 fc ff ff       	callq  63 <adjust_vmx_controls>
 44a:	85 c0                	test   %eax,%eax
 44c:	0f 88 05 01 00 00    	js     557 <vmx_init+0x2ed>
 452:	31 f6                	xor    %esi,%esi
 454:	31 ff                	xor    %edi,%edi
 456:	4c 89 f1             	mov    %r14,%rcx
 459:	ba 84 04 00 00       	mov    $0x484,%edx
 45e:	e8 00 fc ff ff       	callq  63 <adjust_vmx_controls>
 463:	85 c0                	test   %eax,%eax
 465:	0f 88 ec 00 00 00    	js     557 <vmx_init+0x2ed>
 46b:	bf 80 04 00 00       	mov    $0x480,%edi
 470:	ff 14 25 00 00 00 00 	callq  *0x0
			473: R_X86_64_32S	pv_ops+0xc8
 477:	49 89 c1             	mov    %rax,%r9
 47a:	49 c1 e9 20          	shr    $0x20,%r9
 47e:	45 89 c8             	mov    %r9d,%r8d
 481:	41 81 e0 ff 1f 00 00 	and    $0x1fff,%r8d
 488:	41 81 f8 00 10 00 00 	cmp    $0x1000,%r8d
 48f:	0f 87 c2 00 00 00    	ja     557 <vmx_init+0x2ed>
 495:	41 0f ba e1 10       	bt     $0x10,%r9d
 49a:	0f 82 b7 00 00 00    	jb     557 <vmx_init+0x2ed>
 4a0:	41 c1 e9 12          	shr    $0x12,%r9d
 4a4:	41 83 e1 0f          	and    $0xf,%r9d
 4a8:	41 83 f9 06          	cmp    $0x6,%r9d
 4ac:	0f 85 a5 00 00 00    	jne    557 <vmx_init+0x2ed>
 4b2:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 4b8 <vmx_init+0x24e>
			4b4: R_X86_64_PC32	.bss+0x44
 4b8:	8b 45 b8             	mov    -0x48(%rbp),%eax
 4bb:	83 ca ff             	or     $0xffffffff,%edx
 4be:	44 89 05 00 00 00 00 	mov    %r8d,0x0(%rip)        # 4c5 <vmx_init+0x25b>
			4c1: R_X86_64_PC32	.bss+0x3c
 4c5:	4d 63 c0             	movslq %r8d,%r8
 4c8:	be 00 80 00 00       	mov    $0x8000,%esi
 4cd:	49 ff c8             	dec    %r8
 4d0:	bf 84 04 00 00       	mov    $0x484,%edi
 4d5:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 4db <vmx_init+0x271>
			4d7: R_X86_64_PC32	.bss+0x48
 4db:	8b 45 bc             	mov    -0x44(%rbp),%eax
 4de:	49 c1 e8 0c          	shr    $0xc,%r8
 4e2:	49 0f bd d0          	bsr    %r8,%rdx
 4e6:	ff c2                	inc    %edx
 4e8:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 4ee <vmx_init+0x284>
			4ea: R_X86_64_PC32	.bss+0x4c
 4ee:	8b 45 c0             	mov    -0x40(%rbp),%eax
 4f1:	89 15 00 00 00 00    	mov    %edx,0x0(%rip)        # 4f7 <vmx_init+0x28d>
			4f3: R_X86_64_PC32	.bss+0x40
 4f7:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 4fd <vmx_init+0x293>
			4f9: R_X86_64_PC32	.bss+0x50
 4fd:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 500:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 506 <vmx_init+0x29c>
			502: R_X86_64_PC32	.bss+0x54
 506:	8b 45 c8             	mov    -0x38(%rbp),%eax
 509:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 50f <vmx_init+0x2a5>
			50b: R_X86_64_PC32	.bss+0x58
 50f:	e8 96 fb ff ff       	callq  aa <allow_1_setting>
 514:	31 d2                	xor    %edx,%edx
 516:	84 c0                	test   %al,%al
 518:	74 12                	je     52c <vmx_init+0x2c2>
 51a:	be 00 00 20 00       	mov    $0x200000,%esi
 51f:	bf 83 04 00 00       	mov    $0x483,%edi
 524:	e8 81 fb ff ff       	callq  aa <allow_1_setting>
 529:	0f b6 d0             	movzbl %al,%edx
 52c:	8a 05 00 00 00 00    	mov    0x0(%rip),%al        # 532 <vmx_init+0x2c8>
			52e: R_X86_64_PC32	vmx_capability+0x14
 532:	83 e2 01             	and    $0x1,%edx
 535:	83 e0 fe             	and    $0xfffffffe,%eax
 538:	09 d0                	or     %edx,%eax
 53a:	8b 15 00 00 00 00    	mov    0x0(%rip),%edx        # 540 <vmx_init+0x2d6>
			53c: R_X86_64_PC32	.bss+0x50
 540:	88 05 00 00 00 00    	mov    %al,0x0(%rip)        # 546 <vmx_init+0x2dc>
			542: R_X86_64_PC32	vmx_capability+0x14
 546:	f6 c2 20             	test   $0x20,%dl
 549:	75 16                	jne    561 <vmx_init+0x2f7>
 54b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			54e: R_X86_64_32S	.rodata.str1.8+0x300
 552:	e8 00 00 00 00       	callq  557 <vmx_init+0x2ed>
			553: R_X86_64_PC32	printk-0x4
 557:	bb fb ff ff ff       	mov    $0xfffffffb,%ebx
 55c:	e9 5c 02 00 00       	jmpq   7bd <vmx_init+0x553>
 561:	80 e2 02             	and    $0x2,%dl
 564:	75 16                	jne    57c <vmx_init+0x312>
 566:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			569: R_X86_64_32S	.rodata.str1.8+0x330
 56d:	bb fb ff ff ff       	mov    $0xfffffffb,%ebx
 572:	e8 00 00 00 00       	callq  577 <vmx_init+0x30d>
			573: R_X86_64_PC32	printk-0x4
 577:	e9 41 02 00 00       	jmpq   7bd <vmx_init+0x553>
 57c:	a8 01                	test   $0x1,%al
 57e:	75 16                	jne    596 <vmx_init+0x32c>
 580:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			583: R_X86_64_32S	.rodata.str1.8+0x360
 587:	bb fb ff ff ff       	mov    $0xfffffffb,%ebx
 58c:	e8 00 00 00 00       	callq  591 <vmx_init+0x327>
			58d: R_X86_64_PC32	printk-0x4
 591:	e9 27 02 00 00       	jmpq   7bd <vmx_init+0x553>
 596:	31 f6                	xor    %esi,%esi
 598:	bf c0 0c 00 00       	mov    $0xcc0,%edi
 59d:	bb f4 ff ff ff       	mov    $0xfffffff4,%ebx
 5a2:	e8 00 00 00 00       	callq  5a7 <vmx_init+0x33d>
			5a3: R_X86_64_PC32	__get_free_pages-0x4
 5a7:	48 85 c0             	test   %rax,%rax
 5aa:	48 89 c2             	mov    %rax,%rdx
 5ad:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 5b4 <vmx_init+0x34a>
			5b0: R_X86_64_PC32	.bss+0x2005c
 5b4:	0f 84 03 02 00 00    	je     7bd <vmx_init+0x553>
 5ba:	b0 ff                	mov    $0xff,%al
 5bc:	48 89 d7             	mov    %rdx,%rdi
 5bf:	b9 00 10 00 00       	mov    $0x1000,%ecx
 5c4:	f3 aa                	rep stos %al,%es:(%rdi)
 5c6:	b8 00 01 00 00       	mov    $0x100,%eax
 5cb:	48 0f b3 82 00 04 00 	btr    %rax,0x400(%rdx)
 5d2:	00 
 5d3:	48 0f b3 82 00 0c 00 	btr    %rax,0xc00(%rdx)
 5da:	00 
 5db:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 5e2 <vmx_init+0x378>
			5de: R_X86_64_PC32	.bss+0x2005c
 5e2:	ba 01 01 00 00       	mov    $0x101,%edx
 5e7:	48 0f b3 90 00 04 00 	btr    %rdx,0x400(%rax)
 5ee:	00 
 5ef:	48 0f b3 90 00 0c 00 	btr    %rdx,0xc00(%rax)
 5f6:	00 
 5f7:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 5fe <vmx_init+0x394>
			5fa: R_X86_64_PC32	.bss+0x2005c
 5fe:	ba 11 06 00 00       	mov    $0x611,%edx
 603:	48 0f b3 10          	btr    %rdx,(%rax)
 607:	48 0f b3 90 00 08 00 	btr    %rdx,0x800(%rax)
 60e:	00 
 60f:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 616 <vmx_init+0x3ac>
			612: R_X86_64_PC32	.bss+0x2005c
 616:	ba 06 06 00 00       	mov    $0x606,%edx
 61b:	48 0f b3 10          	btr    %rdx,(%rax)
 61f:	48 0f b3 90 00 08 00 	btr    %rdx,0x800(%rax)
 626:	00 
 627:	f6 05 00 00 00 00 01 	testb  $0x1,0x0(%rip)        # 62e <vmx_init+0x3c4>
			629: R_X86_64_PC32	vmx_capability+0x8
 62e:	74 30                	je     660 <vmx_init+0x3f6>
 630:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 637 <vmx_init+0x3cd>
			633: R_X86_64_PC32	.bss+0x2005c
 637:	ba 02 08 00 00       	mov    $0x802,%edx
 63c:	48 0f b3 10          	btr    %rdx,(%rax)
 640:	48 0f b3 90 00 08 00 	btr    %rdx,0x800(%rax)
 647:	00 
 648:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 64f <vmx_init+0x3e5>
			64b: R_X86_64_PC32	.bss+0x2005c
 64f:	ba 0b 08 00 00       	mov    $0x80b,%edx
 654:	48 0f b3 10          	btr    %rdx,(%rax)
 658:	48 0f b3 90 00 08 00 	btr    %rdx,0x800(%rax)
 65f:	00 
 660:	e8 00 00 00 00       	callq  665 <vmx_init+0x3fb>
			661: R_X86_64_PC32	dune_apic_init-0x4
 665:	84 c0                	test   %al,%al
 667:	75 16                	jne    67f <vmx_init+0x415>
 669:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			66c: R_X86_64_32S	.rodata.str1.8+0x398
 670:	bb fb ff ff ff       	mov    $0xfffffffb,%ebx
 675:	e8 00 00 00 00       	callq  67a <vmx_init+0x410>
			676: R_X86_64_PC32	printk-0x4
 67a:	e9 3e 01 00 00       	jmpq   7bd <vmx_init+0x553>
 67f:	49 c7 c4 00 00 00 00 	mov    $0x0,%r12
			682: R_X86_64_32S	.bss+0x10060
 686:	31 c0                	xor    %eax,%eax
 688:	b9 00 40 00 00       	mov    $0x4000,%ecx
 68d:	4c 89 e7             	mov    %r12,%rdi
 690:	48 c7 c3 00 00 00 00 	mov    $0x0,%rbx
			693: R_X86_64_32S	.bss+0x60
 697:	41 83 cd ff          	or     $0xffffffff,%r13d
 69b:	f3 ab                	rep stos %eax,%es:(%rdi)
 69d:	b9 00 40 00 00       	mov    $0x4000,%ecx
 6a2:	48 89 df             	mov    %rbx,%rdi
 6a5:	f3 ab                	rep stos %eax,%es:(%rdi)
 6a7:	44 89 ef             	mov    %r13d,%edi
 6aa:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			6ad: R_X86_64_32S	__cpu_possible_mask
 6b1:	e8 00 00 00 00       	callq  6b6 <vmx_init+0x44c>
			6b2: R_X86_64_PC32	cpumask_next-0x4
 6b6:	3b 05 00 00 00 00    	cmp    0x0(%rip),%eax        # 6bc <vmx_init+0x452>
			6b8: R_X86_64_PC32	nr_cpu_ids-0x4
 6bc:	41 89 c5             	mov    %eax,%r13d
 6bf:	73 54                	jae    715 <vmx_init+0x4ab>
 6c1:	31 f6                	xor    %esi,%esi
 6c3:	bf c0 0c 00 00       	mov    $0xcc0,%edi
 6c8:	4d 63 f5             	movslq %r13d,%r14
 6cb:	e8 00 00 00 00       	callq  6d0 <vmx_init+0x466>
			6cc: R_X86_64_PC32	__get_free_pages-0x4
 6d0:	48 85 c0             	test   %rax,%rax
 6d3:	4b 89 04 f4          	mov    %rax,(%r12,%r14,8)
 6d7:	0f 84 be 00 00 00    	je     79b <vmx_init+0x531>
 6dd:	45 31 ff             	xor    %r15d,%r15d
 6e0:	48 89 c7             	mov    %rax,%rdi
 6e3:	b9 00 04 00 00       	mov    $0x400,%ecx
 6e8:	44 89 f8             	mov    %r15d,%eax
 6eb:	31 f6                	xor    %esi,%esi
 6ed:	f3 ab                	rep stos %eax,%es:(%rdi)
 6ef:	bf c0 0c 00 00       	mov    $0xcc0,%edi
 6f4:	e8 00 00 00 00       	callq  6f9 <vmx_init+0x48f>
			6f5: R_X86_64_PC32	__get_free_pages-0x4
 6f9:	48 85 c0             	test   %rax,%rax
 6fc:	4a 89 04 f3          	mov    %rax,(%rbx,%r14,8)
 700:	0f 84 95 00 00 00    	je     79b <vmx_init+0x531>
 706:	48 89 c7             	mov    %rax,%rdi
 709:	b9 00 04 00 00       	mov    $0x400,%ecx
 70e:	44 89 f8             	mov    %r15d,%eax
 711:	f3 ab                	rep stos %eax,%es:(%rdi)
 713:	eb 92                	jmp    6a7 <vmx_init+0x43d>
 715:	f0 80 0d 00 00 00 00 	lock orb $0x1,0x0(%rip)        # 71d <vmx_init+0x4b3>
 71c:	01 
			718: R_X86_64_PC32	.bss+0x2007b
 71d:	83 cb ff             	or     $0xffffffff,%ebx
 720:	49 c7 c4 00 00 00 00 	mov    $0x0,%r12
			723: R_X86_64_32S	.data..percpu+0x18
 727:	89 df                	mov    %ebx,%edi
 729:	48 c7 c6 00 00 00 00 	mov    $0x0,%rsi
			72c: R_X86_64_32S	__cpu_possible_mask
 730:	e8 00 00 00 00       	callq  735 <vmx_init+0x4cb>
			731: R_X86_64_PC32	cpumask_next-0x4
 735:	3b 05 00 00 00 00    	cmp    0x0(%rip),%eax        # 73b <vmx_init+0x4d1>
			737: R_X86_64_PC32	nr_cpu_ids-0x4
 73b:	89 c3                	mov    %eax,%ebx
 73d:	73 2c                	jae    76b <vmx_init+0x501>
 73f:	89 df                	mov    %ebx,%edi
 741:	e8 00 00 00 00       	callq  746 <vmx_init+0x4dc>
			742: R_X86_64_PC32	.text+0x89c
 746:	48 85 c0             	test   %rax,%rax
 749:	75 0c                	jne    757 <vmx_init+0x4ed>
 74b:	e8 00 00 00 00       	callq  750 <vmx_init+0x4e6>
			74c: R_X86_64_PC32	.text+0x98c
 750:	bb f4 ff ff ff       	mov    $0xfffffff4,%ebx
 755:	eb 66                	jmp    7bd <vmx_init+0x553>
 757:	48 63 cb             	movslq %ebx,%rcx
 75a:	4c 89 e2             	mov    %r12,%rdx
 75d:	48 8b 0c cd 00 00 00 	mov    0x0(,%rcx,8),%rcx
 764:	00 
			761: R_X86_64_32S	__per_cpu_offset
 765:	48 89 04 11          	mov    %rax,(%rcx,%rdx,1)
 769:	eb bc                	jmp    727 <vmx_init+0x4bd>
 76b:	31 f6                	xor    %esi,%esi
 76d:	ba 01 00 00 00       	mov    $0x1,%edx
 772:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			775: R_X86_64_32S	.init.text+0xcb
 779:	c7 05 00 00 00 00 00 	movl   $0x0,0x0(%rip)        # 783 <vmx_init+0x519>
 780:	00 00 00 
			77b: R_X86_64_PC32	.bss+0x22078
 783:	bb f0 ff ff ff       	mov    $0xfffffff0,%ebx
 788:	e8 00 00 00 00       	callq  78d <vmx_init+0x523>
			789: R_X86_64_PC32	on_each_cpu-0x4
 78d:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 793 <vmx_init+0x529>
			78f: R_X86_64_PC32	.bss+0x2207c
 793:	85 c0                	test   %eax,%eax
 795:	75 0e                	jne    7a5 <vmx_init+0x53b>
 797:	31 db                	xor    %ebx,%ebx
 799:	eb 22                	jmp    7bd <vmx_init+0x553>
 79b:	bb f4 ff ff ff       	mov    $0xfffffff4,%ebx
 7a0:	e8 00 00 00 00       	callq  7a5 <vmx_init+0x53b>
			7a1: R_X86_64_PC32	.text+0x91c
 7a5:	ba 01 00 00 00       	mov    $0x1,%edx
 7aa:	31 f6                	xor    %esi,%esi
 7ac:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			7af: R_X86_64_32S	.text+0xc50
 7b3:	e8 00 00 00 00       	callq  7b8 <vmx_init+0x54e>
			7b4: R_X86_64_PC32	on_each_cpu-0x4
 7b8:	e8 00 00 00 00       	callq  7bd <vmx_init+0x553>
			7b9: R_X86_64_PC32	.text+0x98c
 7bd:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
 7c1:	65 48 33 34 25 28 00 	xor    %gs:0x28,%rsi
 7c8:	00 00 
 7ca:	89 d8                	mov    %ebx,%eax
 7cc:	74 05                	je     7d3 <vmx_init+0x569>
 7ce:	e8 00 00 00 00       	callq  7d3 <vmx_init+0x569>
			7cf: R_X86_64_PC32	__stack_chk_fail-0x4
 7d3:	48 83 c4 20          	add    $0x20,%rsp
 7d7:	5b                   	pop    %rbx
 7d8:	41 5c                	pop    %r12
 7da:	41 5d                	pop    %r13
 7dc:	41 5e                	pop    %r14
 7de:	41 5f                	pop    %r15
 7e0:	5d                   	pop    %rbp
 7e1:	c3                   	retq   

Déassemblage de la section .exit.text :

0000000000000000 <cleanup_module>:
dune_exit():
   0:	55                   	push   %rbp
   1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4: R_X86_64_32S	.data+0x60
   8:	48 89 e5             	mov    %rsp,%rbp
   b:	e8 00 00 00 00       	callq  10 <cleanup_module+0x10>
			c: R_X86_64_PC32	perf_unregister_guest_info_callbacks-0x4
  10:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			13: R_X86_64_32S	.data
  17:	e8 00 00 00 00       	callq  1c <cleanup_module+0x1c>
			18: R_X86_64_PC32	misc_deregister-0x4
  1c:	e8 00 00 00 00       	callq  21 <cleanup_module+0x21>
			1d: R_X86_64_PC32	vmx_exit-0x4
  21:	5d                   	pop    %rbp
  22:	c3                   	retq   

Déassemblage de la section .text.unlikely :

0000000000000000 <vmx_dump_cpu>:
vmx_dump_cpu():
   0:	e8 00 00 00 00       	callq  5 <vmx_dump_cpu+0x5>
			1: R_X86_64_PC32	__fentry__-0x4
   5:	55                   	push   %rbp
   6:	48 89 e5             	mov    %rsp,%rbp
   9:	41 55                	push   %r13
   b:	41 54                	push   %r12
   d:	53                   	push   %rbx
   e:	48 89 fb             	mov    %rdi,%rbx
  11:	e8 00 00 00 00       	callq  16 <vmx_dump_cpu+0x16>
			12: R_X86_64_PC32	.text+0xd7c
  16:	ba 1e 68 00 00       	mov    $0x681e,%edx
  1b:	0f 78 d0             	vmread %rdx,%rax
  1e:	ba 1c 68 00 00       	mov    $0x681c,%edx
  23:	48 89 83 08 01 00 00 	mov    %rax,0x108(%rbx)
  2a:	0f 78 d0             	vmread %rdx,%rax
  2d:	ba 20 68 00 00       	mov    $0x6820,%edx
  32:	48 89 83 a8 00 00 00 	mov    %rax,0xa8(%rbx)
  39:	0f 78 d0             	vmread %rdx,%rax
  3c:	48 8d bb 48 02 00 00 	lea    0x248(%rbx),%rdi
  43:	49 89 c4             	mov    %rax,%r12
  46:	e8 00 00 00 00       	callq  4b <vmx_dump_cpu+0x4b>
			47: R_X86_64_PC32	.text+0xa0c
  4b:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			4e: R_X86_64_32S	.rodata.str1.8+0xf8
  52:	e8 00 00 00 00       	callq  57 <vmx_dump_cpu+0x57>
			53: R_X86_64_PC32	printk-0x4
  57:	8b 53 14             	mov    0x14(%rbx),%edx
  5a:	8b 73 10             	mov    0x10(%rbx),%esi
  5d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			60: R_X86_64_32S	.rodata.str1.1+0x60
  64:	e8 00 00 00 00       	callq  69 <vmx_dump_cpu+0x69>
			65: R_X86_64_PC32	printk-0x4
  69:	48 8b b3 08 01 00 00 	mov    0x108(%rbx),%rsi
  70:	4c 89 e2             	mov    %r12,%rdx
  73:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			76: R_X86_64_32S	.rodata.str1.8+0x118
  7a:	e8 00 00 00 00       	callq  7f <vmx_dump_cpu+0x7f>
			7b: R_X86_64_PC32	printk-0x4
  7f:	48 8b 93 90 00 00 00 	mov    0x90(%rbx),%rdx
  86:	48 8b b3 88 00 00 00 	mov    0x88(%rbx),%rsi
  8d:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			90: R_X86_64_32S	.rodata.str1.8+0x140
  94:	e8 00 00 00 00       	callq  99 <vmx_dump_cpu+0x99>
			95: R_X86_64_PC32	printk-0x4
  99:	48 8b 93 a0 00 00 00 	mov    0xa0(%rbx),%rdx
  a0:	48 8b b3 98 00 00 00 	mov    0x98(%rbx),%rsi
  a7:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			aa: R_X86_64_32S	.rodata.str1.8+0x168
  ae:	e8 00 00 00 00       	callq  b3 <vmx_dump_cpu+0xb3>
			af: R_X86_64_PC32	printk-0x4
  b3:	48 8b 93 b0 00 00 00 	mov    0xb0(%rbx),%rdx
  ba:	48 8b b3 a8 00 00 00 	mov    0xa8(%rbx),%rsi
  c1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			c4: R_X86_64_32S	.rodata.str1.8+0x190
  c8:	e8 00 00 00 00       	callq  cd <vmx_dump_cpu+0xcd>
			c9: R_X86_64_PC32	printk-0x4
  cd:	48 8b 93 c0 00 00 00 	mov    0xc0(%rbx),%rdx
  d4:	48 8b b3 b8 00 00 00 	mov    0xb8(%rbx),%rsi
  db:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			de: R_X86_64_32S	.rodata.str1.8+0x1b8
  e2:	e8 00 00 00 00       	callq  e7 <vmx_dump_cpu+0xe7>
			e3: R_X86_64_PC32	printk-0x4
  e7:	48 8b 93 d0 00 00 00 	mov    0xd0(%rbx),%rdx
  ee:	48 8b b3 c8 00 00 00 	mov    0xc8(%rbx),%rsi
  f5:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			f8: R_X86_64_32S	.rodata.str1.8+0x1e0
  fc:	e8 00 00 00 00       	callq  101 <vmx_dump_cpu+0x101>
			fd: R_X86_64_PC32	printk-0x4
 101:	48 8b 93 e0 00 00 00 	mov    0xe0(%rbx),%rdx
 108:	48 8b b3 d8 00 00 00 	mov    0xd8(%rbx),%rsi
 10f:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			112: R_X86_64_32S	.rodata.str1.8+0x208
 116:	e8 00 00 00 00       	callq  11b <vmx_dump_cpu+0x11b>
			117: R_X86_64_PC32	printk-0x4
 11b:	48 8b 93 f0 00 00 00 	mov    0xf0(%rbx),%rdx
 122:	48 8b b3 e8 00 00 00 	mov    0xe8(%rbx),%rsi
 129:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			12c: R_X86_64_32S	.rodata.str1.8+0x230
 130:	e8 00 00 00 00       	callq  135 <vmx_dump_cpu+0x135>
			131: R_X86_64_PC32	printk-0x4
 135:	48 8b 93 00 01 00 00 	mov    0x100(%rbx),%rdx
 13c:	48 8b b3 f8 00 00 00 	mov    0xf8(%rbx),%rsi
 143:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			146: R_X86_64_32S	.rodata.str1.8+0x258
 14a:	e8 00 00 00 00       	callq  14f <vmx_dump_cpu+0x14f>
			14b: R_X86_64_PC32	printk-0x4
 14f:	ba 10 68 00 00       	mov    $0x6810,%edx
 154:	0f 78 d0             	vmread %rdx,%rax
 157:	ba 0e 68 00 00       	mov    $0x680e,%edx
 15c:	48 89 c1             	mov    %rax,%rcx
 15f:	0f 78 d0             	vmread %rdx,%rax
 162:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			165: R_X86_64_32S	.rodata.str1.8+0x280
 169:	48 89 c6             	mov    %rax,%rsi
 16c:	48 89 ca             	mov    %rcx,%rdx
 16f:	e8 00 00 00 00       	callq  174 <vmx_dump_cpu+0x174>
			170: R_X86_64_PC32	printk-0x4
 174:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			177: R_X86_64_32S	.rodata.str1.8+0x2b0
 17b:	49 c7 c4 00 00 00 00 	mov    $0x0,%r12
			17e: R_X86_64_32S	.rodata.str1.1+0x8b
 182:	e8 00 00 00 00       	callq  187 <vmx_dump_cpu+0x187>
			183: R_X86_64_PC32	printk-0x4
 187:	4c 8b ab a8 00 00 00 	mov    0xa8(%rbx),%r13
 18e:	31 db                	xor    %ebx,%ebx
 190:	49 8d 44 1d 00       	lea    0x0(%r13,%rbx,1),%rax
 195:	e8 00 00 00 00       	callq  19a <vmx_dump_cpu+0x19a>
			196: R_X86_64_PC32	__get_user_8-0x4
 19a:	85 c0                	test   %eax,%eax
 19c:	48 89 de             	mov    %rbx,%rsi
 19f:	74 0e                	je     1af <vmx_dump_cpu+0x1af>
 1a1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1a4: R_X86_64_32S	.rodata.str1.1+0x77
 1a8:	e8 00 00 00 00       	callq  1ad <vmx_dump_cpu+0x1ad>
			1a9: R_X86_64_PC32	printk-0x4
 1ad:	eb 08                	jmp    1b7 <vmx_dump_cpu+0x1b7>
 1af:	4c 89 e7             	mov    %r12,%rdi
 1b2:	e8 00 00 00 00       	callq  1b7 <vmx_dump_cpu+0x1b7>
			1b3: R_X86_64_PC32	printk-0x4
 1b7:	48 83 c3 08          	add    $0x8,%rbx
 1bb:	48 83 fb 60          	cmp    $0x60,%rbx
 1bf:	75 cf                	jne    190 <vmx_dump_cpu+0x190>
 1c1:	48 c7 c7 00 00 00 00 	mov    $0x0,%rdi
			1c4: R_X86_64_32S	.rodata.str1.1+0xa6
 1c8:	e8 00 00 00 00       	callq  1cd <vmx_dump_cpu+0x1cd>
			1c9: R_X86_64_PC32	printk-0x4
 1cd:	5b                   	pop    %rbx
 1ce:	41 5c                	pop    %r12
 1d0:	41 5d                	pop    %r13
 1d2:	5d                   	pop    %rbp
 1d3:	c3                   	retq   

Déassemblage de la section .altinstr_aux :

0000000000000000 <.altinstr_aux>:
   0:	f6 05 00 00 00 00 40 	testb  $0x40,0x0(%rip)        # 7 <.altinstr_aux+0x7>
			2: R_X86_64_PC32	boot_cpu_data+0x5b
   7:	0f 85 00 00 00 00    	jne    d <.altinstr_aux+0xd>
			9: R_X86_64_PC32	.text+0x1384
   d:	e9 00 00 00 00       	jmpq   12 <.altinstr_aux+0x12>
			e: R_X86_64_PC32	.text+0x138b
  12:	f6 05 00 00 00 00 04 	testb  $0x4,0x0(%rip)        # 19 <.altinstr_aux+0x19>
			14: R_X86_64_PC32	boot_cpu_data+0x22
  19:	0f 85 00 00 00 00    	jne    1f <.altinstr_aux+0x1f>
			1b: R_X86_64_PC32	.text+0x1390
  1f:	e9 00 00 00 00       	jmpq   24 <dune_fpu_fpregs_owner_ctx+0x4>
			20: R_X86_64_PC32	.text+0x13c9
